{"version":3,"sources":["webpack://pdf.js/web/viewer.js","webpack://pdf.js/web/app_options.js","webpack://pdf.js/web/viewer_compatibility.js","webpack://pdf.js/web/app.js","webpack://pdf.js/web/ui_utils.js","webpack://pdf.js/web/pdfjs.js","webpack://pdf.js/web/pdf_cursor_tools.js","webpack://pdf.js/web/grab_to_pan.js","webpack://pdf.js/web/pdf_rendering_queue.js","webpack://pdf.js/web/pdf_sidebar.js","webpack://pdf.js/web/overlay_manager.js","webpack://pdf.js/web/password_prompt.js","webpack://pdf.js/web/pdf_attachment_viewer.js","webpack://pdf.js/web/base_tree_viewer.js","webpack://pdf.js/web/pdf_document_properties.js","webpack://pdf.js/web/pdf_find_bar.js","webpack://pdf.js/web/pdf_find_controller.js","webpack://pdf.js/web/pdf_find_utils.js","webpack://pdf.js/web/pdf_history.js","webpack://pdf.js/web/pdf_layer_viewer.js","webpack://pdf.js/web/pdf_link_service.js","webpack://pdf.js/web/pdf_outline_viewer.js","webpack://pdf.js/web/pdf_presentation_mode.js","webpack://pdf.js/web/pdf_sidebar_resizer.js","webpack://pdf.js/web/pdf_thumbnail_viewer.js","webpack://pdf.js/web/pdf_thumbnail_view.js","webpack://pdf.js/web/pdf_viewer.js","webpack://pdf.js/web/base_viewer.js","webpack://pdf.js/web/annotation_layer_builder.js","webpack://pdf.js/web/pdf_page_view.js","webpack://pdf.js/web/text_layer_builder.js","webpack://pdf.js/web/secondary_toolbar.js","webpack://pdf.js/web/pdf_single_page_viewer.js","webpack://pdf.js/web/toolbar.js","webpack://pdf.js/web/view_history.js","webpack://pdf.js/web/genericcom.js","webpack://pdf.js/web/preferences.js","webpack://pdf.js/web/download_manager.js","webpack://pdf.js/web/genericl10n.js","webpack://pdf.js/external/webL10n/l10n.js","webpack://pdf.js/web/generic_scripting.js","webpack://pdf.js/web/pdf_print_service.js","webpack://pdf.js/webpack/bootstrap","webpack://pdf.js/webpack/startup"],"names":["pdfjsVersion","pdfjsBuild","window","require","appContainer","document","mainContainer","viewerContainer","eventBus","toolbar","container","numPages","pageNumber","scaleSelectContainer","scaleSelect","customScaleOption","previous","next","zoomIn","zoomOut","viewFind","openFile","print","presentationModeButton","download","viewBookmark","secondaryToolbar","toggleButton","toolbarButtonContainer","openFileButton","printButton","downloadButton","viewBookmarkButton","firstPageButton","lastPageButton","pageRotateCwButton","pageRotateCcwButton","cursorSelectToolButton","cursorHandToolButton","scrollVerticalButton","scrollHorizontalButton","scrollWrappedButton","spreadNoneButton","spreadOddButton","spreadEvenButton","documentPropertiesButton","fullscreen","contextFirstPage","contextLastPage","contextPageRotateCw","contextPageRotateCcw","sidebar","outerContainer","thumbnailButton","outlineButton","attachmentsButton","layersButton","thumbnailView","outlineView","attachmentsView","layersView","sidebarResizer","resizer","findBar","bar","findField","highlightAllCheckbox","caseSensitiveCheckbox","entireWordCheckbox","findMsg","findResultsCount","findPreviousButton","findNextButton","passwordOverlay","overlayName","label","input","submitButton","cancelButton","documentProperties","closeButton","fields","fileName","fileSize","title","author","subject","keywords","creationDate","modificationDate","creator","producer","version","pageCount","pageSize","linearized","errorWrapper","errorMessage","errorMoreInfo","moreInfoButton","lessInfoButton","printContainer","openFileInputName","debuggerScriptPath","config","getViewerConfiguration","event","source","parent","console","PDFViewerApplication","webViewerLoad","OptionKind","VIEWER","API","WORKER","PREFERENCE","defaultOptions","cursorToolOnLoad","value","kind","defaultUrl","defaultZoomValue","disableHistory","disablePageLabels","enablePermissions","enablePrintAutoRotate","enableScripting","enableWebGL","externalLinkRel","externalLinkTarget","historyUpdateUrl","ignoreDestinationZoom","imageResourcesPath","maxCanvasPixels","compatibility","viewerCompatibilityParams","pdfBugEnabled","printResolution","renderer","renderInteractiveForms","sidebarViewOnLoad","scrollModeOnLoad","spreadModeOnLoad","textLayerMode","useOnlyCssZoom","viewerCssTheme","viewOnLoad","cMapPacked","cMapUrl","disableAutoFetch","disableFontFace","disableRange","disableStream","docBaseUrl","fontExtraProperties","isEvalSupported","maxImageSize","pdfBug","verbosity","workerPort","workerSrc","navigator","userOptions","Object","constructor","userOption","defaultOption","options","valueType","Number","compatibilityParams","userAgent","platform","maxTouchPoints","isAndroid","isIOS","isIOSChrome","DEFAULT_SCALE_DELTA","DISABLE_AUTO_FETCH_LOADING_BAR_TIMEOUT","FORCE_PAGES_LOADED_TIMEOUT","WHEEL_ZOOM_DISABLED_TIMEOUT","ENABLE_PERMISSIONS_CLASS","ViewOnLoad","UNKNOWN","PREVIOUS","INITIAL","ViewerCssTheme","AUTOMATIC","LIGHT","DARK","KNOWN_VERSIONS","KNOWN_GENERATORS","shadow","ctrlKey","metaKey","initialBookmark","_initializedCapability","fellback","appConfig","pdfDocument","pdfLoadingTask","printService","pdfViewer","pdfThumbnailViewer","pdfRenderingQueue","pdfPresentationMode","pdfDocumentProperties","pdfLinkService","pdfHistory","pdfSidebar","pdfSidebarResizer","pdfOutlineViewer","pdfAttachmentViewer","pdfLayerViewer","pdfCursorTools","store","downloadManager","overlayManager","preferences","l10n","isInitialViewSet","downloadComplete","isViewerEmbedded","url","baseUrl","externalServices","_boundEvents","documentInfo","metadata","_contentDispositionFilename","_contentLength","triggerDelayedFallback","_saveInProgress","_wheelUnusedTicks","_idleCallbacks","_scriptingInstance","AppOptions","LinkTarget","reason","hash","hashParams","parseQueryString","waitOn","loadFakeWorker","TextLayerMode","viewer","enabled","loadAndEnablePDFBug","locale","dir","_forceCssTheme","cssTheme","styleSheet","cssRules","i","ii","rule","darkRules","isInAutomation","findController","linkService","renderingQueue","contextMenuItems","elements","run","newScale","Math","zoomReset","PDFPrintServiceFactory","doc","support","initPassiveLoading","setTitleUsingUrl","getPDFFileNameFromURL","decodeURIComponent","getFilenameFromUrl","setTitle","_cancelIdleCallbacks","scripting","events","promises","webViewerResetPermissions","PDFBug","Promise","workerParameters","GlobalWorkerOptions","parameters","file","apiParameters","key","args","loadingTask","getDocument","loaded","exception","message","loadingErrorMessage","msg","sourceEventType","filename","err","downloadByUrl","blob","type","save","data","_delayedFallback","fallback","error","moreInfoText","build","moreInfo","stack","line","errorWrapperConfig","parts","progress","percent","level","isNaN","clearTimeout","load","firstPagePromise","pageLayoutPromise","pageModePromise","openActionPromise","baseDocumentUrl","annotationStorage","storedPromise","page","zoom","scrollLeft","scrollTop","rotation","sidebarView","SidebarView","scrollMode","ScrollMode","spreadMode","SpreadMode","pdfPage","fingerprint","initialDest","openAction","stored","parseInt","pageMode","apiPageModeToSidebarView","pageLayout","apiPageLayoutToSpreadMode","resolve","setTimeout","pagesPromise","onePageRendered","outline","attachments","optionalContentConfig","callback","timeout","metadataLoaded","updateFromSandbox","element","dispatchEventInSandbox","dispatchEventName","generateRandomStringForSandbox","appInfo","language","docInfo","baseURL","filesize","URL","markInfo","tagged","triggerAutoPrint","javaScript","js","UNSUPPORTED_FEATURES","AutoPrintRegExp","info","infoTitle","pdfTitle","metadataTitle","contentDispositionFilename","versionId","generatorId","generator","formType","labels","numLabels","_initializePdfHistory","resetHistory","updateUrl","JSON","explicitDest","permissions","PermissionFlag","setInitialView","setRotation","angle","isValidRotation","setViewerModes","isValidScrollMode","isValidSpreadMode","cleanup","RendererType","forceRendering","beforePrint","printMessage","notReadyMessage","pagesOverview","optionalContentConfigPromise","afterPrint","rotatePages","newRotation","requestPresentationMode","triggerPrinting","bindEvents","bindWindowEvents","passive","unbindEvents","unbindWindowEvents","accumulateWheelTicks","ticks","wholeTicks","HOSTED_VIEWER_ORIGINS","validateFileURL","viewerOrigin","origin","protocol","ex","loadScript","PDFWorker","OPS","Stats","pageView","pageStats","queryString","params","fileInput","files","evt","webViewerOpenFileViaURL","xhr","view","webViewerSave","state","PresentationModeState","location","href","currentPage","loading","RenderingStates","currentScaleValue","webViewerFileInputChange","originalUrl","fileReader","buffer","webViewerOpenFile","webViewerDownloadOrSave","query","phraseSearch","caseSensitive","entireWord","highlightAll","findPrevious","result","setZoomDisabledTimeout","zoomDisabledTimeout","supportedMouseWheelZoomModifierKeys","previousScale","delta","normalizeWheelEventDirection","WheelEvent","PIXELS_PER_LINE_SCALE","currentScale","scaleCorrectionFactor","rect","dx","dy","handled","ensureViewerFocused","cmd","isViewerInPresentationMode","findState","curElement","curElementTagName","turnPage","turnOnlyIfPageFit","CursorTool","instance","supportsPrinting","createPrintService","CSS_UNITS","DEFAULT_SCALE_VALUE","DEFAULT_SCALE","MIN_SCALE","MAX_SCALE","UNKNOWN_SCALE","MAX_AUTO_SCALE","SCROLLBAR_PADDING","VERTICAL_PADDING","LOADINGBAR_END_OFFSET_VAR","NORMAL","CHANGING","FULLSCREEN","CANVAS","SVG","DISABLE","ENABLE","ENABLE_ENHANCE","VERTICAL","HORIZONTAL","WRAPPED","NONE","ODD","EVEN","name","NullL10n","formatL10nValue","devicePixelRatio","backingStoreRatio","ctx","pixelRatio","sx","sy","scaled","skipOverflowHiddenElements","offsetY","offsetX","getComputedStyle","spot","debounceScroll","rAF","currentX","viewAreaElement","lastX","currentY","lastY","right","down","_eventHandler","param","minIndex","maxIndex","items","condition","currentIndex","currentItem","xinv","limit","x_","x","a","b","c","d","p","q","r","changeOrientation","rotate","width","height","index","elt","views","pageTop","sortByVisibility","horizontal","rtl","top","scrollEl","bottom","left","elementBottom","elementLeft","elementRight","visible","numViews","firstVisibleElementInd","binarySearchFirstItem","backtrackBeforeAllVisibleElements","lastEdge","currentWidth","currentHeight","viewWidth","viewHeight","viewRight","viewBottom","hiddenHeight","hiddenWidth","id","y","first","last","pc","defaultFilename","isDataSchema","reURI","reFilename","splitURI","suggestedFilename","MOUSE_DOM_DELTA_PIXEL_MODE","MOUSE_DOM_DELTA_LINE_MODE","MOUSE_PIXELS_PER_LINE","MOUSE_LINES_PER_PAGE","mode","size","WaitOnType","EVENT","TIMEOUT","delay","target","eventHandler","handler","timeoutHandler","animationStarted","on","external","off","dispatch","eventListeners","Array","externalListeners","listener","_on","_off","units","_updateBar","progressSize","clamp","setWidth","scrollbarWidth","hide","show","moved","len","arr","write","read","curRoot","curActiveOrFocused","allObjects","actions","obj","crypto","nameString","btoa","String","action","pdfjsLib","__non_webpack_require__","module","SELECT","HAND","ZOOM","switchTool","tool","disableActiveTool","_dispatchEvent","_addEventListeners","previouslyActive","overlay","GrabToPan","CSS_CLASS_GRAB","activate","deactivate","toggle","ignoreTarget","node","_onmousedown","focusedElement","_onmousemove","isLeftMouseReleased","xDiff","yDiff","behavior","_endPan","prefix","matchesSelector","isNotIEorIsIE10plus","chrome","isChrome15OrOpera15plus","isSafari6plus","CLEANUP_TIMEOUT","RUNNING","PAUSED","FINISHED","setViewer","setThumbnailViewer","isHighestPriority","renderHighestPriority","getHighestPriority","visibleViews","numVisible","nextPageIndex","previousPageIndex","isViewFinished","renderView","UI_NOTIFICATION_CLASS","THUMBS","OUTLINE","ATTACHMENTS","LAYERS","disableNotification","reset","switchView","forceOpen","_switchView","isViewChanged","shouldForceRendering","open","close","_forceRendering","_updateThumbnailViewer","pagesCount","pageIndex","_showUINotification","_hideUINotification","removeNotification","onTreeLoaded","button","callerCloseMethod","canForceClose","_keyDown","_closeThroughCaller","e","PasswordResponses","promptString","verify","password","setUpdateCallback","PdfFileRegExp","keepRenderedCapability","attachmentsCount","_bindPdfLink","blobUrl","viewerUrl","encodeURIComponent","_bindLink","contentType","render","names","fragment","item","div","content","_appendAttachment","renderedPromise","_normalizeTextContent","removeNullCharacters","_addToggleButton","hidden","toggler","shouldShowAll","_toggleTreeItem","root","_toggleAllTreeItems","DEFAULT_FIELD_CONTENT","NON_METRIC_LOCALES","US_PAGE_NAMES","METRIC_PAGE_NAMES","isPortrait","pageNames","freezeFieldData","writable","enumerable","configurable","currentPageNumber","pagesRotation","getPageSizeInches","_currentPageNumber","_pagesRotation","contentLength","setDocument","_reset","_updateUI","kb","size_kb","size_b","size_mb","pageSizeInches","isPortraitOrientation","sizeInches","sizeMillimeters","pageName","rawName","getPageName","exactMillimeters","intMillimeters","dateObject","PDFDateString","date","time","_parseLinearization","isLinearized","MATCHES_COUNT_LIMIT","dispatchEvent","updateUIState","status","FindState","updateResultsCount","current","total","matchesCountMsg","_adjustWidth","findbarHeight","inputContainerHeight","FOUND","NOT_FOUND","PENDING","FIND_TIMEOUT","MATCH_SCROLL_OFFSET_TOP","MATCH_SCROLL_OFFSET_LEFT","CHARACTERS_TO_NORMALIZE","normalizationRegex","replace","executeCommand","findbarClosed","pendingTimeout","scrollMatchIntoView","matchIndex","scrollIntoView","pageIdx","matchIdx","wrapped","normalize","_shouldDirtyMatch","_prepareMatches","currentElem","matchesWithLength","nextElem","prevElem","isSubTerm","matches","matchesLength","_isEntireWord","startIdx","getCharacterType","endIdx","_calculatePhraseMatch","queryLen","pageContent","_calculateWordMatch","queryArray","subquery","subqueryLen","match","matchLength","skipped","_calculateMatch","pageMatchesCount","_extractText","promise","extractTextCapability","normalizeWhitespace","textContent","textItems","strBuf","j","jj","_updatePage","_updateAllPages","_nextMatch","currentPageIndex","offset","numPageMatches","_matchesReady","numMatches","_nextPageMatch","_advanceOffsetPage","_updateMatch","found","previousPage","_onFindBarClose","_requestMatchesCount","_updateUIResultsCount","matchesCount","_updateUIState","rawQuery","CharacterType","SPACE","ALPHA_LETTER","PUNCT","HAN_LETTER","KATAKANA_LETTER","HIRAGANA_LETTER","HALFWIDTH_KATAKANA_LETTER","THAI_LETTER","charCode","isAlphabeticalScript","isAscii","isAsciiSpace","isAsciiAlpha","isAsciiDigit","isThai","isHan","isKatakana","isHiragana","isHalfwidthKatakana","HASH_CHANGE_TIMEOUT","POSITION_UPDATED_THRESHOLD","UPDATE_VIEWAREA_TIMEOUT","onPagesLoaded","initialize","reInitialized","getCurrentHash","destination","push","namedDest","forceReplace","isDestArraysEqual","dest","pushPage","pushCurrentPosition","back","forward","_pushOrReplaceState","shouldReplace","newState","uid","newUrl","_tryPushCurrentPosition","temporary","position","_isValidState","checkReload","performance","perfEntry","_updateInternalState","removeTemporary","_parseCurrentHash","checkNameddest","unescape","nameddest","_updateViewarea","_popState","newHash","hashChanged","waitOnEventOrTimeout","_pageHide","_bindEvents","updateViewarea","popState","pageHide","_unbindEvents","destHash","second","isEntryEqual","firstDest","secondDest","setVisibility","groups","queue","layersCount","hasAnyNesting","levelData","itemsDiv","groupId","group","externalLinkEnabled","setHistory","navigateTo","_goToDestinationHelper","destRef","destArray","goToPage","val","getDestinationHash","escape","str","getAnchorUrl","setHash","zoomArgs","zoomArg","zoomArgNumber","parseFloat","allowNegativeOffset","isValidExplicitDestination","executeNamedAction","cachePageRef","refStr","pageRef","_cachedPageNumber","isPageVisible","isPageCached","destLength","allowNull","addLinkAttributes","newWindow","rel","_setStyles","count","totalCount","nestedCount","nestedItems","outlineCount","DELAY_BEFORE_RESETTING_SWITCH_IN_PROGRESS","DELAY_BEFORE_HIDING_CONTROLS","ACTIVE_SELECTOR","CONTROLS_SELECTOR","MOUSE_SCROLL_COOLDOWN_TIME","PAGE_SWITCH_THRESHOLD","SWIPE_MIN_DISTANCE_THRESHOLD","SWIPE_ANGLE_THRESHOLD","request","Element","_mouseWheel","normalizeWheelEventDelta","currentTime","storedTime","totalDelta","success","_goToPreviousPage","_goToNextPage","_notifyStateChange","active","switchInProgress","_setSwitchInProgress","_resetSwitchInProgress","_enter","_exit","_mouseDown","isInternalLink","_contextMenu","_showControls","_hideControls","_resetMouseScrollState","_touchSwipe","startX","startY","endX","endY","absAngle","_addWindowListeners","_removeWindowListeners","_fullscreenChange","_addFullscreenChangeListeners","_removeFullscreenChangeListeners","SIDEBAR_WIDTH_VAR","SIDEBAR_MIN_WIDTH","SIDEBAR_RESIZING_CLASS","_updateWidth","maxWidth","_mouseMove","_mouseUp","updated","THUMBNAIL_SCROLL_MARGIN","THUMBNAIL_SELECTED_CLASS","watchScroll","_scrollUpdated","getThumbnail","_getVisibleThumbs","scrollThumbnailIntoView","prevThumbnailView","visibleThumbs","numVisibleThumbs","shouldScroll","TempImageFactory","_resetView","firstPdfPage","viewport","scale","checkSetImageDisabled","pageNum","thumbnail","defaultViewport","disableCanvasToImageConversion","firstThumbnailView","_cancelRendering","setPageLabels","_ensurePdfPageLoaded","thumbView","MAX_NUM_SCALING_STEPS","THUMBNAIL_CANVAS_BORDER_WIDTH","THUMBNAIL_WIDTH","tempCanvasCache","getCanvas","tempCanvas","alpha","destroyCanvas","anchor","ring","borderAdjustment","setPdfPage","totalRotation","childNodes","update","cancelRendering","_getPageDrawContext","canvas","outputScale","getOutputScale","transform","_convertCanvasToImage","className","image","draw","finishRenderTask","renderTask","drawViewport","renderContinueCallback","cont","renderContext","canvasContext","resultPromise","pageCached","setImage","img","reducedWidth","reducedHeight","reducedImage","reducedImageCtx","setPageLabel","_scrollIntoView","pageSpot","pageDiv","_getVisiblePages","_updateHelper","currentId","stillFullyVisible","visiblePages","DEFAULT_CACHE_SIZE","pageIdsToKeep","iMax","pagesToKeep","moveToEndOfArray","viewerVersion","getPageView","_setCurrentPageNumber","resetCurrentPageView","pageLabel","_onePageRenderedOrForceFetch","textLayerFactory","annotationLayerFactory","firstPageView","getPagesLeft","_scrollUpdate","_setScaleUpdatePages","noScroll","preset","newValue","isSameScale","presetValue","_setScale","noPadding","hPadding","vPadding","pageWidthScale","pageHeightScale","horizontalScale","_resetCurrentPageView","pageLabelToPageNumber","scrollPageIntoView","pageWidth","pageHeight","widthScale","heightScale","boundingRect","_updateLocation","normalizedScaleValue","firstPage","pdfOpenParams","currentPageView","topLeft","intLeft","intTop","numVisiblePages","newCacheSize","containsElement","focus","_getCurrentVisiblePage","currentlyVisiblePages","scrollAhead","createTextLayerBuilder","enhanceTextSelection","createAnnotationLayerBuilder","hasJSActionsPromise","getPagesOverview","_updateScrollMode","_updateSpreadMode","pages","parity","spread","intent","hasJSActions","annotations","dontFlip","AnnotationLayer","cancel","MAX_CANVAS_PIXELS","destroy","_resetZoomLayer","removeFromDOM","zoomLayerCanvas","keepZoomLayer","keepAnnotations","currentZoomLayerNode","currentAnnotationNode","cssTransform","timestamp","isScalingRestricted","redrawAnnotations","relativeRotation","absRotation","scaleX","scaleY","textLayerViewport","textRelativeRotation","textAbsRotation","textLayerDiv","transX","transY","getPagePoint","canvasWrapper","textLayer","finishPaintTask","paintTask","readableStream","paintOnCanvas","renderCapability","onRenderContinue","isCanvasHidden","showCanvas","actualSizeViewport","pixelsInViewport","maxScale","sfx","approximateFraction","sfy","roundToDivide","paintOnSvg","cancelled","ensureNotCancelled","opList","svgGfx","svg","wrapper","EXPAND_DIVS_TIMEOUT","_finishRendering","endOfContent","numTextDivs","textLayerFrag","textContentStream","textDivs","textContentItemsStr","setTextContentStream","setTextContent","_convertMatches","iIndex","end","m","mm","begin","divIdx","_renderMatches","isSelectedPage","selectedMatchIdx","prevEnd","infinity","appendTextToDiv","span","i0","i1","isSelected","highlightSuffix","beginText","n0","n1","_updateMatches","clearedUntilDivIdx","n","pageMatches","pageMatchesLength","_bindMouse","expandDivsTimer","adjustTop","divBounds","eventName","eventDetails","lastPage","pageRotateCw","pageRotateCcw","setPageNumber","setPagesCount","_bindClickListeners","details","_bindCursorToolsListener","buttons","_bindScrollModeListener","isScrollModeHorizontal","scrollModeChanged","_bindSpreadModeListener","spreadModeChanged","_setMaxHeight","_ensurePageViewVisible","previousPageView","viewerNodes","scrolledDown","PAGE_NUMBER_LOADING_INDICATOR","SCALE_SELECT_CONTAINER_WIDTH","SCALE_SELECT_WIDTH","setPageScale","_bindListeners","self","resetNumPages","pageScale","customScale","predefinedValueFound","option","updateLoadingIndicatorState","pageNumberInput","predefinedValuesPromise","overflow","DEFAULT_VIEW_HISTORY_CACHE_SIZE","cacheSize","databaseStr","database","branch","localStorage","properties","values","GenericCom","prefs","defaultValue","prefValue","defaultType","downloadUrl","createValidAbsoluteUrl","downloadData","createObjectURL","webL10n","gL10nData","gTextData","gTextProp","gLanguage","gMacros","gReadyState","gAsyncResourceLoading","script","l10nId","l10nArgs","onSuccess","onFailure","text","dictionary","reBlank","reComment","reSection","reImport","reSplit","entries","rawText","currentLang","genericLang","lang","skipLang","parsedRawLinesCallback","loadImport","tmp","evalString","nextEntry","xhrLoadText","parseRawLines","parsedPropertiesCallback","parseProperties","prop","successCallback","clear","langLinks","getL10nResourceLinks","langCount","dict","getL10nDictionary","defaultLocale","anyCaseLang","onResourceLoaded","gResourceCount","link","parseResource","resource","locales2rules","list","start","pluralRules","isBetween","getPluralRules","rv","substIndexes","substArguments","reIndex","reMatch","macroName","paramName","macro","reArgs","arg","getL10nAttributes","getL10nData","getChildElementCount","children","l","textNode","getTranslatableChildren","elementCount","translateElement","get","getData","getText","getLanguage","setLanguage","loadLocale","getDirection","rtlList","shortCode","translate","getReadyState","ready","sandbox","activeService","scratchCanvas","PRINT_UNITS","PDFPrintService","layout","body","hasEqualPageSizes","ensureOverlay","renderPages","renderNextPage","renderProgress","renderPage","useRenderedPage","printItem","performPrint","throwIfInactive","activeServiceOnEntry","abort","progressContainer","progressBar","progressPerc","stopPropagationIfNeeded","overlayPromise"],"mappings":"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","file":"viewer.js","sourcesContent":["/* Copyright 2016 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppOptions } from \"./app_options.js\";\nimport { PDFViewerApplication } from \"./app.js\";\n\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsVersion =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : void 0;\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsBuild =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : void 0;\n\nwindow.PDFViewerApplication = PDFViewerApplication;\nwindow.PDFViewerApplicationOptions = AppOptions;\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"CHROME\")) {\n  var defaultUrl; // eslint-disable-line no-var\n\n  (function rewriteUrlClosure() {\n    // Run this code outside DOMContentLoaded to make sure that the URL\n    // is rewritten as soon as possible.\n    const queryString = document.location.search.slice(1);\n    const m = /(^|&)file=([^&]*)/.exec(queryString);\n    defaultUrl = m ? decodeURIComponent(m[2]) : \"\";\n\n    // Example: chrome-extension://.../http://example.com/file.pdf\n    const humanReadableUrl = \"/\" + defaultUrl + location.hash;\n    history.replaceState(history.state, \"\", humanReadableUrl);\n    if (top === window) {\n      // eslint-disable-next-line no-undef\n      chrome.runtime.sendMessage(\"showPageAction\");\n    }\n  })();\n}\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  require(\"./firefoxcom.js\");\n  require(\"./firefox_print_service.js\");\n}\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\")) {\n  require(\"./genericcom.js\");\n}\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"CHROME\")) {\n  require(\"./chromecom.js\");\n}\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"CHROME || GENERIC\")) {\n  require(\"./pdf_print_service.js\");\n}\n\nfunction getViewerConfiguration() {\n  return {\n    appContainer: document.body,\n    mainContainer: document.getElementById(\"viewerContainer\"),\n    viewerContainer: document.getElementById(\"viewer\"),\n    eventBus: null,\n    toolbar: {\n      container: document.getElementById(\"toolbarViewer\"),\n      numPages: document.getElementById(\"numPages\"),\n      pageNumber: document.getElementById(\"pageNumber\"),\n      scaleSelectContainer: document.getElementById(\"scaleSelectContainer\"),\n      scaleSelect: document.getElementById(\"scaleSelect\"),\n      customScaleOption: document.getElementById(\"customScaleOption\"),\n      previous: document.getElementById(\"previous\"),\n      next: document.getElementById(\"next\"),\n      zoomIn: document.getElementById(\"zoomIn\"),\n      zoomOut: document.getElementById(\"zoomOut\"),\n      viewFind: document.getElementById(\"viewFind\"),\n      openFile: document.getElementById(\"openFile\"),\n      print: document.getElementById(\"print\"),\n      presentationModeButton: document.getElementById(\"presentationMode\"),\n      download: document.getElementById(\"download\"),\n      viewBookmark: document.getElementById(\"viewBookmark\"),\n    },\n    secondaryToolbar: {\n      toolbar: document.getElementById(\"secondaryToolbar\"),\n      toggleButton: document.getElementById(\"secondaryToolbarToggle\"),\n      toolbarButtonContainer: document.getElementById(\n        \"secondaryToolbarButtonContainer\"\n      ),\n      presentationModeButton: document.getElementById(\n        \"secondaryPresentationMode\"\n      ),\n      openFileButton: document.getElementById(\"secondaryOpenFile\"),\n      printButton: document.getElementById(\"secondaryPrint\"),\n      downloadButton: document.getElementById(\"secondaryDownload\"),\n      viewBookmarkButton: document.getElementById(\"secondaryViewBookmark\"),\n      firstPageButton: document.getElementById(\"firstPage\"),\n      lastPageButton: document.getElementById(\"lastPage\"),\n      pageRotateCwButton: document.getElementById(\"pageRotateCw\"),\n      pageRotateCcwButton: document.getElementById(\"pageRotateCcw\"),\n      cursorSelectToolButton: document.getElementById(\"cursorSelectTool\"),\n      cursorHandToolButton: document.getElementById(\"cursorHandTool\"),\n      scrollVerticalButton: document.getElementById(\"scrollVertical\"),\n      scrollHorizontalButton: document.getElementById(\"scrollHorizontal\"),\n      scrollWrappedButton: document.getElementById(\"scrollWrapped\"),\n      spreadNoneButton: document.getElementById(\"spreadNone\"),\n      spreadOddButton: document.getElementById(\"spreadOdd\"),\n      spreadEvenButton: document.getElementById(\"spreadEven\"),\n      documentPropertiesButton: document.getElementById(\"documentProperties\"),\n    },\n    fullscreen: {\n      contextFirstPage: document.getElementById(\"contextFirstPage\"),\n      contextLastPage: document.getElementById(\"contextLastPage\"),\n      contextPageRotateCw: document.getElementById(\"contextPageRotateCw\"),\n      contextPageRotateCcw: document.getElementById(\"contextPageRotateCcw\"),\n    },\n    sidebar: {\n      // Divs (and sidebar button)\n      outerContainer: document.getElementById(\"outerContainer\"),\n      viewerContainer: document.getElementById(\"viewerContainer\"),\n      toggleButton: document.getElementById(\"sidebarToggle\"),\n      // Buttons\n      thumbnailButton: document.getElementById(\"viewThumbnail\"),\n      outlineButton: document.getElementById(\"viewOutline\"),\n      attachmentsButton: document.getElementById(\"viewAttachments\"),\n      layersButton: document.getElementById(\"viewLayers\"),\n      // Views\n      thumbnailView: document.getElementById(\"thumbnailView\"),\n      outlineView: document.getElementById(\"outlineView\"),\n      attachmentsView: document.getElementById(\"attachmentsView\"),\n      layersView: document.getElementById(\"layersView\"),\n    },\n    sidebarResizer: {\n      outerContainer: document.getElementById(\"outerContainer\"),\n      resizer: document.getElementById(\"sidebarResizer\"),\n    },\n    findBar: {\n      bar: document.getElementById(\"findbar\"),\n      toggleButton: document.getElementById(\"viewFind\"),\n      findField: document.getElementById(\"findInput\"),\n      highlightAllCheckbox: document.getElementById(\"findHighlightAll\"),\n      caseSensitiveCheckbox: document.getElementById(\"findMatchCase\"),\n      entireWordCheckbox: document.getElementById(\"findEntireWord\"),\n      findMsg: document.getElementById(\"findMsg\"),\n      findResultsCount: document.getElementById(\"findResultsCount\"),\n      findPreviousButton: document.getElementById(\"findPrevious\"),\n      findNextButton: document.getElementById(\"findNext\"),\n    },\n    passwordOverlay: {\n      overlayName: \"passwordOverlay\",\n      container: document.getElementById(\"passwordOverlay\"),\n      label: document.getElementById(\"passwordText\"),\n      input: document.getElementById(\"password\"),\n      submitButton: document.getElementById(\"passwordSubmit\"),\n      cancelButton: document.getElementById(\"passwordCancel\"),\n    },\n    documentProperties: {\n      overlayName: \"documentPropertiesOverlay\",\n      container: document.getElementById(\"documentPropertiesOverlay\"),\n      closeButton: document.getElementById(\"documentPropertiesClose\"),\n      fields: {\n        fileName: document.getElementById(\"fileNameField\"),\n        fileSize: document.getElementById(\"fileSizeField\"),\n        title: document.getElementById(\"titleField\"),\n        author: document.getElementById(\"authorField\"),\n        subject: document.getElementById(\"subjectField\"),\n        keywords: document.getElementById(\"keywordsField\"),\n        creationDate: document.getElementById(\"creationDateField\"),\n        modificationDate: document.getElementById(\"modificationDateField\"),\n        creator: document.getElementById(\"creatorField\"),\n        producer: document.getElementById(\"producerField\"),\n        version: document.getElementById(\"versionField\"),\n        pageCount: document.getElementById(\"pageCountField\"),\n        pageSize: document.getElementById(\"pageSizeField\"),\n        linearized: document.getElementById(\"linearizedField\"),\n      },\n    },\n    errorWrapper: {\n      container: document.getElementById(\"errorWrapper\"),\n      errorMessage: document.getElementById(\"errorMessage\"),\n      closeButton: document.getElementById(\"errorClose\"),\n      errorMoreInfo: document.getElementById(\"errorMoreInfo\"),\n      moreInfoButton: document.getElementById(\"errorShowMore\"),\n      lessInfoButton: document.getElementById(\"errorShowLess\"),\n    },\n    printContainer: document.getElementById(\"printContainer\"),\n    openFileInputName: \"fileInput\",\n    debuggerScriptPath: \"./debugger.js\",\n  };\n}\n\nfunction webViewerLoad() {\n  const config = getViewerConfiguration();\n  if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n    Promise.all([\n      import(\"pdfjs-web/genericcom.js\"),\n      import(\"pdfjs-web/pdf_print_service.js\"),\n    ]).then(function ([genericCom, pdfPrintService]) {\n      PDFViewerApplication.run(config);\n    });\n  } else {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"CHROME\")) {\n      AppOptions.set(\"defaultUrl\", defaultUrl);\n    }\n\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\")) {\n      // Give custom implementations of the default viewer a simpler way to\n      // set various `AppOptions`, by dispatching an event once all viewer\n      // files are loaded but *before* the viewer initialization has run.\n      const event = document.createEvent(\"CustomEvent\");\n      event.initCustomEvent(\"webviewerloaded\", true, true, {\n        source: window,\n      });\n      try {\n        // Attempt to dispatch the event at the embedding `document`,\n        // in order to support cases where the viewer is embedded in\n        // a *dynamically* created <iframe> element.\n        parent.document.dispatchEvent(event);\n      } catch (ex) {\n        // The viewer could be in e.g. a cross-origin <iframe> element,\n        // fallback to dispatching the event at the current `document`.\n        console.error(`webviewerloaded: ${ex}`);\n        document.dispatchEvent(event);\n      }\n    }\n\n    PDFViewerApplication.run(config);\n  }\n}\n\nif (\n  document.readyState === \"interactive\" ||\n  document.readyState === \"complete\"\n) {\n  webViewerLoad();\n} else {\n  document.addEventListener(\"DOMContentLoaded\", webViewerLoad, true);\n}\n\nexport { PDFViewerApplication, AppOptions as PDFViewerApplicationOptions };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { viewerCompatibilityParams } from \"./viewer_compatibility.js\";\n\nconst OptionKind = {\n  VIEWER: 0x02,\n  API: 0x04,\n  WORKER: 0x08,\n  PREFERENCE: 0x80,\n};\n\n/**\n * PLEASE NOTE: To avoid introducing unnecessary dependencies, we specify the\n *              values below *explicitly* rather than relying on imported types.\n */\nconst defaultOptions = {\n  cursorToolOnLoad: {\n    /** @type {number} */\n    value: 0,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n  },\n  defaultUrl: {\n    /** @type {string} */\n    value: \"compressed.tracemonkey-pldi-09.pdf\",\n    kind: OptionKind.VIEWER,\n  },\n  defaultZoomValue: {\n    /** @type {string} */\n    value: \"\",\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n  },\n  disableHistory: {\n    /** @type {boolean} */\n    value: false,\n    kind: OptionKind.VIEWER,\n  },\n  disablePageLabels: {\n    /** @type {boolean} */\n    value: false,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n  },\n  /**\n   * The `disablePreferences` is, conditionally, defined below.\n   */\n  enablePermissions: {\n    /** @type {boolean} */\n    value: false,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n  },\n  enablePrintAutoRotate: {\n    /** @type {boolean} */\n    value: false,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n  },\n  enableScripting: {\n    /** @type {boolean} */\n    value: typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"ENABLE_SCRIPTING\"),\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n  },\n  enableWebGL: {\n    /** @type {boolean} */\n    value: false,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n  },\n  externalLinkRel: {\n    /** @type {string} */\n    value: \"noopener noreferrer nofollow\",\n    kind: OptionKind.VIEWER,\n  },\n  externalLinkTarget: {\n    /** @type {number} */\n    value: 0,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n  },\n  historyUpdateUrl: {\n    /** @type {boolean} */\n    value: false,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n  },\n  ignoreDestinationZoom: {\n    /** @type {boolean} */\n    value: false,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n  },\n  imageResourcesPath: {\n    /** @type {string} */\n    value: \"./images/\",\n    kind: OptionKind.VIEWER,\n  },\n  /**\n   * The `locale` is, conditionally, defined below.\n   */\n  maxCanvasPixels: {\n    /** @type {number} */\n    value: 16777216,\n    compatibility: viewerCompatibilityParams.maxCanvasPixels,\n    kind: OptionKind.VIEWER,\n  },\n  pdfBugEnabled: {\n    /** @type {boolean} */\n    value: typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\"),\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n  },\n  printResolution: {\n    /** @type {number} */\n    value: 150,\n    kind: OptionKind.VIEWER,\n  },\n  renderer: {\n    /** @type {string} */\n    value: \"canvas\",\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n  },\n  renderInteractiveForms: {\n    /** @type {boolean} */\n    value: true,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n  },\n  sidebarViewOnLoad: {\n    /** @type {number} */\n    value: -1,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n  },\n  scrollModeOnLoad: {\n    /** @type {number} */\n    value: -1,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n  },\n  spreadModeOnLoad: {\n    /** @type {number} */\n    value: -1,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n  },\n  textLayerMode: {\n    /** @type {number} */\n    value: 1,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n  },\n  useOnlyCssZoom: {\n    /** @type {boolean} */\n    value: false,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n  },\n  viewerCssTheme: {\n    /** @type {number} */\n    value: 0,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n  },\n  viewOnLoad: {\n    /** @type {boolean} */\n    value: 0,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n  },\n\n  cMapPacked: {\n    /** @type {boolean} */\n    value: true,\n    kind: OptionKind.API,\n  },\n  cMapUrl: {\n    /** @type {string} */\n    value:\n      typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")\n        ? \"../external/bcmaps/\"\n        : \"../web/cmaps/\",\n    kind: OptionKind.API,\n  },\n  disableAutoFetch: {\n    /** @type {boolean} */\n    value: false,\n    kind: OptionKind.API + OptionKind.PREFERENCE,\n  },\n  disableFontFace: {\n    /** @type {boolean} */\n    value: false,\n    kind: OptionKind.API + OptionKind.PREFERENCE,\n  },\n  disableRange: {\n    /** @type {boolean} */\n    value: false,\n    kind: OptionKind.API + OptionKind.PREFERENCE,\n  },\n  disableStream: {\n    /** @type {boolean} */\n    value: false,\n    kind: OptionKind.API + OptionKind.PREFERENCE,\n  },\n  docBaseUrl: {\n    /** @type {string} */\n    value: \"\",\n    kind: OptionKind.API,\n  },\n  fontExtraProperties: {\n    /** @type {boolean} */\n    value: false,\n    kind: OptionKind.API,\n  },\n  isEvalSupported: {\n    /** @type {boolean} */\n    value: true,\n    kind: OptionKind.API,\n  },\n  maxImageSize: {\n    /** @type {number} */\n    value: -1,\n    kind: OptionKind.API,\n  },\n  pdfBug: {\n    /** @type {boolean} */\n    value: false,\n    kind: OptionKind.API,\n  },\n  verbosity: {\n    /** @type {number} */\n    value: 1,\n    kind: OptionKind.API,\n  },\n\n  workerPort: {\n    /** @type {Object} */\n    value: null,\n    kind: OptionKind.WORKER,\n  },\n  workerSrc: {\n    /** @type {string} */\n    value:\n      typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")\n        ? \"../src/worker_loader.js\"\n        : \"../build/pdf.worker.js\",\n    kind: OptionKind.WORKER,\n  },\n};\nif (\n  typeof PDFJSDev === \"undefined\" ||\n  PDFJSDev.test(\"!PRODUCTION || (GENERIC && !LIB)\")\n) {\n  defaultOptions.disablePreferences = {\n    /** @type {boolean} */\n    value: false,\n    kind: OptionKind.VIEWER,\n  };\n  defaultOptions.locale = {\n    /** @type {string} */\n    value: typeof navigator !== \"undefined\" ? navigator.language : \"en-US\",\n    kind: OptionKind.VIEWER,\n  };\n  defaultOptions.sandboxBundleSrc = {\n    /** @type {string} */\n    value:\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION && !ENABLE_SCRIPTING\")\n        ? \"../build/dev-sandbox/pdf.sandbox.js\"\n        : \"../build/pdf.sandbox.js\",\n    kind: OptionKind.VIEWER,\n  };\n} else if (PDFJSDev.test(\"CHROME\")) {\n  defaultOptions.sandboxBundleSrc = {\n    /** @type {string} */\n    value: \"../build/pdf.sandbox.js\",\n    kind: OptionKind.VIEWER,\n  };\n}\n\nconst userOptions = Object.create(null);\n\nclass AppOptions {\n  constructor() {\n    throw new Error(\"Cannot initialize AppOptions.\");\n  }\n\n  static get(name) {\n    const userOption = userOptions[name];\n    if (userOption !== undefined) {\n      return userOption;\n    }\n    const defaultOption = defaultOptions[name];\n    if (defaultOption !== undefined) {\n      return defaultOption.compatibility || defaultOption.value;\n    }\n    return undefined;\n  }\n\n  static getAll(kind = null) {\n    const options = Object.create(null);\n    for (const name in defaultOptions) {\n      const defaultOption = defaultOptions[name];\n      if (kind) {\n        if ((kind & defaultOption.kind) === 0) {\n          continue;\n        }\n        if (kind === OptionKind.PREFERENCE) {\n          const value = defaultOption.value,\n            valueType = typeof value;\n\n          if (\n            valueType === \"boolean\" ||\n            valueType === \"string\" ||\n            (valueType === \"number\" && Number.isInteger(value))\n          ) {\n            options[name] = value;\n            continue;\n          }\n          throw new Error(`Invalid type for preference: ${name}`);\n        }\n      }\n      const userOption = userOptions[name];\n      options[name] =\n        userOption !== undefined\n          ? userOption\n          : defaultOption.compatibility || defaultOption.value;\n    }\n    return options;\n  }\n\n  static set(name, value) {\n    userOptions[name] = value;\n  }\n\n  static setAll(options) {\n    for (const name in options) {\n      userOptions[name] = options[name];\n    }\n  }\n\n  static remove(name) {\n    delete userOptions[name];\n  }\n}\n\nexport { AppOptions, OptionKind };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst compatibilityParams = Object.create(null);\nif (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n  const userAgent =\n    (typeof navigator !== \"undefined\" && navigator.userAgent) || \"\";\n  const platform =\n    (typeof navigator !== \"undefined\" && navigator.platform) || \"\";\n  const maxTouchPoints =\n    (typeof navigator !== \"undefined\" && navigator.maxTouchPoints) || 1;\n\n  const isAndroid = /Android/.test(userAgent);\n  const isIOS =\n    /\\b(iPad|iPhone|iPod)(?=;)/.test(userAgent) ||\n    (platform === \"MacIntel\" && maxTouchPoints > 1);\n  const isIOSChrome = /CriOS/.test(userAgent);\n\n  // Checks if possible to use URL.createObjectURL()\n  // Support: IE, Chrome on iOS\n  (function checkOnBlobSupport() {\n    // Sometimes Chrome on iOS loses data created with createObjectURL(),\n    // see issue #8081.\n    if (isIOSChrome) {\n      compatibilityParams.disableCreateObjectURL = true;\n    }\n  })();\n\n  // Limit canvas size to 5 mega-pixels on mobile.\n  // Support: Android, iOS\n  (function checkCanvasSizeLimitation() {\n    if (isIOS || isAndroid) {\n      compatibilityParams.maxCanvasPixels = 5242880;\n    }\n  })();\n}\nconst viewerCompatibilityParams = Object.freeze(compatibilityParams);\n\nexport { viewerCompatibilityParams };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals PDFBug, Stats */\n\nimport {\n  animationStarted,\n  AutoPrintRegExp,\n  DEFAULT_SCALE_VALUE,\n  EventBus,\n  generateRandomStringForSandbox,\n  getActiveOrFocusedElement,\n  getPDFFileNameFromURL,\n  isValidRotation,\n  isValidScrollMode,\n  isValidSpreadMode,\n  MAX_SCALE,\n  MIN_SCALE,\n  noContextMenuHandler,\n  normalizeWheelEventDirection,\n  parseQueryString,\n  PresentationModeState,\n  ProgressBar,\n  RendererType,\n  ScrollMode,\n  SpreadMode,\n  TextLayerMode,\n} from \"./ui_utils.js\";\nimport { AppOptions, OptionKind } from \"./app_options.js\";\nimport {\n  build,\n  createPromiseCapability,\n  getDocument,\n  getFilenameFromUrl,\n  GlobalWorkerOptions,\n  InvalidPDFException,\n  LinkTarget,\n  loadScript,\n  MissingPDFException,\n  OPS,\n  PDFWorker,\n  PermissionFlag,\n  shadow,\n  UnexpectedResponseException,\n  UNSUPPORTED_FEATURES,\n  version,\n} from \"pdfjs-lib\";\nimport { CursorTool, PDFCursorTools } from \"./pdf_cursor_tools.js\";\nimport { PDFRenderingQueue, RenderingStates } from \"./pdf_rendering_queue.js\";\nimport { PDFSidebar, SidebarView } from \"./pdf_sidebar.js\";\nimport { OverlayManager } from \"./overlay_manager.js\";\nimport { PasswordPrompt } from \"./password_prompt.js\";\nimport { PDFAttachmentViewer } from \"./pdf_attachment_viewer.js\";\nimport { PDFDocumentProperties } from \"./pdf_document_properties.js\";\nimport { PDFFindBar } from \"./pdf_find_bar.js\";\nimport { PDFFindController } from \"./pdf_find_controller.js\";\nimport { PDFHistory } from \"./pdf_history.js\";\nimport { PDFLayerViewer } from \"./pdf_layer_viewer.js\";\nimport { PDFLinkService } from \"./pdf_link_service.js\";\nimport { PDFOutlineViewer } from \"./pdf_outline_viewer.js\";\nimport { PDFPresentationMode } from \"./pdf_presentation_mode.js\";\nimport { PDFSidebarResizer } from \"./pdf_sidebar_resizer.js\";\nimport { PDFThumbnailViewer } from \"./pdf_thumbnail_viewer.js\";\nimport { PDFViewer } from \"./pdf_viewer.js\";\nimport { SecondaryToolbar } from \"./secondary_toolbar.js\";\nimport { Toolbar } from \"./toolbar.js\";\nimport { viewerCompatibilityParams } from \"./viewer_compatibility.js\";\nimport { ViewHistory } from \"./view_history.js\";\n\nconst DEFAULT_SCALE_DELTA = 1.1;\nconst DISABLE_AUTO_FETCH_LOADING_BAR_TIMEOUT = 5000; // ms\nconst FORCE_PAGES_LOADED_TIMEOUT = 10000; // ms\nconst WHEEL_ZOOM_DISABLED_TIMEOUT = 1000; // ms\nconst ENABLE_PERMISSIONS_CLASS = \"enablePermissions\";\n\nconst ViewOnLoad = {\n  UNKNOWN: -1,\n  PREVIOUS: 0, // Default value.\n  INITIAL: 1,\n};\n\nconst ViewerCssTheme = {\n  AUTOMATIC: 0, // Default value.\n  LIGHT: 1,\n  DARK: 2,\n};\n\n// Keep these in sync with mozilla-central's Histograms.json.\nconst KNOWN_VERSIONS = [\n  \"1.0\",\n  \"1.1\",\n  \"1.2\",\n  \"1.3\",\n  \"1.4\",\n  \"1.5\",\n  \"1.6\",\n  \"1.7\",\n  \"1.8\",\n  \"1.9\",\n  \"2.0\",\n  \"2.1\",\n  \"2.2\",\n  \"2.3\",\n];\n// Keep these in sync with mozilla-central's Histograms.json.\nconst KNOWN_GENERATORS = [\n  \"acrobat distiller\",\n  \"acrobat pdfwriter\",\n  \"adobe livecycle\",\n  \"adobe pdf library\",\n  \"adobe photoshop\",\n  \"ghostscript\",\n  \"tcpdf\",\n  \"cairo\",\n  \"dvipdfm\",\n  \"dvips\",\n  \"pdftex\",\n  \"pdfkit\",\n  \"itext\",\n  \"prince\",\n  \"quarkxpress\",\n  \"mac os x\",\n  \"microsoft\",\n  \"openoffice\",\n  \"oracle\",\n  \"luradocument\",\n  \"pdf-xchange\",\n  \"antenna house\",\n  \"aspose.cells\",\n  \"fpdf\",\n];\n\nclass DefaultExternalServices {\n  constructor() {\n    throw new Error(\"Cannot initialize DefaultExternalServices.\");\n  }\n\n  static updateFindControlState(data) {}\n\n  static updateFindMatchesCount(data) {}\n\n  static initPassiveLoading(callbacks) {}\n\n  static fallback(data, callback) {}\n\n  static reportTelemetry(data) {}\n\n  static createDownloadManager(options) {\n    throw new Error(\"Not implemented: createDownloadManager\");\n  }\n\n  static createPreferences() {\n    throw new Error(\"Not implemented: createPreferences\");\n  }\n\n  static createL10n(options) {\n    throw new Error(\"Not implemented: createL10n\");\n  }\n\n  static createScripting() {\n    throw new Error(\"Not implemented: createScripting\");\n  }\n\n  static get supportsIntegratedFind() {\n    return shadow(this, \"supportsIntegratedFind\", false);\n  }\n\n  static get supportsDocumentFonts() {\n    return shadow(this, \"supportsDocumentFonts\", true);\n  }\n\n  static get supportedMouseWheelZoomModifierKeys() {\n    return shadow(this, \"supportedMouseWheelZoomModifierKeys\", {\n      ctrlKey: true,\n      metaKey: true,\n    });\n  }\n\n  static get isInAutomation() {\n    return shadow(this, \"isInAutomation\", false);\n  }\n}\n\nconst PDFViewerApplication = {\n  initialBookmark: document.location.hash.substring(1),\n  _initializedCapability: createPromiseCapability(),\n  fellback: false,\n  appConfig: null,\n  pdfDocument: null,\n  pdfLoadingTask: null,\n  printService: null,\n  /** @type {PDFViewer} */\n  pdfViewer: null,\n  /** @type {PDFThumbnailViewer} */\n  pdfThumbnailViewer: null,\n  /** @type {PDFRenderingQueue} */\n  pdfRenderingQueue: null,\n  /** @type {PDFPresentationMode} */\n  pdfPresentationMode: null,\n  /** @type {PDFDocumentProperties} */\n  pdfDocumentProperties: null,\n  /** @type {PDFLinkService} */\n  pdfLinkService: null,\n  /** @type {PDFHistory} */\n  pdfHistory: null,\n  /** @type {PDFSidebar} */\n  pdfSidebar: null,\n  /** @type {PDFSidebarResizer} */\n  pdfSidebarResizer: null,\n  /** @type {PDFOutlineViewer} */\n  pdfOutlineViewer: null,\n  /** @type {PDFAttachmentViewer} */\n  pdfAttachmentViewer: null,\n  /** @type {PDFLayerViewer} */\n  pdfLayerViewer: null,\n  /** @type {PDFCursorTools} */\n  pdfCursorTools: null,\n  /** @type {ViewHistory} */\n  store: null,\n  /** @type {DownloadManager} */\n  downloadManager: null,\n  /** @type {OverlayManager} */\n  overlayManager: null,\n  /** @type {Preferences} */\n  preferences: null,\n  /** @type {Toolbar} */\n  toolbar: null,\n  /** @type {SecondaryToolbar} */\n  secondaryToolbar: null,\n  /** @type {EventBus} */\n  eventBus: null,\n  /** @type {IL10n} */\n  l10n: null,\n  isInitialViewSet: false,\n  downloadComplete: false,\n  isViewerEmbedded: window.parent !== window,\n  url: \"\",\n  baseUrl: \"\",\n  externalServices: DefaultExternalServices,\n  _boundEvents: Object.create(null),\n  documentInfo: null,\n  metadata: null,\n  _contentDispositionFilename: null,\n  _contentLength: null,\n  triggerDelayedFallback: null,\n  _saveInProgress: false,\n  _wheelUnusedTicks: 0,\n  _idleCallbacks: new Set(),\n  _scriptingInstance: null,\n\n  // Called once when the document is loaded.\n  async initialize(appConfig) {\n    this.preferences = this.externalServices.createPreferences();\n    this.appConfig = appConfig;\n\n    await this._readPreferences();\n    await this._parseHashParameters();\n    this._forceCssTheme();\n    await this._initializeL10n();\n\n    if (\n      this.isViewerEmbedded &&\n      AppOptions.get(\"externalLinkTarget\") === LinkTarget.NONE\n    ) {\n      // Prevent external links from \"replacing\" the viewer,\n      // when it's embedded in e.g. an <iframe> or an <object>.\n      AppOptions.set(\"externalLinkTarget\", LinkTarget.TOP);\n    }\n    await this._initializeViewerComponents();\n\n    // Bind the various event handlers *after* the viewer has been\n    // initialized, to prevent errors if an event arrives too soon.\n    this.bindEvents();\n    this.bindWindowEvents();\n\n    // We can start UI localization now.\n    const appContainer = appConfig.appContainer || document.documentElement;\n    this.l10n.translate(appContainer).then(() => {\n      // Dispatch the 'localized' event on the `eventBus` once the viewer\n      // has been fully initialized and translated.\n      this.eventBus.dispatch(\"localized\", { source: this });\n    });\n\n    this._initializedCapability.resolve();\n  },\n\n  /**\n   * @private\n   */\n  async _readPreferences() {\n    if (\n      (typeof PDFJSDev === \"undefined\" ||\n        PDFJSDev.test(\"!PRODUCTION || GENERIC\")) &&\n      AppOptions.get(\"disablePreferences\")\n    ) {\n      // Give custom implementations of the default viewer a simpler way to\n      // opt-out of having the `Preferences` override existing `AppOptions`.\n      return;\n    }\n    try {\n      AppOptions.setAll(await this.preferences.getAll());\n    } catch (reason) {\n      console.error(`_readPreferences: \"${reason?.message}\".`);\n    }\n  },\n\n  /**\n   * Potentially parse special debugging flags in the hash section of the URL.\n   * @private\n   */\n  async _parseHashParameters() {\n    if (!AppOptions.get(\"pdfBugEnabled\")) {\n      return undefined;\n    }\n    const hash = document.location.hash.substring(1);\n    if (!hash) {\n      return undefined;\n    }\n    const hashParams = parseQueryString(hash),\n      waitOn = [];\n\n    if (\"disableworker\" in hashParams && hashParams.disableworker === \"true\") {\n      waitOn.push(loadFakeWorker());\n    }\n    if (\"disablerange\" in hashParams) {\n      AppOptions.set(\"disableRange\", hashParams.disablerange === \"true\");\n    }\n    if (\"disablestream\" in hashParams) {\n      AppOptions.set(\"disableStream\", hashParams.disablestream === \"true\");\n    }\n    if (\"disableautofetch\" in hashParams) {\n      AppOptions.set(\n        \"disableAutoFetch\",\n        hashParams.disableautofetch === \"true\"\n      );\n    }\n    if (\"disablefontface\" in hashParams) {\n      AppOptions.set(\"disableFontFace\", hashParams.disablefontface === \"true\");\n    }\n    if (\"disablehistory\" in hashParams) {\n      AppOptions.set(\"disableHistory\", hashParams.disablehistory === \"true\");\n    }\n    if (\"webgl\" in hashParams) {\n      AppOptions.set(\"enableWebGL\", hashParams.webgl === \"true\");\n    }\n    if (\"verbosity\" in hashParams) {\n      AppOptions.set(\"verbosity\", hashParams.verbosity | 0);\n    }\n    if (\"textlayer\" in hashParams) {\n      switch (hashParams.textlayer) {\n        case \"off\":\n          AppOptions.set(\"textLayerMode\", TextLayerMode.DISABLE);\n          break;\n        case \"visible\":\n        case \"shadow\":\n        case \"hover\":\n          const viewer = this.appConfig.viewerContainer;\n          viewer.classList.add(\"textLayer-\" + hashParams.textlayer);\n          break;\n      }\n    }\n    if (\"pdfbug\" in hashParams) {\n      AppOptions.set(\"pdfBug\", true);\n      AppOptions.set(\"fontExtraProperties\", true);\n\n      const enabled = hashParams.pdfbug.split(\",\");\n      waitOn.push(loadAndEnablePDFBug(enabled));\n    }\n    // It is not possible to change locale for the (various) extension builds.\n    if (\n      (typeof PDFJSDev === \"undefined\" ||\n        PDFJSDev.test(\"!PRODUCTION || GENERIC\")) &&\n      \"locale\" in hashParams\n    ) {\n      AppOptions.set(\"locale\", hashParams.locale);\n    }\n\n    if (waitOn.length === 0) {\n      return undefined;\n    }\n    return Promise.all(waitOn).catch(reason => {\n      console.error(`_parseHashParameters: \"${reason.message}\".`);\n    });\n  },\n\n  /**\n   * @private\n   */\n  async _initializeL10n() {\n    this.l10n = this.externalServices.createL10n(\n      typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"!PRODUCTION || GENERIC\")\n        ? { locale: AppOptions.get(\"locale\") }\n        : null\n    );\n    const dir = await this.l10n.getDirection();\n    document.getElementsByTagName(\"html\")[0].dir = dir;\n  },\n\n  /**\n   * @private\n   */\n  _forceCssTheme() {\n    const cssTheme = AppOptions.get(\"viewerCssTheme\");\n    if (\n      cssTheme === ViewerCssTheme.AUTOMATIC ||\n      !Object.values(ViewerCssTheme).includes(cssTheme)\n    ) {\n      return;\n    }\n    try {\n      const styleSheet = document.styleSheets[0];\n      const cssRules = styleSheet?.cssRules || [];\n      for (let i = 0, ii = cssRules.length; i < ii; i++) {\n        const rule = cssRules[i];\n        if (\n          rule instanceof CSSMediaRule &&\n          rule.media?.[0] === \"(prefers-color-scheme: dark)\"\n        ) {\n          if (cssTheme === ViewerCssTheme.LIGHT) {\n            styleSheet.deleteRule(i);\n            return;\n          }\n          // cssTheme === ViewerCssTheme.DARK\n          const darkRules = /^@media \\(prefers-color-scheme: dark\\) {\\n\\s*([\\w\\s-.,:;/\\\\{}()]+)\\n}$/.exec(\n            rule.cssText\n          );\n          if (darkRules?.[1]) {\n            styleSheet.deleteRule(i);\n            styleSheet.insertRule(darkRules[1], i);\n          }\n          return;\n        }\n      }\n    } catch (reason) {\n      console.error(`_forceCssTheme: \"${reason?.message}\".`);\n    }\n  },\n\n  /**\n   * @private\n   */\n  async _initializeViewerComponents() {\n    const appConfig = this.appConfig;\n\n    const eventBus =\n      appConfig.eventBus ||\n      new EventBus({ isInAutomation: this.externalServices.isInAutomation });\n    this.eventBus = eventBus;\n\n    this.overlayManager = new OverlayManager();\n\n    const pdfRenderingQueue = new PDFRenderingQueue();\n    pdfRenderingQueue.onIdle = this.cleanup.bind(this);\n    this.pdfRenderingQueue = pdfRenderingQueue;\n\n    const pdfLinkService = new PDFLinkService({\n      eventBus,\n      externalLinkTarget: AppOptions.get(\"externalLinkTarget\"),\n      externalLinkRel: AppOptions.get(\"externalLinkRel\"),\n      ignoreDestinationZoom: AppOptions.get(\"ignoreDestinationZoom\"),\n    });\n    this.pdfLinkService = pdfLinkService;\n\n    const downloadManager = this.externalServices.createDownloadManager();\n    this.downloadManager = downloadManager;\n\n    const findController = new PDFFindController({\n      linkService: pdfLinkService,\n      eventBus,\n    });\n    this.findController = findController;\n\n    const container = appConfig.mainContainer;\n    const viewer = appConfig.viewerContainer;\n    this.pdfViewer = new PDFViewer({\n      container,\n      viewer,\n      eventBus,\n      renderingQueue: pdfRenderingQueue,\n      linkService: pdfLinkService,\n      downloadManager,\n      findController,\n      renderer: AppOptions.get(\"renderer\"),\n      enableWebGL: AppOptions.get(\"enableWebGL\"),\n      l10n: this.l10n,\n      textLayerMode: AppOptions.get(\"textLayerMode\"),\n      imageResourcesPath: AppOptions.get(\"imageResourcesPath\"),\n      renderInteractiveForms: AppOptions.get(\"renderInteractiveForms\"),\n      enablePrintAutoRotate: AppOptions.get(\"enablePrintAutoRotate\"),\n      useOnlyCssZoom: AppOptions.get(\"useOnlyCssZoom\"),\n      maxCanvasPixels: AppOptions.get(\"maxCanvasPixels\"),\n      enableScripting: AppOptions.get(\"enableScripting\"),\n    });\n    pdfRenderingQueue.setViewer(this.pdfViewer);\n    pdfLinkService.setViewer(this.pdfViewer);\n\n    this.pdfThumbnailViewer = new PDFThumbnailViewer({\n      container: appConfig.sidebar.thumbnailView,\n      eventBus,\n      renderingQueue: pdfRenderingQueue,\n      linkService: pdfLinkService,\n      l10n: this.l10n,\n    });\n    pdfRenderingQueue.setThumbnailViewer(this.pdfThumbnailViewer);\n\n    this.pdfHistory = new PDFHistory({\n      linkService: pdfLinkService,\n      eventBus,\n    });\n    pdfLinkService.setHistory(this.pdfHistory);\n\n    if (!this.supportsIntegratedFind) {\n      this.findBar = new PDFFindBar(appConfig.findBar, eventBus, this.l10n);\n    }\n\n    this.pdfDocumentProperties = new PDFDocumentProperties(\n      appConfig.documentProperties,\n      this.overlayManager,\n      eventBus,\n      this.l10n\n    );\n\n    this.pdfCursorTools = new PDFCursorTools({\n      container,\n      eventBus,\n      cursorToolOnLoad: AppOptions.get(\"cursorToolOnLoad\"),\n    });\n\n    this.toolbar = new Toolbar(appConfig.toolbar, eventBus, this.l10n);\n\n    this.secondaryToolbar = new SecondaryToolbar(\n      appConfig.secondaryToolbar,\n      container,\n      eventBus\n    );\n\n    if (this.supportsFullscreen) {\n      this.pdfPresentationMode = new PDFPresentationMode({\n        container,\n        pdfViewer: this.pdfViewer,\n        eventBus,\n        contextMenuItems: appConfig.fullscreen,\n      });\n    }\n\n    this.passwordPrompt = new PasswordPrompt(\n      appConfig.passwordOverlay,\n      this.overlayManager,\n      this.l10n\n    );\n\n    this.pdfOutlineViewer = new PDFOutlineViewer({\n      container: appConfig.sidebar.outlineView,\n      eventBus,\n      linkService: pdfLinkService,\n    });\n\n    this.pdfAttachmentViewer = new PDFAttachmentViewer({\n      container: appConfig.sidebar.attachmentsView,\n      eventBus,\n      downloadManager,\n    });\n\n    this.pdfLayerViewer = new PDFLayerViewer({\n      container: appConfig.sidebar.layersView,\n      eventBus,\n      l10n: this.l10n,\n    });\n\n    this.pdfSidebar = new PDFSidebar({\n      elements: appConfig.sidebar,\n      pdfViewer: this.pdfViewer,\n      pdfThumbnailViewer: this.pdfThumbnailViewer,\n      eventBus,\n      l10n: this.l10n,\n    });\n    this.pdfSidebar.onToggled = this.forceRendering.bind(this);\n\n    this.pdfSidebarResizer = new PDFSidebarResizer(\n      appConfig.sidebarResizer,\n      eventBus,\n      this.l10n\n    );\n  },\n\n  run(config) {\n    this.initialize(config).then(webViewerInitialized);\n  },\n\n  get initialized() {\n    return this._initializedCapability.settled;\n  },\n\n  get initializedPromise() {\n    return this._initializedCapability.promise;\n  },\n\n  zoomIn(ticks) {\n    if (this.pdfViewer.isInPresentationMode) {\n      return;\n    }\n    let newScale = this.pdfViewer.currentScale;\n    do {\n      newScale = (newScale * DEFAULT_SCALE_DELTA).toFixed(2);\n      newScale = Math.ceil(newScale * 10) / 10;\n      newScale = Math.min(MAX_SCALE, newScale);\n    } while (--ticks > 0 && newScale < MAX_SCALE);\n    this.pdfViewer.currentScaleValue = newScale;\n  },\n\n  zoomOut(ticks) {\n    if (this.pdfViewer.isInPresentationMode) {\n      return;\n    }\n    let newScale = this.pdfViewer.currentScale;\n    do {\n      newScale = (newScale / DEFAULT_SCALE_DELTA).toFixed(2);\n      newScale = Math.floor(newScale * 10) / 10;\n      newScale = Math.max(MIN_SCALE, newScale);\n    } while (--ticks > 0 && newScale > MIN_SCALE);\n    this.pdfViewer.currentScaleValue = newScale;\n  },\n\n  zoomReset() {\n    if (this.pdfViewer.isInPresentationMode) {\n      return;\n    }\n    this.pdfViewer.currentScaleValue = DEFAULT_SCALE_VALUE;\n  },\n\n  get pagesCount() {\n    return this.pdfDocument ? this.pdfDocument.numPages : 0;\n  },\n\n  get page() {\n    return this.pdfViewer.currentPageNumber;\n  },\n\n  set page(val) {\n    this.pdfViewer.currentPageNumber = val;\n  },\n\n  get supportsPrinting() {\n    return PDFPrintServiceFactory.instance.supportsPrinting;\n  },\n\n  get supportsFullscreen() {\n    let support;\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n      support =\n        document.fullscreenEnabled === true ||\n        document.mozFullScreenEnabled === true;\n    } else {\n      const doc = document.documentElement;\n      support = !!(\n        doc.requestFullscreen ||\n        doc.mozRequestFullScreen ||\n        doc.webkitRequestFullScreen\n      );\n\n      if (\n        document.fullscreenEnabled === false ||\n        document.mozFullScreenEnabled === false ||\n        document.webkitFullscreenEnabled === false\n      ) {\n        support = false;\n      }\n    }\n    return shadow(this, \"supportsFullscreen\", support);\n  },\n\n  get supportsIntegratedFind() {\n    return this.externalServices.supportsIntegratedFind;\n  },\n\n  get supportsDocumentFonts() {\n    return this.externalServices.supportsDocumentFonts;\n  },\n\n  get loadingBar() {\n    const bar = new ProgressBar(\"#loadingBar\");\n    return shadow(this, \"loadingBar\", bar);\n  },\n\n  get supportedMouseWheelZoomModifierKeys() {\n    return this.externalServices.supportedMouseWheelZoomModifierKeys;\n  },\n\n  initPassiveLoading() {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      !PDFJSDev.test(\"MOZCENTRAL || CHROME\")\n    ) {\n      throw new Error(\"Not implemented: initPassiveLoading\");\n    }\n    this.externalServices.initPassiveLoading({\n      onOpenWithTransport(url, length, transport) {\n        PDFViewerApplication.open(url, { length, range: transport });\n      },\n      onOpenWithData(data) {\n        PDFViewerApplication.open(data);\n      },\n      onOpenWithURL(url, length, originalUrl) {\n        let file = url,\n          args = null;\n        if (length !== undefined) {\n          args = { length };\n        }\n        if (originalUrl !== undefined) {\n          file = { url, originalUrl };\n        }\n        PDFViewerApplication.open(file, args);\n      },\n      onError(err) {\n        PDFViewerApplication.l10n\n          .get(\n            \"loading_error\",\n            null,\n            \"An error occurred while loading the PDF.\"\n          )\n          .then(msg => {\n            PDFViewerApplication.error(msg, err);\n          });\n      },\n      onProgress(loaded, total) {\n        PDFViewerApplication.progress(loaded / total);\n      },\n    });\n  },\n\n  setTitleUsingUrl(url = \"\") {\n    this.url = url;\n    this.baseUrl = url.split(\"#\")[0];\n    let title = getPDFFileNameFromURL(url, \"\");\n    if (!title) {\n      try {\n        title = decodeURIComponent(getFilenameFromUrl(url)) || url;\n      } catch (ex) {\n        // decodeURIComponent may throw URIError,\n        // fall back to using the unprocessed url in that case\n        title = url;\n      }\n    }\n    this.setTitle(title);\n  },\n\n  setTitle(title) {\n    if (this.isViewerEmbedded) {\n      // Embedded PDF viewers should not be changing their parent page's title.\n      return;\n    }\n    document.title = title;\n  },\n\n  /**\n   * @private\n   */\n  _cancelIdleCallbacks() {\n    if (!this._idleCallbacks.size) {\n      return;\n    }\n    for (const callback of this._idleCallbacks) {\n      window.cancelIdleCallback(callback);\n    }\n    this._idleCallbacks.clear();\n  },\n\n  /**\n   * @private\n   */\n  async _destroyScriptingInstance() {\n    if (!this._scriptingInstance) {\n      return;\n    }\n    const { scripting, events } = this._scriptingInstance;\n    try {\n      await scripting.destroySandbox();\n    } catch (ex) {}\n\n    for (const [name, listener] of events) {\n      window.removeEventListener(name, listener);\n    }\n    events.clear();\n\n    this._scriptingInstance = null;\n  },\n\n  /**\n   * Closes opened PDF document.\n   * @returns {Promise} - Returns the promise, which is resolved when all\n   *                      destruction is completed.\n   */\n  async close() {\n    const errorWrapper = this.appConfig.errorWrapper.container;\n    errorWrapper.setAttribute(\"hidden\", \"true\");\n\n    if (!this.pdfLoadingTask) {\n      return undefined;\n    }\n    const promises = [];\n\n    promises.push(this.pdfLoadingTask.destroy());\n    this.pdfLoadingTask = null;\n\n    if (this.pdfDocument) {\n      this.pdfDocument = null;\n\n      this.pdfThumbnailViewer.setDocument(null);\n      this.pdfViewer.setDocument(null);\n      this.pdfLinkService.setDocument(null);\n      this.pdfDocumentProperties.setDocument(null);\n    }\n    webViewerResetPermissions();\n    this.store = null;\n    this.isInitialViewSet = false;\n    this.downloadComplete = false;\n    this.url = \"\";\n    this.baseUrl = \"\";\n    this.documentInfo = null;\n    this.metadata = null;\n    this._contentDispositionFilename = null;\n    this._contentLength = null;\n    this.triggerDelayedFallback = null;\n    this._saveInProgress = false;\n\n    this._cancelIdleCallbacks();\n    promises.push(this._destroyScriptingInstance());\n\n    this.pdfSidebar.reset();\n    this.pdfOutlineViewer.reset();\n    this.pdfAttachmentViewer.reset();\n    this.pdfLayerViewer.reset();\n\n    if (this.pdfHistory) {\n      this.pdfHistory.reset();\n    }\n    if (this.findBar) {\n      this.findBar.reset();\n    }\n    this.toolbar.reset();\n    this.secondaryToolbar.reset();\n\n    if (typeof PDFBug !== \"undefined\") {\n      PDFBug.cleanup();\n    }\n    return Promise.all(promises);\n  },\n\n  /**\n   * Opens PDF document specified by URL or array with additional arguments.\n   * @param {string|TypedArray|ArrayBuffer} file - PDF location or binary data.\n   * @param {Object} [args] - Additional arguments for the getDocument call,\n   *                          e.g. HTTP headers ('httpHeaders') or alternative\n   *                          data transport ('range').\n   * @returns {Promise} - Returns the promise, which is resolved when document\n   *                      is opened.\n   */\n  async open(file, args) {\n    if (this.pdfLoadingTask) {\n      // We need to destroy already opened document.\n      await this.close();\n    }\n    // Set the necessary global worker parameters, using the available options.\n    const workerParameters = AppOptions.getAll(OptionKind.WORKER);\n    for (const key in workerParameters) {\n      GlobalWorkerOptions[key] = workerParameters[key];\n    }\n\n    const parameters = Object.create(null);\n    if (typeof file === \"string\") {\n      // URL\n      this.setTitleUsingUrl(file);\n      parameters.url = file;\n    } else if (file && \"byteLength\" in file) {\n      // ArrayBuffer\n      parameters.data = file;\n    } else if (file.url && file.originalUrl) {\n      this.setTitleUsingUrl(file.originalUrl);\n      parameters.url = file.url;\n    }\n    // Set the necessary API parameters, using the available options.\n    const apiParameters = AppOptions.getAll(OptionKind.API);\n    for (const key in apiParameters) {\n      let value = apiParameters[key];\n\n      if (key === \"docBaseUrl\" && !value) {\n        if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n          value = document.URL.split(\"#\")[0];\n        } else if (PDFJSDev.test(\"MOZCENTRAL || CHROME\")) {\n          value = this.baseUrl;\n        }\n      }\n      parameters[key] = value;\n    }\n    // Finally, update the API parameters with the arguments (if they exist).\n    if (args) {\n      for (const key in args) {\n        parameters[key] = args[key];\n      }\n    }\n\n    const loadingTask = getDocument(parameters);\n    this.pdfLoadingTask = loadingTask;\n\n    loadingTask.onPassword = (updateCallback, reason) => {\n      this.pdfLinkService.externalLinkEnabled = false;\n      this.passwordPrompt.setUpdateCallback(updateCallback, reason);\n      this.passwordPrompt.open();\n    };\n\n    loadingTask.onProgress = ({ loaded, total }) => {\n      this.progress(loaded / total);\n    };\n\n    // Listen for unsupported features to trigger the fallback UI.\n    loadingTask.onUnsupportedFeature = this.fallback.bind(this);\n\n    return loadingTask.promise.then(\n      pdfDocument => {\n        this.load(pdfDocument);\n      },\n      exception => {\n        if (loadingTask !== this.pdfLoadingTask) {\n          return undefined; // Ignore errors for previously opened PDF files.\n        }\n\n        const message = exception?.message;\n        let loadingErrorMessage;\n        if (exception instanceof InvalidPDFException) {\n          // change error message also for other builds\n          loadingErrorMessage = this.l10n.get(\n            \"invalid_file_error\",\n            null,\n            \"Invalid or corrupted PDF file.\"\n          );\n        } else if (exception instanceof MissingPDFException) {\n          // special message for missing PDF's\n          loadingErrorMessage = this.l10n.get(\n            \"missing_file_error\",\n            null,\n            \"Missing PDF file.\"\n          );\n        } else if (exception instanceof UnexpectedResponseException) {\n          loadingErrorMessage = this.l10n.get(\n            \"unexpected_response_error\",\n            null,\n            \"Unexpected server response.\"\n          );\n        } else {\n          loadingErrorMessage = this.l10n.get(\n            \"loading_error\",\n            null,\n            \"An error occurred while loading the PDF.\"\n          );\n        }\n\n        return loadingErrorMessage.then(msg => {\n          this.error(msg, { message });\n          throw exception;\n        });\n      }\n    );\n  },\n\n  download({ sourceEventType = \"download\" } = {}) {\n    function downloadByUrl() {\n      downloadManager.downloadUrl(url, filename);\n    }\n\n    const url = this.baseUrl;\n    // Use this.url instead of this.baseUrl to perform filename detection based\n    // on the reference fragment as ultimate fallback if needed.\n    const filename =\n      this._contentDispositionFilename || getPDFFileNameFromURL(this.url);\n    const downloadManager = this.downloadManager;\n    downloadManager.onerror = err => {\n      // This error won't really be helpful because it's likely the\n      // fallback won't work either (or is already open).\n      this.error(`PDF failed to download: ${err}`);\n    };\n\n    // When the PDF document isn't ready, or the PDF file is still downloading,\n    // simply download using the URL.\n    if (!this.pdfDocument || !this.downloadComplete) {\n      downloadByUrl();\n      return;\n    }\n\n    this.pdfDocument\n      .getData()\n      .then(function (data) {\n        const blob = new Blob([data], { type: \"application/pdf\" });\n        downloadManager.download(blob, url, filename, sourceEventType);\n      })\n      .catch(downloadByUrl); // Error occurred, try downloading with the URL.\n  },\n\n  save({ sourceEventType = \"download\" } = {}) {\n    if (this._saveInProgress) {\n      return;\n    }\n\n    const url = this.baseUrl;\n    // Use this.url instead of this.baseUrl to perform filename detection based\n    // on the reference fragment as ultimate fallback if needed.\n    const filename =\n      this._contentDispositionFilename || getPDFFileNameFromURL(this.url);\n    const downloadManager = this.downloadManager;\n    downloadManager.onerror = err => {\n      // This error won't really be helpful because it's likely the\n      // fallback won't work either (or is already open).\n      this.error(`PDF failed to be saved: ${err}`);\n    };\n\n    // When the PDF document isn't ready, or the PDF file is still downloading,\n    // simply download using the URL.\n    if (!this.pdfDocument || !this.downloadComplete) {\n      this.download({ sourceEventType });\n      return;\n    }\n\n    this._saveInProgress = true;\n    this.pdfDocument\n      .saveDocument(this.pdfDocument.annotationStorage)\n      .then(data => {\n        const blob = new Blob([data], { type: \"application/pdf\" });\n        downloadManager.download(blob, url, filename, sourceEventType);\n      })\n      .catch(() => {\n        this.download({ sourceEventType });\n      })\n      .finally(() => {\n        this._saveInProgress = false;\n      });\n  },\n\n  /**\n   * For PDF documents that contain e.g. forms and javaScript, we should only\n   * trigger the fallback bar once the user has interacted with the page.\n   * @private\n   */\n  _delayedFallback(featureId) {\n    // Ensure that telemetry is always reported, since it's not guaranteed\n    // that the fallback bar will be shown (depends on user interaction).\n    this.externalServices.reportTelemetry({\n      type: \"unsupportedFeature\",\n      featureId,\n    });\n\n    if (!this.triggerDelayedFallback) {\n      this.triggerDelayedFallback = () => {\n        this.fallback(featureId);\n        this.triggerDelayedFallback = null;\n      };\n    }\n  },\n\n  fallback(featureId) {\n    this.externalServices.reportTelemetry({\n      type: \"unsupportedFeature\",\n      featureId,\n    });\n\n    // Only trigger the fallback once so we don't spam the user with messages\n    // for one PDF.\n    if (this.fellback) {\n      return;\n    }\n    this.fellback = true;\n    this.externalServices.fallback(\n      {\n        featureId,\n        url: this.baseUrl,\n      },\n      function response(download) {\n        if (!download) {\n          return;\n        }\n        PDFViewerApplication.download({ sourceEventType: \"download\" });\n      }\n    );\n  },\n\n  /**\n   * Show the error box.\n   * @param {string} message - A message that is human readable.\n   * @param {Object} [moreInfo] - Further information about the error that is\n   *                              more technical.  Should have a 'message' and\n   *                              optionally a 'stack' property.\n   */\n  error(message, moreInfo) {\n    const moreInfoText = [\n      this.l10n.get(\n        \"error_version_info\",\n        { version: version || \"?\", build: build || \"?\" },\n        \"PDF.js v{{version}} (build: {{build}})\"\n      ),\n    ];\n    if (moreInfo) {\n      moreInfoText.push(\n        this.l10n.get(\n          \"error_message\",\n          { message: moreInfo.message },\n          \"Message: {{message}}\"\n        )\n      );\n      if (moreInfo.stack) {\n        moreInfoText.push(\n          this.l10n.get(\n            \"error_stack\",\n            { stack: moreInfo.stack },\n            \"Stack: {{stack}}\"\n          )\n        );\n      } else {\n        if (moreInfo.filename) {\n          moreInfoText.push(\n            this.l10n.get(\n              \"error_file\",\n              { file: moreInfo.filename },\n              \"File: {{file}}\"\n            )\n          );\n        }\n        if (moreInfo.lineNumber) {\n          moreInfoText.push(\n            this.l10n.get(\n              \"error_line\",\n              { line: moreInfo.lineNumber },\n              \"Line: {{line}}\"\n            )\n          );\n        }\n      }\n    }\n\n    if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) {\n      const errorWrapperConfig = this.appConfig.errorWrapper;\n      const errorWrapper = errorWrapperConfig.container;\n      errorWrapper.removeAttribute(\"hidden\");\n\n      const errorMessage = errorWrapperConfig.errorMessage;\n      errorMessage.textContent = message;\n\n      const closeButton = errorWrapperConfig.closeButton;\n      closeButton.onclick = function () {\n        errorWrapper.setAttribute(\"hidden\", \"true\");\n      };\n\n      const errorMoreInfo = errorWrapperConfig.errorMoreInfo;\n      const moreInfoButton = errorWrapperConfig.moreInfoButton;\n      const lessInfoButton = errorWrapperConfig.lessInfoButton;\n      moreInfoButton.onclick = function () {\n        errorMoreInfo.removeAttribute(\"hidden\");\n        moreInfoButton.setAttribute(\"hidden\", \"true\");\n        lessInfoButton.removeAttribute(\"hidden\");\n        errorMoreInfo.style.height = errorMoreInfo.scrollHeight + \"px\";\n      };\n      lessInfoButton.onclick = function () {\n        errorMoreInfo.setAttribute(\"hidden\", \"true\");\n        moreInfoButton.removeAttribute(\"hidden\");\n        lessInfoButton.setAttribute(\"hidden\", \"true\");\n      };\n      moreInfoButton.oncontextmenu = noContextMenuHandler;\n      lessInfoButton.oncontextmenu = noContextMenuHandler;\n      closeButton.oncontextmenu = noContextMenuHandler;\n      moreInfoButton.removeAttribute(\"hidden\");\n      lessInfoButton.setAttribute(\"hidden\", \"true\");\n      Promise.all(moreInfoText).then(parts => {\n        errorMoreInfo.value = parts.join(\"\\n\");\n      });\n    } else {\n      Promise.all(moreInfoText).then(parts => {\n        console.error(message + \"\\n\" + parts.join(\"\\n\"));\n      });\n      this.fallback();\n    }\n  },\n\n  progress(level) {\n    if (this.downloadComplete) {\n      // Don't accidentally show the loading bar again when the entire file has\n      // already been fetched (only an issue when disableAutoFetch is enabled).\n      return;\n    }\n    const percent = Math.round(level * 100);\n    // When we transition from full request to range requests, it's possible\n    // that we discard some of the loaded data. This can cause the loading\n    // bar to move backwards. So prevent this by only updating the bar if it\n    // increases.\n    if (percent > this.loadingBar.percent || isNaN(percent)) {\n      this.loadingBar.percent = percent;\n\n      // When disableAutoFetch is enabled, it's not uncommon for the entire file\n      // to never be fetched (depends on e.g. the file structure). In this case\n      // the loading bar will not be completely filled, nor will it be hidden.\n      // To prevent displaying a partially filled loading bar permanently, we\n      // hide it when no data has been loaded during a certain amount of time.\n      const disableAutoFetch = this.pdfDocument\n        ? this.pdfDocument.loadingParams.disableAutoFetch\n        : AppOptions.get(\"disableAutoFetch\");\n\n      if (disableAutoFetch && percent) {\n        if (this.disableAutoFetchLoadingBarTimeout) {\n          clearTimeout(this.disableAutoFetchLoadingBarTimeout);\n          this.disableAutoFetchLoadingBarTimeout = null;\n        }\n        this.loadingBar.show();\n\n        this.disableAutoFetchLoadingBarTimeout = setTimeout(() => {\n          this.loadingBar.hide();\n          this.disableAutoFetchLoadingBarTimeout = null;\n        }, DISABLE_AUTO_FETCH_LOADING_BAR_TIMEOUT);\n      }\n    }\n  },\n\n  load(pdfDocument) {\n    this.pdfDocument = pdfDocument;\n\n    pdfDocument.getDownloadInfo().then(() => {\n      this.downloadComplete = true;\n      this.loadingBar.hide();\n\n      firstPagePromise.then(() => {\n        this.eventBus.dispatch(\"documentloaded\", { source: this });\n      });\n    });\n\n    // Since the `setInitialView` call below depends on this being resolved,\n    // fetch it early to avoid delaying initial rendering of the PDF document.\n    const pageLayoutPromise = pdfDocument.getPageLayout().catch(function () {\n      /* Avoid breaking initial rendering; ignoring errors. */\n    });\n    const pageModePromise = pdfDocument.getPageMode().catch(function () {\n      /* Avoid breaking initial rendering; ignoring errors. */\n    });\n    const openActionPromise = pdfDocument.getOpenAction().catch(function () {\n      /* Avoid breaking initial rendering; ignoring errors. */\n    });\n\n    this.toolbar.setPagesCount(pdfDocument.numPages, false);\n    this.secondaryToolbar.setPagesCount(pdfDocument.numPages);\n\n    let baseDocumentUrl;\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n      baseDocumentUrl = null;\n    } else if (PDFJSDev.test(\"MOZCENTRAL\")) {\n      baseDocumentUrl = this.baseUrl;\n    } else if (PDFJSDev.test(\"CHROME\")) {\n      baseDocumentUrl = location.href.split(\"#\")[0];\n    }\n    this.pdfLinkService.setDocument(pdfDocument, baseDocumentUrl);\n    this.pdfDocumentProperties.setDocument(pdfDocument, this.url);\n\n    const annotationStorage = pdfDocument.annotationStorage;\n    annotationStorage.onSetModified = function () {\n      window.addEventListener(\"beforeunload\", beforeUnload);\n    };\n    annotationStorage.onResetModified = function () {\n      window.removeEventListener(\"beforeunload\", beforeUnload);\n    };\n\n    const pdfViewer = this.pdfViewer;\n    pdfViewer.setDocument(pdfDocument);\n    const { firstPagePromise, onePageRendered, pagesPromise } = pdfViewer;\n\n    const pdfThumbnailViewer = this.pdfThumbnailViewer;\n    pdfThumbnailViewer.setDocument(pdfDocument);\n\n    const storedPromise = (this.store = new ViewHistory(\n      pdfDocument.fingerprint\n    ))\n      .getMultiple({\n        page: null,\n        zoom: DEFAULT_SCALE_VALUE,\n        scrollLeft: \"0\",\n        scrollTop: \"0\",\n        rotation: null,\n        sidebarView: SidebarView.UNKNOWN,\n        scrollMode: ScrollMode.UNKNOWN,\n        spreadMode: SpreadMode.UNKNOWN,\n      })\n      .catch(() => {\n        /* Unable to read from storage; ignoring errors. */\n        return Object.create(null);\n      });\n\n    firstPagePromise.then(pdfPage => {\n      this.loadingBar.setWidth(this.appConfig.viewerContainer);\n\n      Promise.all([\n        animationStarted,\n        storedPromise,\n        pageLayoutPromise,\n        pageModePromise,\n        openActionPromise,\n      ])\n        .then(async ([timeStamp, stored, pageLayout, pageMode, openAction]) => {\n          const viewOnLoad = AppOptions.get(\"viewOnLoad\");\n\n          this._initializePdfHistory({\n            fingerprint: pdfDocument.fingerprint,\n            viewOnLoad,\n            initialDest: openAction && openAction.dest,\n          });\n          const initialBookmark = this.initialBookmark;\n\n          // Initialize the default values, from user preferences.\n          const zoom = AppOptions.get(\"defaultZoomValue\");\n          let hash = zoom ? `zoom=${zoom}` : null;\n\n          let rotation = null;\n          let sidebarView = AppOptions.get(\"sidebarViewOnLoad\");\n          let scrollMode = AppOptions.get(\"scrollModeOnLoad\");\n          let spreadMode = AppOptions.get(\"spreadModeOnLoad\");\n\n          if (stored.page && viewOnLoad !== ViewOnLoad.INITIAL) {\n            hash =\n              `page=${stored.page}&zoom=${zoom || stored.zoom},` +\n              `${stored.scrollLeft},${stored.scrollTop}`;\n\n            rotation = parseInt(stored.rotation, 10);\n            // Always let user preference take precedence over the view history.\n            if (sidebarView === SidebarView.UNKNOWN) {\n              sidebarView = stored.sidebarView | 0;\n            }\n            if (scrollMode === ScrollMode.UNKNOWN) {\n              scrollMode = stored.scrollMode | 0;\n            }\n            if (spreadMode === SpreadMode.UNKNOWN) {\n              spreadMode = stored.spreadMode | 0;\n            }\n          }\n          // Always let the user preference/view history take precedence.\n          if (pageMode && sidebarView === SidebarView.UNKNOWN) {\n            sidebarView = apiPageModeToSidebarView(pageMode);\n          }\n          if (pageLayout && spreadMode === SpreadMode.UNKNOWN) {\n            spreadMode = apiPageLayoutToSpreadMode(pageLayout);\n          }\n\n          this.setInitialView(hash, {\n            rotation,\n            sidebarView,\n            scrollMode,\n            spreadMode,\n          });\n          this.eventBus.dispatch(\"documentinit\", { source: this });\n          // Make all navigation keys work on document load,\n          // unless the viewer is embedded in a web page.\n          if (!this.isViewerEmbedded) {\n            pdfViewer.focus();\n          }\n\n          // Currently only the \"copy\"-permission is supported, hence we delay\n          // the `getPermissions` API call until *after* rendering has started.\n          this._initializePermissions(pdfDocument);\n\n          // For documents with different page sizes, once all pages are\n          // resolved, ensure that the correct location becomes visible on load.\n          // (To reduce the risk, in very large and/or slow loading documents,\n          //  that the location changes *after* the user has started interacting\n          //  with the viewer, wait for either `pagesPromise` or a timeout.)\n          await Promise.race([\n            pagesPromise,\n            new Promise(resolve => {\n              setTimeout(resolve, FORCE_PAGES_LOADED_TIMEOUT);\n            }),\n          ]);\n          if (!initialBookmark && !hash) {\n            return;\n          }\n          if (pdfViewer.hasEqualPageSizes) {\n            return;\n          }\n          this.initialBookmark = initialBookmark;\n\n          // eslint-disable-next-line no-self-assign\n          pdfViewer.currentScaleValue = pdfViewer.currentScaleValue;\n          // Re-apply the initial document location.\n          this.setInitialView(hash);\n        })\n        .catch(() => {\n          // Ensure that the document is always completely initialized,\n          // even if there are any errors thrown above.\n          this.setInitialView();\n        })\n        .then(function () {\n          // At this point, rendering of the initial page(s) should always have\n          // started (and may even have completed).\n          // To prevent any future issues, e.g. the document being completely\n          // blank on load, always trigger rendering here.\n          pdfViewer.update();\n        });\n    });\n\n    pagesPromise.then(() => {\n      this._initializeAutoPrint(pdfDocument, openActionPromise);\n    });\n\n    onePageRendered.then(() => {\n      pdfDocument.getOutline().then(outline => {\n        this.pdfOutlineViewer.render({ outline });\n      });\n      pdfDocument.getAttachments().then(attachments => {\n        this.pdfAttachmentViewer.render({ attachments });\n      });\n      // Ensure that the layers accurately reflects the current state in the\n      // viewer itself, rather than the default state provided by the API.\n      pdfViewer.optionalContentConfigPromise.then(optionalContentConfig => {\n        this.pdfLayerViewer.render({ optionalContentConfig, pdfDocument });\n      });\n      if (\"requestIdleCallback\" in window) {\n        const callback = window.requestIdleCallback(\n          () => {\n            this._collectTelemetry(pdfDocument);\n            this._idleCallbacks.delete(callback);\n          },\n          { timeout: 1000 }\n        );\n        this._idleCallbacks.add(callback);\n      }\n      this._initializeJavaScript(pdfDocument);\n    });\n\n    this._initializePageLabels(pdfDocument);\n    this._initializeMetadata(pdfDocument);\n  },\n\n  /**\n   * @private\n   */\n  async _initializeJavaScript(pdfDocument) {\n    if (!AppOptions.get(\"enableScripting\")) {\n      return;\n    }\n    const [objects, calculationOrder] = await Promise.all([\n      pdfDocument.getFieldObjects(),\n      pdfDocument.getCalculationOrderIds(),\n    ]);\n\n    if (!objects || pdfDocument !== this.pdfDocument) {\n      // No FieldObjects were found in the document,\n      // or the document was closed while the data resolved.\n      return;\n    }\n    const scripting = this.externalServices.createScripting();\n    // Store a reference to the current scripting-instance, to allow destruction\n    // of the sandbox and removal of the event listeners at document closing.\n    this._scriptingInstance = { scripting, events: new Map() };\n\n    if (!this.documentInfo) {\n      // It should be *extremely* rare for metadata to not have been resolved\n      // when this code runs, but ensure that we handle that case here.\n      await new Promise(resolve => {\n        const metadataLoaded = () => {\n          this.eventBus._off(\"metadataloaded\", metadataLoaded);\n          resolve();\n        };\n        this.eventBus._on(\"metadataloaded\", metadataLoaded);\n      });\n      if (pdfDocument !== this.pdfDocument) {\n        return; // The document was closed while the metadata resolved.\n      }\n    }\n\n    const updateFromSandbox = event => {\n      const { detail } = event;\n      const { id, command, value } = detail;\n      if (!id) {\n        switch (command) {\n          case \"alert\":\n            // eslint-disable-next-line no-alert\n            window.alert(value);\n            break;\n          case \"clear\":\n            console.clear();\n            break;\n          case \"error\":\n            console.error(value);\n            break;\n          case \"layout\":\n            this.pdfViewer.spreadMode = apiPageLayoutToSpreadMode(value);\n            return;\n          case \"page-num\":\n            this.pdfViewer.currentPageNumber = value + 1;\n            return;\n          case \"print\":\n            this.triggerPrinting();\n            return;\n          case \"println\":\n            console.log(value);\n            break;\n          case \"zoom\":\n            if (typeof value === \"string\") {\n              this.pdfViewer.currentScaleValue = value;\n            } else {\n              this.pdfViewer.currentScale = value;\n            }\n            return;\n        }\n        return;\n      }\n\n      const element = document.getElementById(id);\n      if (element) {\n        element.dispatchEvent(new CustomEvent(\"updateFromSandbox\", { detail }));\n      } else {\n        if (value !== undefined && value !== null) {\n          // The element hasn't been rendered yet, use the AnnotationStorage.\n          pdfDocument.annotationStorage.setValue(id, value);\n        }\n      }\n    };\n    window.addEventListener(\"updateFromSandbox\", updateFromSandbox);\n    // Ensure that the event listener can be removed at document closing.\n    this._scriptingInstance.events.set(\"updateFromSandbox\", updateFromSandbox);\n\n    const dispatchEventInSandbox = event => {\n      scripting.dispatchEventInSandbox(event.detail);\n    };\n    window.addEventListener(\"dispatchEventInSandbox\", dispatchEventInSandbox);\n    // Ensure that the event listener can be removed at document closing.\n    this._scriptingInstance.events.set(\n      \"dispatchEventInSandbox\",\n      dispatchEventInSandbox\n    );\n\n    const dispatchEventName = generateRandomStringForSandbox(objects);\n\n    if (!this._contentLength) {\n      // Always waiting for the entire PDF document to be loaded will, most\n      // likely, delay sandbox-creation too much in the general case for all\n      // PDF documents which are not provided as binary data to the API.\n      // Hence we'll simply have to trust that the `contentLength` (as provided\n      // by the server), when it exists, is accurate enough here.\n      const { length } = await pdfDocument.getDownloadInfo();\n\n      if (pdfDocument !== this.pdfDocument) {\n        return; // The document was closed while the download info resolved.\n      }\n      this._contentLength = length;\n    }\n    const filename =\n      this._contentDispositionFilename || getPDFFileNameFromURL(this.url);\n\n    scripting.createSandbox({\n      objects,\n      dispatchEventName,\n      calculationOrder,\n      appInfo: {\n        platform: navigator.platform,\n        language: navigator.language,\n      },\n      docInfo: {\n        ...this.documentInfo,\n        baseURL: this.baseUrl,\n        filesize: this._contentLength,\n        filename,\n        metadata: this.metadata,\n        numPages: pdfDocument.numPages,\n        URL: this.url,\n      },\n    });\n  },\n\n  /**\n   * A place to fetch data for telemetry after one page is rendered and the\n   * viewer is idle.\n   * @private\n   */\n  async _collectTelemetry(pdfDocument) {\n    const markInfo = await this.pdfDocument.getMarkInfo();\n    if (pdfDocument !== this.pdfDocument) {\n      return; // Document was closed while waiting for mark info.\n    }\n    const tagged = markInfo?.Marked || false;\n    this.externalServices.reportTelemetry({\n      type: \"tagged\",\n      tagged,\n    });\n  },\n\n  /**\n   * @private\n   */\n  async _initializeAutoPrint(pdfDocument, openActionPromise) {\n    const [openAction, javaScript] = await Promise.all([\n      openActionPromise,\n      pdfDocument.getJavaScript(),\n    ]);\n\n    if (pdfDocument !== this.pdfDocument) {\n      return; // The document was closed while the auto print data resolved.\n    }\n    let triggerAutoPrint = false;\n\n    if (openAction && openAction.action === \"Print\") {\n      triggerAutoPrint = true;\n    }\n    if (javaScript) {\n      javaScript.some(js => {\n        if (!js) {\n          // Don't warn/fallback for empty JavaScript actions.\n          return false;\n        }\n        console.warn(\"Warning: JavaScript is not supported\");\n        this._delayedFallback(UNSUPPORTED_FEATURES.javaScript);\n        return true;\n      });\n\n      if (!triggerAutoPrint) {\n        // Hack to support auto printing.\n        for (const js of javaScript) {\n          if (js && AutoPrintRegExp.test(js)) {\n            triggerAutoPrint = true;\n            break;\n          }\n        }\n      }\n    }\n\n    if (triggerAutoPrint) {\n      setTimeout(() => {\n        this.triggerPrinting();\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  async _initializeMetadata(pdfDocument) {\n    const {\n      info,\n      metadata,\n      contentDispositionFilename,\n      contentLength,\n    } = await pdfDocument.getMetadata();\n\n    if (pdfDocument !== this.pdfDocument) {\n      return; // The document was closed while the metadata resolved.\n    }\n    this.documentInfo = info;\n    this.metadata = metadata;\n    this._contentDispositionFilename = contentDispositionFilename;\n    this._contentLength = contentLength;\n\n    // Provides some basic debug information\n    console.log(\n      `PDF ${pdfDocument.fingerprint} [${info.PDFFormatVersion} ` +\n        `${(info.Producer || \"-\").trim()} / ${(info.Creator || \"-\").trim()}] ` +\n        `(PDF.js: ${version || \"-\"}` +\n        `${this.pdfViewer.enableWebGL ? \" [WebGL]\" : \"\"})`\n    );\n\n    let pdfTitle;\n    const infoTitle = info && info.Title;\n    if (infoTitle) {\n      pdfTitle = infoTitle;\n    }\n    const metadataTitle = metadata && metadata.get(\"dc:title\");\n    if (metadataTitle) {\n      // Ghostscript can produce invalid 'dc:title' Metadata entries:\n      //  - The title may be \"Untitled\" (fixes bug 1031612).\n      //  - The title may contain incorrectly encoded characters, which thus\n      //    looks broken, hence we ignore the Metadata entry when it\n      //    contains characters from the Specials Unicode block\n      //    (fixes bug 1605526).\n      if (\n        metadataTitle !== \"Untitled\" &&\n        !/[\\uFFF0-\\uFFFF]/g.test(metadataTitle)\n      ) {\n        pdfTitle = metadataTitle;\n      }\n    }\n    if (pdfTitle) {\n      this.setTitle(\n        `${pdfTitle} - ${contentDispositionFilename || document.title}`\n      );\n    } else if (contentDispositionFilename) {\n      this.setTitle(contentDispositionFilename);\n    }\n\n    if (info.IsXFAPresent && !info.IsAcroFormPresent) {\n      console.warn(\"Warning: XFA is not supported\");\n      this._delayedFallback(UNSUPPORTED_FEATURES.forms);\n    } else if (\n      (info.IsAcroFormPresent || info.IsXFAPresent) &&\n      !this.pdfViewer.renderInteractiveForms\n    ) {\n      console.warn(\"Warning: Interactive form support is not enabled\");\n      this._delayedFallback(UNSUPPORTED_FEATURES.forms);\n    }\n\n    // Telemetry labels must be C++ variable friendly.\n    let versionId = \"other\";\n    if (KNOWN_VERSIONS.includes(info.PDFFormatVersion)) {\n      versionId = `v${info.PDFFormatVersion.replace(\".\", \"_\")}`;\n    }\n    let generatorId = \"other\";\n    if (info.Producer) {\n      const producer = info.Producer.toLowerCase();\n      KNOWN_GENERATORS.some(function (generator) {\n        if (!producer.includes(generator)) {\n          return false;\n        }\n        generatorId = generator.replace(/[ .-]/g, \"_\");\n        return true;\n      });\n    }\n    let formType = null;\n    if (info.IsXFAPresent) {\n      formType = \"xfa\";\n    } else if (info.IsAcroFormPresent) {\n      formType = \"acroform\";\n    }\n    this.externalServices.reportTelemetry({\n      type: \"documentInfo\",\n      version: versionId,\n      generator: generatorId,\n      formType,\n    });\n\n    this.eventBus.dispatch(\"metadataloaded\", { source: this });\n  },\n\n  /**\n   * @private\n   */\n  async _initializePageLabels(pdfDocument) {\n    const labels = await pdfDocument.getPageLabels();\n\n    if (pdfDocument !== this.pdfDocument) {\n      return; // The document was closed while the page labels resolved.\n    }\n    if (!labels || AppOptions.get(\"disablePageLabels\")) {\n      return;\n    }\n    const numLabels = labels.length;\n    if (numLabels !== this.pagesCount) {\n      console.error(\n        \"The number of Page Labels does not match the number of pages in the document.\"\n      );\n      return;\n    }\n    let i = 0;\n    // Ignore page labels that correspond to standard page numbering.\n    while (i < numLabels && labels[i] === (i + 1).toString()) {\n      i++;\n    }\n    if (i === numLabels) {\n      return;\n    }\n    const { pdfViewer, pdfThumbnailViewer, toolbar } = this;\n\n    pdfViewer.setPageLabels(labels);\n    pdfThumbnailViewer.setPageLabels(labels);\n\n    // Changing toolbar page display to use labels and we need to set\n    // the label of the current page.\n    toolbar.setPagesCount(numLabels, true);\n    toolbar.setPageNumber(\n      pdfViewer.currentPageNumber,\n      pdfViewer.currentPageLabel\n    );\n  },\n\n  /**\n   * @private\n   */\n  _initializePdfHistory({ fingerprint, viewOnLoad, initialDest = null }) {\n    if (this.isViewerEmbedded || AppOptions.get(\"disableHistory\")) {\n      // The browsing history is only enabled when the viewer is standalone,\n      // i.e. not when it is embedded in a web page.\n      return;\n    }\n    this.pdfHistory.initialize({\n      fingerprint,\n      resetHistory: viewOnLoad === ViewOnLoad.INITIAL,\n      updateUrl: AppOptions.get(\"historyUpdateUrl\"),\n    });\n\n    if (this.pdfHistory.initialBookmark) {\n      this.initialBookmark = this.pdfHistory.initialBookmark;\n\n      this.initialRotation = this.pdfHistory.initialRotation;\n    }\n\n    // Always let the browser history/document hash take precedence.\n    if (\n      initialDest &&\n      !this.initialBookmark &&\n      viewOnLoad === ViewOnLoad.UNKNOWN\n    ) {\n      this.initialBookmark = JSON.stringify(initialDest);\n      // TODO: Re-factor the `PDFHistory` initialization to remove this hack\n      // that's currently necessary to prevent weird initial history state.\n      this.pdfHistory.push({ explicitDest: initialDest, pageNumber: null });\n    }\n  },\n\n  /**\n   * @private\n   */\n  async _initializePermissions(pdfDocument) {\n    const permissions = await pdfDocument.getPermissions();\n\n    if (pdfDocument !== this.pdfDocument) {\n      return; // The document was closed while the permissions resolved.\n    }\n    if (!permissions || !AppOptions.get(\"enablePermissions\")) {\n      return;\n    }\n    // Currently only the \"copy\"-permission is supported.\n    if (!permissions.includes(PermissionFlag.COPY)) {\n      this.appConfig.viewerContainer.classList.add(ENABLE_PERMISSIONS_CLASS);\n    }\n  },\n\n  setInitialView(\n    storedHash,\n    { rotation, sidebarView, scrollMode, spreadMode } = {}\n  ) {\n    const setRotation = angle => {\n      if (isValidRotation(angle)) {\n        this.pdfViewer.pagesRotation = angle;\n      }\n    };\n    const setViewerModes = (scroll, spread) => {\n      if (isValidScrollMode(scroll)) {\n        this.pdfViewer.scrollMode = scroll;\n      }\n      if (isValidSpreadMode(spread)) {\n        this.pdfViewer.spreadMode = spread;\n      }\n    };\n    this.isInitialViewSet = true;\n    this.pdfSidebar.setInitialView(sidebarView);\n\n    setViewerModes(scrollMode, spreadMode);\n\n    if (this.initialBookmark) {\n      setRotation(this.initialRotation);\n      delete this.initialRotation;\n\n      this.pdfLinkService.setHash(this.initialBookmark);\n      this.initialBookmark = null;\n    } else if (storedHash) {\n      setRotation(rotation);\n\n      this.pdfLinkService.setHash(storedHash);\n    }\n\n    // Ensure that the correct page number is displayed in the UI,\n    // even if the active page didn't change during document load.\n    this.toolbar.setPageNumber(\n      this.pdfViewer.currentPageNumber,\n      this.pdfViewer.currentPageLabel\n    );\n    this.secondaryToolbar.setPageNumber(this.pdfViewer.currentPageNumber);\n\n    if (!this.pdfViewer.currentScaleValue) {\n      // Scale was not initialized: invalid bookmark or scale was not specified.\n      // Setting the default one.\n      this.pdfViewer.currentScaleValue = DEFAULT_SCALE_VALUE;\n    }\n  },\n\n  cleanup() {\n    if (!this.pdfDocument) {\n      return; // run cleanup when document is loaded\n    }\n    this.pdfViewer.cleanup();\n    this.pdfThumbnailViewer.cleanup();\n\n    // We don't want to remove fonts used by active page SVGs.\n    if (this.pdfViewer.renderer !== RendererType.SVG) {\n      this.pdfDocument.cleanup();\n    }\n  },\n\n  forceRendering() {\n    this.pdfRenderingQueue.printing = !!this.printService;\n    this.pdfRenderingQueue.isThumbnailViewEnabled = this.pdfSidebar.isThumbnailViewVisible;\n    this.pdfRenderingQueue.renderHighestPriority();\n  },\n\n  beforePrint() {\n    if (this.printService) {\n      // There is no way to suppress beforePrint/afterPrint events,\n      // but PDFPrintService may generate double events -- this will ignore\n      // the second event that will be coming from native window.print().\n      return;\n    }\n\n    if (!this.supportsPrinting) {\n      this.l10n\n        .get(\n          \"printing_not_supported\",\n          null,\n          \"Warning: Printing is not fully supported by this browser.\"\n        )\n        .then(printMessage => {\n          this.error(printMessage);\n        });\n      return;\n    }\n\n    // The beforePrint is a sync method and we need to know layout before\n    // returning from this method. Ensure that we can get sizes of the pages.\n    if (!this.pdfViewer.pageViewsReady) {\n      this.l10n\n        .get(\n          \"printing_not_ready\",\n          null,\n          \"Warning: The PDF is not fully loaded for printing.\"\n        )\n        .then(notReadyMessage => {\n          // eslint-disable-next-line no-alert\n          window.alert(notReadyMessage);\n        });\n      return;\n    }\n\n    const pagesOverview = this.pdfViewer.getPagesOverview();\n    const printContainer = this.appConfig.printContainer;\n    const printResolution = AppOptions.get(\"printResolution\");\n    const optionalContentConfigPromise = this.pdfViewer\n      .optionalContentConfigPromise;\n\n    const printService = PDFPrintServiceFactory.instance.createPrintService(\n      this.pdfDocument,\n      pagesOverview,\n      printContainer,\n      printResolution,\n      optionalContentConfigPromise,\n      this.l10n\n    );\n    this.printService = printService;\n    this.forceRendering();\n\n    printService.layout();\n\n    this.externalServices.reportTelemetry({\n      type: \"print\",\n    });\n  },\n\n  afterPrint() {\n    if (this.printService) {\n      this.printService.destroy();\n      this.printService = null;\n\n      if (this.pdfDocument) {\n        this.pdfDocument.annotationStorage.resetModified();\n      }\n    }\n    this.forceRendering();\n  },\n\n  rotatePages(delta) {\n    if (!this.pdfDocument) {\n      return;\n    }\n    const newRotation = (this.pdfViewer.pagesRotation + 360 + delta) % 360;\n    this.pdfViewer.pagesRotation = newRotation;\n    // Note that the thumbnail viewer is updated, and rendering is triggered,\n    // in the 'rotationchanging' event handler.\n  },\n\n  requestPresentationMode() {\n    if (!this.pdfPresentationMode) {\n      return;\n    }\n    this.pdfPresentationMode.request();\n  },\n\n  triggerPrinting() {\n    if (!this.supportsPrinting) {\n      return;\n    }\n    window.print();\n  },\n\n  bindEvents() {\n    const { eventBus, _boundEvents } = this;\n\n    _boundEvents.beforePrint = this.beforePrint.bind(this);\n    _boundEvents.afterPrint = this.afterPrint.bind(this);\n\n    eventBus._on(\"resize\", webViewerResize);\n    eventBus._on(\"hashchange\", webViewerHashchange);\n    eventBus._on(\"beforeprint\", _boundEvents.beforePrint);\n    eventBus._on(\"afterprint\", _boundEvents.afterPrint);\n    eventBus._on(\"pagerendered\", webViewerPageRendered);\n    eventBus._on(\"updateviewarea\", webViewerUpdateViewarea);\n    eventBus._on(\"pagechanging\", webViewerPageChanging);\n    eventBus._on(\"scalechanging\", webViewerScaleChanging);\n    eventBus._on(\"rotationchanging\", webViewerRotationChanging);\n    eventBus._on(\"sidebarviewchanged\", webViewerSidebarViewChanged);\n    eventBus._on(\"pagemode\", webViewerPageMode);\n    eventBus._on(\"namedaction\", webViewerNamedAction);\n    eventBus._on(\"presentationmodechanged\", webViewerPresentationModeChanged);\n    eventBus._on(\"presentationmode\", webViewerPresentationMode);\n    eventBus._on(\"print\", webViewerPrint);\n    eventBus._on(\"download\", webViewerDownload);\n    eventBus._on(\"save\", webViewerSave);\n    eventBus._on(\"firstpage\", webViewerFirstPage);\n    eventBus._on(\"lastpage\", webViewerLastPage);\n    eventBus._on(\"nextpage\", webViewerNextPage);\n    eventBus._on(\"previouspage\", webViewerPreviousPage);\n    eventBus._on(\"zoomin\", webViewerZoomIn);\n    eventBus._on(\"zoomout\", webViewerZoomOut);\n    eventBus._on(\"zoomreset\", webViewerZoomReset);\n    eventBus._on(\"pagenumberchanged\", webViewerPageNumberChanged);\n    eventBus._on(\"scalechanged\", webViewerScaleChanged);\n    eventBus._on(\"rotatecw\", webViewerRotateCw);\n    eventBus._on(\"rotateccw\", webViewerRotateCcw);\n    eventBus._on(\"optionalcontentconfig\", webViewerOptionalContentConfig);\n    eventBus._on(\"switchscrollmode\", webViewerSwitchScrollMode);\n    eventBus._on(\"scrollmodechanged\", webViewerScrollModeChanged);\n    eventBus._on(\"switchspreadmode\", webViewerSwitchSpreadMode);\n    eventBus._on(\"spreadmodechanged\", webViewerSpreadModeChanged);\n    eventBus._on(\"documentproperties\", webViewerDocumentProperties);\n    eventBus._on(\"find\", webViewerFind);\n    eventBus._on(\"findfromurlhash\", webViewerFindFromUrlHash);\n    eventBus._on(\"updatefindmatchescount\", webViewerUpdateFindMatchesCount);\n    eventBus._on(\"updatefindcontrolstate\", webViewerUpdateFindControlState);\n\n    if (AppOptions.get(\"pdfBug\")) {\n      _boundEvents.reportPageStatsPDFBug = reportPageStatsPDFBug;\n\n      eventBus._on(\"pagerendered\", _boundEvents.reportPageStatsPDFBug);\n      eventBus._on(\"pagechanging\", _boundEvents.reportPageStatsPDFBug);\n    }\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n      eventBus._on(\"fileinputchange\", webViewerFileInputChange);\n      eventBus._on(\"openfile\", webViewerOpenFile);\n    }\n  },\n\n  bindWindowEvents() {\n    const { eventBus, _boundEvents } = this;\n\n    _boundEvents.windowResize = () => {\n      eventBus.dispatch(\"resize\", { source: window });\n    };\n    _boundEvents.windowHashChange = () => {\n      eventBus.dispatch(\"hashchange\", {\n        source: window,\n        hash: document.location.hash.substring(1),\n      });\n    };\n    _boundEvents.windowBeforePrint = () => {\n      eventBus.dispatch(\"beforeprint\", { source: window });\n    };\n    _boundEvents.windowAfterPrint = () => {\n      eventBus.dispatch(\"afterprint\", { source: window });\n    };\n\n    window.addEventListener(\"visibilitychange\", webViewerVisibilityChange);\n    window.addEventListener(\"wheel\", webViewerWheel, { passive: false });\n    window.addEventListener(\"touchstart\", webViewerTouchStart, {\n      passive: false,\n    });\n    window.addEventListener(\"click\", webViewerClick);\n    window.addEventListener(\"keydown\", webViewerKeyDown);\n    window.addEventListener(\"keyup\", webViewerKeyUp);\n    window.addEventListener(\"resize\", _boundEvents.windowResize);\n    window.addEventListener(\"hashchange\", _boundEvents.windowHashChange);\n    window.addEventListener(\"beforeprint\", _boundEvents.windowBeforePrint);\n    window.addEventListener(\"afterprint\", _boundEvents.windowAfterPrint);\n  },\n\n  unbindEvents() {\n    const { eventBus, _boundEvents } = this;\n\n    eventBus._off(\"resize\", webViewerResize);\n    eventBus._off(\"hashchange\", webViewerHashchange);\n    eventBus._off(\"beforeprint\", _boundEvents.beforePrint);\n    eventBus._off(\"afterprint\", _boundEvents.afterPrint);\n    eventBus._off(\"pagerendered\", webViewerPageRendered);\n    eventBus._off(\"updateviewarea\", webViewerUpdateViewarea);\n    eventBus._off(\"pagechanging\", webViewerPageChanging);\n    eventBus._off(\"scalechanging\", webViewerScaleChanging);\n    eventBus._off(\"rotationchanging\", webViewerRotationChanging);\n    eventBus._off(\"sidebarviewchanged\", webViewerSidebarViewChanged);\n    eventBus._off(\"pagemode\", webViewerPageMode);\n    eventBus._off(\"namedaction\", webViewerNamedAction);\n    eventBus._off(\"presentationmodechanged\", webViewerPresentationModeChanged);\n    eventBus._off(\"presentationmode\", webViewerPresentationMode);\n    eventBus._off(\"print\", webViewerPrint);\n    eventBus._off(\"download\", webViewerDownload);\n    eventBus._off(\"save\", webViewerSave);\n    eventBus._off(\"firstpage\", webViewerFirstPage);\n    eventBus._off(\"lastpage\", webViewerLastPage);\n    eventBus._off(\"nextpage\", webViewerNextPage);\n    eventBus._off(\"previouspage\", webViewerPreviousPage);\n    eventBus._off(\"zoomin\", webViewerZoomIn);\n    eventBus._off(\"zoomout\", webViewerZoomOut);\n    eventBus._off(\"zoomreset\", webViewerZoomReset);\n    eventBus._off(\"pagenumberchanged\", webViewerPageNumberChanged);\n    eventBus._off(\"scalechanged\", webViewerScaleChanged);\n    eventBus._off(\"rotatecw\", webViewerRotateCw);\n    eventBus._off(\"rotateccw\", webViewerRotateCcw);\n    eventBus._off(\"optionalcontentconfig\", webViewerOptionalContentConfig);\n    eventBus._off(\"switchscrollmode\", webViewerSwitchScrollMode);\n    eventBus._off(\"scrollmodechanged\", webViewerScrollModeChanged);\n    eventBus._off(\"switchspreadmode\", webViewerSwitchSpreadMode);\n    eventBus._off(\"spreadmodechanged\", webViewerSpreadModeChanged);\n    eventBus._off(\"documentproperties\", webViewerDocumentProperties);\n    eventBus._off(\"find\", webViewerFind);\n    eventBus._off(\"findfromurlhash\", webViewerFindFromUrlHash);\n    eventBus._off(\"updatefindmatchescount\", webViewerUpdateFindMatchesCount);\n    eventBus._off(\"updatefindcontrolstate\", webViewerUpdateFindControlState);\n\n    if (_boundEvents.reportPageStatsPDFBug) {\n      eventBus._off(\"pagerendered\", _boundEvents.reportPageStatsPDFBug);\n      eventBus._off(\"pagechanging\", _boundEvents.reportPageStatsPDFBug);\n\n      _boundEvents.reportPageStatsPDFBug = null;\n    }\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n      eventBus._off(\"fileinputchange\", webViewerFileInputChange);\n      eventBus._off(\"openfile\", webViewerOpenFile);\n    }\n\n    _boundEvents.beforePrint = null;\n    _boundEvents.afterPrint = null;\n  },\n\n  unbindWindowEvents() {\n    const { _boundEvents } = this;\n\n    window.removeEventListener(\"visibilitychange\", webViewerVisibilityChange);\n    window.removeEventListener(\"wheel\", webViewerWheel, { passive: false });\n    window.removeEventListener(\"touchstart\", webViewerTouchStart, {\n      passive: false,\n    });\n    window.removeEventListener(\"click\", webViewerClick);\n    window.removeEventListener(\"keydown\", webViewerKeyDown);\n    window.removeEventListener(\"keyup\", webViewerKeyUp);\n    window.removeEventListener(\"resize\", _boundEvents.windowResize);\n    window.removeEventListener(\"hashchange\", _boundEvents.windowHashChange);\n    window.removeEventListener(\"beforeprint\", _boundEvents.windowBeforePrint);\n    window.removeEventListener(\"afterprint\", _boundEvents.windowAfterPrint);\n\n    _boundEvents.windowResize = null;\n    _boundEvents.windowHashChange = null;\n    _boundEvents.windowBeforePrint = null;\n    _boundEvents.windowAfterPrint = null;\n  },\n\n  accumulateWheelTicks(ticks) {\n    // If the scroll direction changed, reset the accumulated wheel ticks.\n    if (\n      (this._wheelUnusedTicks > 0 && ticks < 0) ||\n      (this._wheelUnusedTicks < 0 && ticks > 0)\n    ) {\n      this._wheelUnusedTicks = 0;\n    }\n    this._wheelUnusedTicks += ticks;\n    const wholeTicks =\n      Math.sign(this._wheelUnusedTicks) *\n      Math.floor(Math.abs(this._wheelUnusedTicks));\n    this._wheelUnusedTicks -= wholeTicks;\n    return wholeTicks;\n  },\n};\n\nlet validateFileURL;\nif (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n  const HOSTED_VIEWER_ORIGINS = [\n    \"null\",\n    \"http://mozilla.github.io\",\n    \"https://mozilla.github.io\",\n  ];\n  validateFileURL = function (file) {\n    if (file === undefined) {\n      return;\n    }\n    try {\n      const viewerOrigin = new URL(window.location.href).origin || \"null\";\n      if (HOSTED_VIEWER_ORIGINS.includes(viewerOrigin)) {\n        // Hosted or local viewer, allow for any file locations\n        return;\n      }\n      const { origin, protocol } = new URL(file, window.location.href);\n      // Removing of the following line will not guarantee that the viewer will\n      // start accepting URLs from foreign origin -- CORS headers on the remote\n      // server must be properly configured.\n      // IE10 / IE11 does not include an origin in `blob:`-URLs. So don't block\n      // any blob:-URL. The browser's same-origin policy will block requests to\n      // blob:-URLs from other origins, so this is safe.\n      if (origin !== viewerOrigin && protocol !== \"blob:\") {\n        throw new Error(\"file origin does not match viewer's\");\n      }\n    } catch (ex) {\n      const message = ex && ex.message;\n      PDFViewerApplication.l10n\n        .get(\"loading_error\", null, \"An error occurred while loading the PDF.\")\n        .then(loadingErrorMessage => {\n          PDFViewerApplication.error(loadingErrorMessage, { message });\n        });\n      throw ex;\n    }\n  };\n}\n\nasync function loadFakeWorker() {\n  if (!GlobalWorkerOptions.workerSrc) {\n    GlobalWorkerOptions.workerSrc = AppOptions.get(\"workerSrc\");\n  }\n  if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n    window.pdfjsWorker = await import(\"pdfjs/core/worker.js\");\n    return undefined;\n  }\n  return loadScript(PDFWorker.getWorkerSrc());\n}\n\nfunction loadAndEnablePDFBug(enabledTabs) {\n  const appConfig = PDFViewerApplication.appConfig;\n  return loadScript(appConfig.debuggerScriptPath).then(function () {\n    PDFBug.enable(enabledTabs);\n    PDFBug.init({ OPS }, appConfig.mainContainer);\n  });\n}\n\nfunction reportPageStatsPDFBug({ pageNumber }) {\n  if (typeof Stats === \"undefined\" || !Stats.enabled) {\n    return;\n  }\n  const pageView = PDFViewerApplication.pdfViewer.getPageView(\n    /* index = */ pageNumber - 1\n  );\n  const pageStats = pageView && pageView.pdfPage && pageView.pdfPage.stats;\n  if (!pageStats) {\n    return;\n  }\n  Stats.add(pageNumber, pageStats);\n}\n\nfunction webViewerInitialized() {\n  const appConfig = PDFViewerApplication.appConfig;\n  let file;\n  if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n    const queryString = document.location.search.substring(1);\n    const params = parseQueryString(queryString);\n    file = \"file\" in params ? params.file : AppOptions.get(\"defaultUrl\");\n    validateFileURL(file);\n  } else if (PDFJSDev.test(\"MOZCENTRAL\")) {\n    file = window.location.href;\n  } else if (PDFJSDev.test(\"CHROME\")) {\n    file = AppOptions.get(\"defaultUrl\");\n  }\n\n  if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n    const fileInput = document.createElement(\"input\");\n    fileInput.id = appConfig.openFileInputName;\n    fileInput.className = \"fileInput\";\n    fileInput.setAttribute(\"type\", \"file\");\n    fileInput.oncontextmenu = noContextMenuHandler;\n    document.body.appendChild(fileInput);\n\n    if (\n      !window.File ||\n      !window.FileReader ||\n      !window.FileList ||\n      !window.Blob\n    ) {\n      appConfig.toolbar.openFile.setAttribute(\"hidden\", \"true\");\n      appConfig.secondaryToolbar.openFileButton.setAttribute(\"hidden\", \"true\");\n    } else {\n      fileInput.value = null;\n    }\n\n    fileInput.addEventListener(\"change\", function (evt) {\n      const files = evt.target.files;\n      if (!files || files.length === 0) {\n        return;\n      }\n      PDFViewerApplication.eventBus.dispatch(\"fileinputchange\", {\n        source: this,\n        fileInput: evt.target,\n      });\n    });\n\n    // Enable dragging-and-dropping a new PDF file onto the viewerContainer.\n    appConfig.mainContainer.addEventListener(\"dragover\", function (evt) {\n      evt.preventDefault();\n\n      evt.dataTransfer.dropEffect = \"move\";\n    });\n    appConfig.mainContainer.addEventListener(\"drop\", function (evt) {\n      evt.preventDefault();\n\n      const files = evt.dataTransfer.files;\n      if (!files || files.length === 0) {\n        return;\n      }\n      PDFViewerApplication.eventBus.dispatch(\"fileinputchange\", {\n        source: this,\n        fileInput: evt.dataTransfer,\n      });\n    });\n  } else {\n    appConfig.toolbar.openFile.setAttribute(\"hidden\", \"true\");\n    appConfig.secondaryToolbar.openFileButton.setAttribute(\"hidden\", \"true\");\n  }\n\n  if (!PDFViewerApplication.supportsDocumentFonts) {\n    AppOptions.set(\"disableFontFace\", true);\n    PDFViewerApplication.l10n\n      .get(\n        \"web_fonts_disabled\",\n        null,\n        \"Web fonts are disabled: unable to use embedded PDF fonts.\"\n      )\n      .then(msg => {\n        console.warn(msg);\n      });\n  }\n\n  if (!PDFViewerApplication.supportsPrinting) {\n    appConfig.toolbar.print.classList.add(\"hidden\");\n    appConfig.secondaryToolbar.printButton.classList.add(\"hidden\");\n  }\n\n  if (!PDFViewerApplication.supportsFullscreen) {\n    appConfig.toolbar.presentationModeButton.classList.add(\"hidden\");\n    appConfig.secondaryToolbar.presentationModeButton.classList.add(\"hidden\");\n  }\n\n  if (PDFViewerApplication.supportsIntegratedFind) {\n    appConfig.toolbar.viewFind.classList.add(\"hidden\");\n  }\n\n  appConfig.mainContainer.addEventListener(\n    \"transitionend\",\n    function (evt) {\n      if (evt.target === /* mainContainer */ this) {\n        PDFViewerApplication.eventBus.dispatch(\"resize\", { source: this });\n      }\n    },\n    true\n  );\n\n  try {\n    webViewerOpenFileViaURL(file);\n  } catch (reason) {\n    PDFViewerApplication.l10n\n      .get(\"loading_error\", null, \"An error occurred while loading the PDF.\")\n      .then(msg => {\n        PDFViewerApplication.error(msg, reason);\n      });\n  }\n}\n\nlet webViewerOpenFileViaURL;\nif (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n  webViewerOpenFileViaURL = function (file) {\n    if (file && file.lastIndexOf(\"file:\", 0) === 0) {\n      // file:-scheme. Load the contents in the main thread because QtWebKit\n      // cannot load file:-URLs in a Web Worker. file:-URLs are usually loaded\n      // very quickly, so there is no need to set up progress event listeners.\n      PDFViewerApplication.setTitleUsingUrl(file);\n      const xhr = new XMLHttpRequest();\n      xhr.onload = function () {\n        PDFViewerApplication.open(new Uint8Array(xhr.response));\n      };\n      xhr.open(\"GET\", file);\n      xhr.responseType = \"arraybuffer\";\n      xhr.send();\n      return;\n    }\n\n    if (file) {\n      PDFViewerApplication.open(file);\n    }\n  };\n} else if (PDFJSDev.test(\"MOZCENTRAL || CHROME\")) {\n  webViewerOpenFileViaURL = function (file) {\n    PDFViewerApplication.setTitleUsingUrl(file);\n    PDFViewerApplication.initPassiveLoading();\n  };\n} else {\n  webViewerOpenFileViaURL = function (file) {\n    if (file) {\n      throw new Error(\"Not implemented: webViewerOpenFileViaURL\");\n    }\n  };\n}\n\nfunction webViewerResetPermissions() {\n  const { appConfig } = PDFViewerApplication;\n  if (!appConfig) {\n    return;\n  }\n  // Currently only the \"copy\"-permission is supported.\n  appConfig.viewerContainer.classList.remove(ENABLE_PERMISSIONS_CLASS);\n}\n\nfunction webViewerPageRendered({ pageNumber, timestamp, error }) {\n  // If the page is still visible when it has finished rendering,\n  // ensure that the page number input loading indicator is hidden.\n  if (pageNumber === PDFViewerApplication.page) {\n    PDFViewerApplication.toolbar.updateLoadingIndicatorState(false);\n  }\n\n  // Use the rendered page to set the corresponding thumbnail image.\n  if (PDFViewerApplication.pdfSidebar.isThumbnailViewVisible) {\n    const pageView = PDFViewerApplication.pdfViewer.getPageView(\n      /* index = */ pageNumber - 1\n    );\n    const thumbnailView = PDFViewerApplication.pdfThumbnailViewer.getThumbnail(\n      /* index = */ pageNumber - 1\n    );\n    if (pageView && thumbnailView) {\n      thumbnailView.setImage(pageView);\n    }\n  }\n\n  if (error) {\n    PDFViewerApplication.l10n\n      .get(\n        \"rendering_error\",\n        null,\n        \"An error occurred while rendering the page.\"\n      )\n      .then(msg => {\n        PDFViewerApplication.error(msg, error);\n      });\n  }\n\n  PDFViewerApplication.externalServices.reportTelemetry({\n    type: \"pageInfo\",\n    timestamp,\n  });\n  // It is a good time to report stream and font types.\n  PDFViewerApplication.pdfDocument.getStats().then(function (stats) {\n    PDFViewerApplication.externalServices.reportTelemetry({\n      type: \"documentStats\",\n      stats,\n    });\n  });\n}\n\nfunction webViewerPageMode({ mode }) {\n  // Handle the 'pagemode' hash parameter, see also `PDFLinkService_setHash`.\n  let view;\n  switch (mode) {\n    case \"thumbs\":\n      view = SidebarView.THUMBS;\n      break;\n    case \"bookmarks\":\n    case \"outline\": // non-standard\n      view = SidebarView.OUTLINE;\n      break;\n    case \"attachments\": // non-standard\n      view = SidebarView.ATTACHMENTS;\n      break;\n    case \"layers\": // non-standard\n      view = SidebarView.LAYERS;\n      break;\n    case \"none\":\n      view = SidebarView.NONE;\n      break;\n    default:\n      console.error('Invalid \"pagemode\" hash parameter: ' + mode);\n      return;\n  }\n  PDFViewerApplication.pdfSidebar.switchView(view, /* forceOpen = */ true);\n}\n\nfunction webViewerNamedAction(evt) {\n  // Processing a couple of named actions that might be useful, see also\n  // `PDFLinkService.executeNamedAction`.\n  switch (evt.action) {\n    case \"GoToPage\":\n      PDFViewerApplication.appConfig.toolbar.pageNumber.select();\n      break;\n\n    case \"Find\":\n      if (!PDFViewerApplication.supportsIntegratedFind) {\n        PDFViewerApplication.findBar.toggle();\n      }\n      break;\n\n    case \"Print\":\n      PDFViewerApplication.triggerPrinting();\n      break;\n\n    case \"SaveAs\":\n      webViewerSave();\n      break;\n  }\n}\n\nfunction webViewerPresentationModeChanged({ active, switchInProgress }) {\n  let state = PresentationModeState.NORMAL;\n  if (switchInProgress) {\n    state = PresentationModeState.CHANGING;\n  } else if (active) {\n    state = PresentationModeState.FULLSCREEN;\n  }\n  PDFViewerApplication.pdfViewer.presentationModeState = state;\n}\n\nfunction webViewerSidebarViewChanged(evt) {\n  PDFViewerApplication.pdfRenderingQueue.isThumbnailViewEnabled =\n    PDFViewerApplication.pdfSidebar.isThumbnailViewVisible;\n\n  const store = PDFViewerApplication.store;\n  if (store && PDFViewerApplication.isInitialViewSet) {\n    // Only update the storage when the document has been loaded *and* rendered.\n    store.set(\"sidebarView\", evt.view).catch(function () {});\n  }\n}\n\nfunction webViewerUpdateViewarea(evt) {\n  const location = evt.location,\n    store = PDFViewerApplication.store;\n\n  if (store && PDFViewerApplication.isInitialViewSet) {\n    store\n      .setMultiple({\n        page: location.pageNumber,\n        zoom: location.scale,\n        scrollLeft: location.left,\n        scrollTop: location.top,\n        rotation: location.rotation,\n      })\n      .catch(function () {\n        /* unable to write to storage */\n      });\n  }\n  const href = PDFViewerApplication.pdfLinkService.getAnchorUrl(\n    location.pdfOpenParams\n  );\n  PDFViewerApplication.appConfig.toolbar.viewBookmark.href = href;\n  PDFViewerApplication.appConfig.secondaryToolbar.viewBookmarkButton.href = href;\n\n  // Show/hide the loading indicator in the page number input element.\n  const currentPage = PDFViewerApplication.pdfViewer.getPageView(\n    /* index = */ PDFViewerApplication.page - 1\n  );\n  const loading =\n    (currentPage && currentPage.renderingState) !== RenderingStates.FINISHED;\n  PDFViewerApplication.toolbar.updateLoadingIndicatorState(loading);\n}\n\nfunction webViewerScrollModeChanged(evt) {\n  const store = PDFViewerApplication.store;\n  if (store && PDFViewerApplication.isInitialViewSet) {\n    // Only update the storage when the document has been loaded *and* rendered.\n    store.set(\"scrollMode\", evt.mode).catch(function () {});\n  }\n}\n\nfunction webViewerSpreadModeChanged(evt) {\n  const store = PDFViewerApplication.store;\n  if (store && PDFViewerApplication.isInitialViewSet) {\n    // Only update the storage when the document has been loaded *and* rendered.\n    store.set(\"spreadMode\", evt.mode).catch(function () {});\n  }\n}\n\nfunction webViewerResize() {\n  const { pdfDocument, pdfViewer } = PDFViewerApplication;\n  if (!pdfDocument) {\n    return;\n  }\n  const currentScaleValue = pdfViewer.currentScaleValue;\n  if (\n    currentScaleValue === \"auto\" ||\n    currentScaleValue === \"page-fit\" ||\n    currentScaleValue === \"page-width\"\n  ) {\n    // Note: the scale is constant for 'page-actual'.\n    pdfViewer.currentScaleValue = currentScaleValue;\n  }\n  pdfViewer.update();\n}\n\nfunction webViewerHashchange(evt) {\n  const hash = evt.hash;\n  if (!hash) {\n    return;\n  }\n  if (!PDFViewerApplication.isInitialViewSet) {\n    PDFViewerApplication.initialBookmark = hash;\n  } else if (!PDFViewerApplication.pdfHistory.popStateInProgress) {\n    PDFViewerApplication.pdfLinkService.setHash(hash);\n  }\n}\n\nlet webViewerFileInputChange, webViewerOpenFile;\nif (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n  webViewerFileInputChange = function (evt) {\n    if (\n      PDFViewerApplication.pdfViewer &&\n      PDFViewerApplication.pdfViewer.isInPresentationMode\n    ) {\n      return; // Opening a new PDF file isn't supported in Presentation Mode.\n    }\n    const file = evt.fileInput.files[0];\n\n    if (!viewerCompatibilityParams.disableCreateObjectURL) {\n      let url = URL.createObjectURL(file);\n      if (file.name) {\n        url = { url, originalUrl: file.name };\n      }\n      PDFViewerApplication.open(url);\n    } else {\n      PDFViewerApplication.setTitleUsingUrl(file.name);\n      // Read the local file into a Uint8Array.\n      const fileReader = new FileReader();\n      fileReader.onload = function webViewerChangeFileReaderOnload(event) {\n        const buffer = event.target.result;\n        PDFViewerApplication.open(new Uint8Array(buffer));\n      };\n      fileReader.readAsArrayBuffer(file);\n    }\n\n    // URL does not reflect proper document location - hiding some icons.\n    const appConfig = PDFViewerApplication.appConfig;\n    appConfig.toolbar.viewBookmark.setAttribute(\"hidden\", \"true\");\n    appConfig.secondaryToolbar.viewBookmarkButton.setAttribute(\n      \"hidden\",\n      \"true\"\n    );\n    appConfig.toolbar.download.setAttribute(\"hidden\", \"true\");\n    appConfig.secondaryToolbar.downloadButton.setAttribute(\"hidden\", \"true\");\n  };\n\n  webViewerOpenFile = function (evt) {\n    const openFileInputName = PDFViewerApplication.appConfig.openFileInputName;\n    document.getElementById(openFileInputName).click();\n  };\n}\n\nfunction webViewerPresentationMode() {\n  PDFViewerApplication.requestPresentationMode();\n}\nfunction webViewerPrint() {\n  PDFViewerApplication.triggerPrinting();\n}\nfunction webViewerDownloadOrSave(sourceEventType) {\n  if (\n    PDFViewerApplication.pdfDocument &&\n    PDFViewerApplication.pdfDocument.annotationStorage.size > 0\n  ) {\n    PDFViewerApplication.save({ sourceEventType });\n  } else {\n    PDFViewerApplication.download({ sourceEventType });\n  }\n}\nfunction webViewerDownload() {\n  webViewerDownloadOrSave(\"download\");\n}\nfunction webViewerSave() {\n  webViewerDownloadOrSave(\"save\");\n}\nfunction webViewerFirstPage() {\n  if (PDFViewerApplication.pdfDocument) {\n    PDFViewerApplication.page = 1;\n  }\n}\nfunction webViewerLastPage() {\n  if (PDFViewerApplication.pdfDocument) {\n    PDFViewerApplication.page = PDFViewerApplication.pagesCount;\n  }\n}\nfunction webViewerNextPage() {\n  PDFViewerApplication.page++;\n}\nfunction webViewerPreviousPage() {\n  PDFViewerApplication.page--;\n}\nfunction webViewerZoomIn() {\n  PDFViewerApplication.zoomIn();\n}\nfunction webViewerZoomOut() {\n  PDFViewerApplication.zoomOut();\n}\nfunction webViewerZoomReset() {\n  PDFViewerApplication.zoomReset();\n}\nfunction webViewerPageNumberChanged(evt) {\n  const pdfViewer = PDFViewerApplication.pdfViewer;\n  // Note that for `<input type=\"number\">` HTML elements, an empty string will\n  // be returned for non-number inputs; hence we simply do nothing in that case.\n  if (evt.value !== \"\") {\n    PDFViewerApplication.pdfLinkService.goToPage(evt.value);\n  }\n\n  // Ensure that the page number input displays the correct value, even if the\n  // value entered by the user was invalid (e.g. a floating point number).\n  if (\n    evt.value !== pdfViewer.currentPageNumber.toString() &&\n    evt.value !== pdfViewer.currentPageLabel\n  ) {\n    PDFViewerApplication.toolbar.setPageNumber(\n      pdfViewer.currentPageNumber,\n      pdfViewer.currentPageLabel\n    );\n  }\n}\nfunction webViewerScaleChanged(evt) {\n  PDFViewerApplication.pdfViewer.currentScaleValue = evt.value;\n}\nfunction webViewerRotateCw() {\n  PDFViewerApplication.rotatePages(90);\n}\nfunction webViewerRotateCcw() {\n  PDFViewerApplication.rotatePages(-90);\n}\nfunction webViewerOptionalContentConfig(evt) {\n  PDFViewerApplication.pdfViewer.optionalContentConfigPromise = evt.promise;\n}\nfunction webViewerSwitchScrollMode(evt) {\n  PDFViewerApplication.pdfViewer.scrollMode = evt.mode;\n}\nfunction webViewerSwitchSpreadMode(evt) {\n  PDFViewerApplication.pdfViewer.spreadMode = evt.mode;\n}\nfunction webViewerDocumentProperties() {\n  PDFViewerApplication.pdfDocumentProperties.open();\n}\n\nfunction webViewerFind(evt) {\n  PDFViewerApplication.findController.executeCommand(\"find\" + evt.type, {\n    query: evt.query,\n    phraseSearch: evt.phraseSearch,\n    caseSensitive: evt.caseSensitive,\n    entireWord: evt.entireWord,\n    highlightAll: evt.highlightAll,\n    findPrevious: evt.findPrevious,\n  });\n}\n\nfunction webViewerFindFromUrlHash(evt) {\n  PDFViewerApplication.findController.executeCommand(\"find\", {\n    query: evt.query,\n    phraseSearch: evt.phraseSearch,\n    caseSensitive: false,\n    entireWord: false,\n    highlightAll: true,\n    findPrevious: false,\n  });\n}\n\nfunction webViewerUpdateFindMatchesCount({ matchesCount }) {\n  if (PDFViewerApplication.supportsIntegratedFind) {\n    PDFViewerApplication.externalServices.updateFindMatchesCount(matchesCount);\n  } else {\n    PDFViewerApplication.findBar.updateResultsCount(matchesCount);\n  }\n}\n\nfunction webViewerUpdateFindControlState({\n  state,\n  previous,\n  matchesCount,\n  rawQuery,\n}) {\n  if (PDFViewerApplication.supportsIntegratedFind) {\n    PDFViewerApplication.externalServices.updateFindControlState({\n      result: state,\n      findPrevious: previous,\n      matchesCount,\n      rawQuery,\n    });\n  } else {\n    PDFViewerApplication.findBar.updateUIState(state, previous, matchesCount);\n  }\n}\n\nfunction webViewerScaleChanging(evt) {\n  PDFViewerApplication.toolbar.setPageScale(evt.presetValue, evt.scale);\n\n  PDFViewerApplication.pdfViewer.update();\n}\n\nfunction webViewerRotationChanging(evt) {\n  PDFViewerApplication.pdfThumbnailViewer.pagesRotation = evt.pagesRotation;\n\n  PDFViewerApplication.forceRendering();\n  // Ensure that the active page doesn't change during rotation.\n  PDFViewerApplication.pdfViewer.currentPageNumber = evt.pageNumber;\n}\n\nfunction webViewerPageChanging({ pageNumber, pageLabel }) {\n  PDFViewerApplication.toolbar.setPageNumber(pageNumber, pageLabel);\n  PDFViewerApplication.secondaryToolbar.setPageNumber(pageNumber);\n\n  if (PDFViewerApplication.pdfSidebar.isThumbnailViewVisible) {\n    PDFViewerApplication.pdfThumbnailViewer.scrollThumbnailIntoView(pageNumber);\n  }\n}\n\nfunction webViewerVisibilityChange(evt) {\n  if (document.visibilityState === \"visible\") {\n    // Ignore mouse wheel zooming during tab switches (bug 1503412).\n    setZoomDisabledTimeout();\n  }\n}\n\nlet zoomDisabledTimeout = null;\nfunction setZoomDisabledTimeout() {\n  if (zoomDisabledTimeout) {\n    clearTimeout(zoomDisabledTimeout);\n  }\n  zoomDisabledTimeout = setTimeout(function () {\n    zoomDisabledTimeout = null;\n  }, WHEEL_ZOOM_DISABLED_TIMEOUT);\n}\n\nfunction webViewerWheel(evt) {\n  const {\n    pdfViewer,\n    supportedMouseWheelZoomModifierKeys,\n  } = PDFViewerApplication;\n\n  if (pdfViewer.isInPresentationMode) {\n    return;\n  }\n\n  if (\n    (evt.ctrlKey && supportedMouseWheelZoomModifierKeys.ctrlKey) ||\n    (evt.metaKey && supportedMouseWheelZoomModifierKeys.metaKey)\n  ) {\n    // Only zoom the pages, not the entire viewer.\n    evt.preventDefault();\n    // NOTE: this check must be placed *after* preventDefault.\n    if (zoomDisabledTimeout || document.visibilityState === \"hidden\") {\n      return;\n    }\n\n    const previousScale = pdfViewer.currentScale;\n\n    const delta = normalizeWheelEventDirection(evt);\n    let ticks = 0;\n    if (\n      evt.deltaMode === WheelEvent.DOM_DELTA_LINE ||\n      evt.deltaMode === WheelEvent.DOM_DELTA_PAGE\n    ) {\n      // For line-based devices, use one tick per event, because different\n      // OSs have different defaults for the number lines. But we generally\n      // want one \"clicky\" roll of the wheel (which produces one event) to\n      // adjust the zoom by one step.\n      if (Math.abs(delta) >= 1) {\n        ticks = Math.sign(delta);\n      } else {\n        // If we're getting fractional lines (I can't think of a scenario\n        // this might actually happen), be safe and use the accumulator.\n        ticks = PDFViewerApplication.accumulateWheelTicks(delta);\n      }\n    } else {\n      // pixel-based devices\n      const PIXELS_PER_LINE_SCALE = 30;\n      ticks = PDFViewerApplication.accumulateWheelTicks(\n        delta / PIXELS_PER_LINE_SCALE\n      );\n    }\n\n    if (ticks < 0) {\n      PDFViewerApplication.zoomOut(-ticks);\n    } else if (ticks > 0) {\n      PDFViewerApplication.zoomIn(ticks);\n    }\n\n    const currentScale = pdfViewer.currentScale;\n    if (previousScale !== currentScale) {\n      // After scaling the page via zoomIn/zoomOut, the position of the upper-\n      // left corner is restored. When the mouse wheel is used, the position\n      // under the cursor should be restored instead.\n      const scaleCorrectionFactor = currentScale / previousScale - 1;\n      const rect = pdfViewer.container.getBoundingClientRect();\n      const dx = evt.clientX - rect.left;\n      const dy = evt.clientY - rect.top;\n      pdfViewer.container.scrollLeft += dx * scaleCorrectionFactor;\n      pdfViewer.container.scrollTop += dy * scaleCorrectionFactor;\n    }\n  } else {\n    setZoomDisabledTimeout();\n  }\n}\n\nfunction webViewerTouchStart(evt) {\n  if (evt.touches.length > 1) {\n    // Disable touch-based zooming, because the entire UI bits gets zoomed and\n    // that doesn't look great. If we do want to have a good touch-based\n    // zooming experience, we need to implement smooth zoom capability (probably\n    // using a CSS transform for faster visual response, followed by async\n    // re-rendering at the final zoom level) and do gesture detection on the\n    // touchmove events to drive it. Or if we want to settle for a less good\n    // experience we can make the touchmove events drive the existing step-zoom\n    // behaviour that the ctrl+mousewheel path takes.\n    evt.preventDefault();\n  }\n}\n\nfunction webViewerClick(evt) {\n  // Avoid triggering the fallback bar when the user clicks on the\n  // toolbar or sidebar.\n  if (\n    PDFViewerApplication.triggerDelayedFallback &&\n    PDFViewerApplication.pdfViewer.containsElement(evt.target)\n  ) {\n    PDFViewerApplication.triggerDelayedFallback();\n  }\n\n  if (!PDFViewerApplication.secondaryToolbar.isOpen) {\n    return;\n  }\n  const appConfig = PDFViewerApplication.appConfig;\n  if (\n    PDFViewerApplication.pdfViewer.containsElement(evt.target) ||\n    (appConfig.toolbar.container.contains(evt.target) &&\n      evt.target !== appConfig.secondaryToolbar.toggleButton)\n  ) {\n    PDFViewerApplication.secondaryToolbar.close();\n  }\n}\n\nfunction webViewerKeyUp(evt) {\n  if (evt.keyCode === 9) {\n    // The user is tabbing into the viewer. Trigger the fallback bar if it has\n    // not already been displayed.\n    if (PDFViewerApplication.triggerDelayedFallback) {\n      PDFViewerApplication.triggerDelayedFallback();\n    }\n  }\n}\n\nfunction webViewerKeyDown(evt) {\n  if (PDFViewerApplication.overlayManager.active) {\n    return;\n  }\n\n  let handled = false,\n    ensureViewerFocused = false;\n  const cmd =\n    (evt.ctrlKey ? 1 : 0) |\n    (evt.altKey ? 2 : 0) |\n    (evt.shiftKey ? 4 : 0) |\n    (evt.metaKey ? 8 : 0);\n\n  const pdfViewer = PDFViewerApplication.pdfViewer;\n  const isViewerInPresentationMode =\n    pdfViewer && pdfViewer.isInPresentationMode;\n\n  // First, handle the key bindings that are independent whether an input\n  // control is selected or not.\n  if (cmd === 1 || cmd === 8 || cmd === 5 || cmd === 12) {\n    // either CTRL or META key with optional SHIFT.\n    switch (evt.keyCode) {\n      case 70: // f\n        if (!PDFViewerApplication.supportsIntegratedFind && !evt.shiftKey) {\n          PDFViewerApplication.findBar.open();\n          handled = true;\n        }\n        break;\n      case 71: // g\n        if (!PDFViewerApplication.supportsIntegratedFind) {\n          const findState = PDFViewerApplication.findController.state;\n          if (findState) {\n            PDFViewerApplication.findController.executeCommand(\"findagain\", {\n              query: findState.query,\n              phraseSearch: findState.phraseSearch,\n              caseSensitive: findState.caseSensitive,\n              entireWord: findState.entireWord,\n              highlightAll: findState.highlightAll,\n              findPrevious: cmd === 5 || cmd === 12,\n            });\n          }\n          handled = true;\n        }\n        break;\n      case 61: // FF/Mac '='\n      case 107: // FF '+' and '='\n      case 187: // Chrome '+'\n      case 171: // FF with German keyboard\n        if (!isViewerInPresentationMode) {\n          PDFViewerApplication.zoomIn();\n        }\n        handled = true;\n        break;\n      case 173: // FF/Mac '-'\n      case 109: // FF '-'\n      case 189: // Chrome '-'\n        if (!isViewerInPresentationMode) {\n          PDFViewerApplication.zoomOut();\n        }\n        handled = true;\n        break;\n      case 48: // '0'\n      case 96: // '0' on Numpad of Swedish keyboard\n        if (!isViewerInPresentationMode) {\n          // keeping it unhandled (to restore page zoom to 100%)\n          setTimeout(function () {\n            // ... and resetting the scale after browser adjusts its scale\n            PDFViewerApplication.zoomReset();\n          });\n          handled = false;\n        }\n        break;\n\n      case 38: // up arrow\n        if (isViewerInPresentationMode || PDFViewerApplication.page > 1) {\n          PDFViewerApplication.page = 1;\n          handled = true;\n          ensureViewerFocused = true;\n        }\n        break;\n      case 40: // down arrow\n        if (\n          isViewerInPresentationMode ||\n          PDFViewerApplication.page < PDFViewerApplication.pagesCount\n        ) {\n          PDFViewerApplication.page = PDFViewerApplication.pagesCount;\n          handled = true;\n          ensureViewerFocused = true;\n        }\n        break;\n    }\n  }\n\n  if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC || CHROME\")) {\n    const { eventBus } = PDFViewerApplication;\n\n    // CTRL or META without shift\n    if (cmd === 1 || cmd === 8) {\n      switch (evt.keyCode) {\n        case 83: // s\n          eventBus.dispatch(\"download\", { source: window });\n          handled = true;\n          break;\n\n        case 79: // o\n          if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n            eventBus.dispatch(\"openfile\", { source: window });\n            handled = true;\n          }\n          break;\n      }\n    }\n  }\n\n  // CTRL+ALT or Option+Command\n  if (cmd === 3 || cmd === 10) {\n    switch (evt.keyCode) {\n      case 80: // p\n        PDFViewerApplication.requestPresentationMode();\n        handled = true;\n        break;\n      case 71: // g\n        // focuses input#pageNumber field\n        PDFViewerApplication.appConfig.toolbar.pageNumber.select();\n        handled = true;\n        break;\n    }\n  }\n\n  if (handled) {\n    if (ensureViewerFocused && !isViewerInPresentationMode) {\n      pdfViewer.focus();\n    }\n    evt.preventDefault();\n    return;\n  }\n\n  // Some shortcuts should not get handled if a control/input element\n  // is selected.\n  const curElement = getActiveOrFocusedElement();\n  const curElementTagName = curElement && curElement.tagName.toUpperCase();\n  if (\n    curElementTagName === \"INPUT\" ||\n    curElementTagName === \"TEXTAREA\" ||\n    curElementTagName === \"SELECT\" ||\n    (curElement && curElement.isContentEditable)\n  ) {\n    // Make sure that the secondary toolbar is closed when Escape is pressed.\n    if (evt.keyCode !== /* Esc = */ 27) {\n      return;\n    }\n  }\n\n  // No control key pressed at all.\n  if (cmd === 0) {\n    let turnPage = 0,\n      turnOnlyIfPageFit = false;\n    switch (evt.keyCode) {\n      case 38: // up arrow\n      case 33: // pg up\n        // vertical scrolling using arrow/pg keys\n        if (pdfViewer.isVerticalScrollbarEnabled) {\n          turnOnlyIfPageFit = true;\n        }\n        turnPage = -1;\n        break;\n      case 8: // backspace\n        if (!isViewerInPresentationMode) {\n          turnOnlyIfPageFit = true;\n        }\n        turnPage = -1;\n        break;\n      case 37: // left arrow\n        // horizontal scrolling using arrow keys\n        if (pdfViewer.isHorizontalScrollbarEnabled) {\n          turnOnlyIfPageFit = true;\n        }\n      /* falls through */\n      case 75: // 'k'\n      case 80: // 'p'\n        turnPage = -1;\n        break;\n      case 27: // esc key\n        if (PDFViewerApplication.secondaryToolbar.isOpen) {\n          PDFViewerApplication.secondaryToolbar.close();\n          handled = true;\n        }\n        if (\n          !PDFViewerApplication.supportsIntegratedFind &&\n          PDFViewerApplication.findBar.opened\n        ) {\n          PDFViewerApplication.findBar.close();\n          handled = true;\n        }\n        break;\n      case 40: // down arrow\n      case 34: // pg down\n        // vertical scrolling using arrow/pg keys\n        if (pdfViewer.isVerticalScrollbarEnabled) {\n          turnOnlyIfPageFit = true;\n        }\n        turnPage = 1;\n        break;\n      case 13: // enter key\n      case 32: // spacebar\n        if (!isViewerInPresentationMode) {\n          turnOnlyIfPageFit = true;\n        }\n        turnPage = 1;\n        break;\n      case 39: // right arrow\n        // horizontal scrolling using arrow keys\n        if (pdfViewer.isHorizontalScrollbarEnabled) {\n          turnOnlyIfPageFit = true;\n        }\n      /* falls through */\n      case 74: // 'j'\n      case 78: // 'n'\n        turnPage = 1;\n        break;\n\n      case 36: // home\n        if (isViewerInPresentationMode || PDFViewerApplication.page > 1) {\n          PDFViewerApplication.page = 1;\n          handled = true;\n          ensureViewerFocused = true;\n        }\n        break;\n      case 35: // end\n        if (\n          isViewerInPresentationMode ||\n          PDFViewerApplication.page < PDFViewerApplication.pagesCount\n        ) {\n          PDFViewerApplication.page = PDFViewerApplication.pagesCount;\n          handled = true;\n          ensureViewerFocused = true;\n        }\n        break;\n\n      case 83: // 's'\n        PDFViewerApplication.pdfCursorTools.switchTool(CursorTool.SELECT);\n        break;\n      case 72: // 'h'\n        PDFViewerApplication.pdfCursorTools.switchTool(CursorTool.HAND);\n        break;\n\n      case 82: // 'r'\n        PDFViewerApplication.rotatePages(90);\n        break;\n\n      case 115: // F4\n        PDFViewerApplication.pdfSidebar.toggle();\n        break;\n    }\n\n    if (\n      turnPage !== 0 &&\n      (!turnOnlyIfPageFit || pdfViewer.currentScaleValue === \"page-fit\")\n    ) {\n      if (turnPage > 0) {\n        if (PDFViewerApplication.page < PDFViewerApplication.pagesCount) {\n          PDFViewerApplication.page++;\n        }\n      } else {\n        if (PDFViewerApplication.page > 1) {\n          PDFViewerApplication.page--;\n        }\n      }\n      handled = true;\n    }\n  }\n\n  // shift-key\n  if (cmd === 4) {\n    switch (evt.keyCode) {\n      case 13: // enter key\n      case 32: // spacebar\n        if (\n          !isViewerInPresentationMode &&\n          pdfViewer.currentScaleValue !== \"page-fit\"\n        ) {\n          break;\n        }\n        if (PDFViewerApplication.page > 1) {\n          PDFViewerApplication.page--;\n        }\n        handled = true;\n        break;\n\n      case 82: // 'r'\n        PDFViewerApplication.rotatePages(-90);\n        break;\n    }\n  }\n\n  if (!handled && !isViewerInPresentationMode) {\n    // 33=Page Up  34=Page Down  35=End    36=Home\n    // 37=Left     38=Up         39=Right  40=Down\n    // 32=Spacebar\n    if (\n      (evt.keyCode >= 33 && evt.keyCode <= 40) ||\n      (evt.keyCode === 32 && curElementTagName !== \"BUTTON\")\n    ) {\n      ensureViewerFocused = true;\n    }\n  }\n\n  if (ensureViewerFocused && !pdfViewer.containsElement(curElement)) {\n    // The page container is not focused, but a page navigation key has been\n    // pressed. Change the focus to the viewer container to make sure that\n    // navigation by keyboard works as expected.\n    pdfViewer.focus();\n  }\n\n  if (handled) {\n    evt.preventDefault();\n  }\n}\n\nfunction beforeUnload(evt) {\n  evt.preventDefault();\n  evt.returnValue = \"\";\n  return false;\n}\n\n/**\n * Converts API PageLayout values to the format used by `PDFViewer`.\n * NOTE: This is supported to the extent that the viewer implements the\n *       necessary Scroll/Spread modes (since SinglePage, TwoPageLeft,\n *       and TwoPageRight all suggests using non-continuous scrolling).\n * @param {string} mode - The API PageLayout value.\n * @returns {number} A value from {SpreadMode}.\n */\nfunction apiPageLayoutToSpreadMode(layout) {\n  switch (layout) {\n    case \"SinglePage\":\n    case \"OneColumn\":\n      return SpreadMode.NONE;\n    case \"TwoColumnLeft\":\n    case \"TwoPageLeft\":\n      return SpreadMode.ODD;\n    case \"TwoColumnRight\":\n    case \"TwoPageRight\":\n      return SpreadMode.EVEN;\n  }\n  return SpreadMode.NONE; // Default value.\n}\n\n/**\n * Converts API PageMode values to the format used by `PDFSidebar`.\n * NOTE: There's also a \"FullScreen\" parameter which is not possible to support,\n *       since the Fullscreen API used in browsers requires that entering\n *       fullscreen mode only occurs as a result of a user-initiated event.\n * @param {string} mode - The API PageMode value.\n * @returns {number} A value from {SidebarView}.\n */\nfunction apiPageModeToSidebarView(mode) {\n  switch (mode) {\n    case \"UseNone\":\n      return SidebarView.NONE;\n    case \"UseThumbs\":\n      return SidebarView.THUMBS;\n    case \"UseOutlines\":\n      return SidebarView.OUTLINE;\n    case \"UseAttachments\":\n      return SidebarView.ATTACHMENTS;\n    case \"UseOC\":\n      return SidebarView.LAYERS;\n  }\n  return SidebarView.NONE; // Default value.\n}\n\n/* Abstract factory for the print service. */\nconst PDFPrintServiceFactory = {\n  instance: {\n    supportsPrinting: false,\n    createPrintService() {\n      throw new Error(\"Not implemented: createPrintService\");\n    },\n  },\n};\n\nexport {\n  PDFViewerApplication,\n  DefaultExternalServices,\n  PDFPrintServiceFactory,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst CSS_UNITS = 96.0 / 72.0;\nconst DEFAULT_SCALE_VALUE = \"auto\";\nconst DEFAULT_SCALE = 1.0;\nconst MIN_SCALE = 0.1;\nconst MAX_SCALE = 10.0;\nconst UNKNOWN_SCALE = 0;\nconst MAX_AUTO_SCALE = 1.25;\nconst SCROLLBAR_PADDING = 40;\nconst VERTICAL_PADDING = 5;\n\nconst LOADINGBAR_END_OFFSET_VAR = \"--loadingBar-end-offset\";\n\nconst PresentationModeState = {\n  UNKNOWN: 0,\n  NORMAL: 1,\n  CHANGING: 2,\n  FULLSCREEN: 3,\n};\n\nconst RendererType = {\n  CANVAS: \"canvas\",\n  SVG: \"svg\",\n};\n\nconst TextLayerMode = {\n  DISABLE: 0,\n  ENABLE: 1,\n  ENABLE_ENHANCE: 2,\n};\n\nconst ScrollMode = {\n  UNKNOWN: -1,\n  VERTICAL: 0, // Default value.\n  HORIZONTAL: 1,\n  WRAPPED: 2,\n};\n\nconst SpreadMode = {\n  UNKNOWN: -1,\n  NONE: 0, // Default value.\n  ODD: 1,\n  EVEN: 2,\n};\n\n// Used by `PDFViewerApplication`, and by the API unit-tests.\nconst AutoPrintRegExp = /\\bprint\\s*\\(/;\n\n// Replaces {{arguments}} with their values.\nfunction formatL10nValue(text, args) {\n  if (!args) {\n    return text;\n  }\n  return text.replace(/\\{\\{\\s*(\\w+)\\s*\\}\\}/g, (all, name) => {\n    return name in args ? args[name] : \"{{\" + name + \"}}\";\n  });\n}\n\n/**\n * No-op implementation of the localization service.\n * @implements {IL10n}\n */\nconst NullL10n = {\n  async getLanguage() {\n    return \"en-us\";\n  },\n\n  async getDirection() {\n    return \"ltr\";\n  },\n\n  async get(property, args, fallback) {\n    return formatL10nValue(fallback, args);\n  },\n\n  async translate(element) {},\n};\n\n/**\n * Returns scale factor for the canvas. It makes sense for the HiDPI displays.\n * @returns {Object} The object with horizontal (sx) and vertical (sy)\n *                   scales. The scaled property is set to false if scaling is\n *                   not required, true otherwise.\n */\nfunction getOutputScale(ctx) {\n  const devicePixelRatio = window.devicePixelRatio || 1;\n  const backingStoreRatio =\n    ctx.webkitBackingStorePixelRatio ||\n    ctx.mozBackingStorePixelRatio ||\n    ctx.backingStorePixelRatio ||\n    1;\n  const pixelRatio = devicePixelRatio / backingStoreRatio;\n  return {\n    sx: pixelRatio,\n    sy: pixelRatio,\n    scaled: pixelRatio !== 1,\n  };\n}\n\n/**\n * Scrolls specified element into view of its parent.\n * @param {Object} element - The element to be visible.\n * @param {Object} spot - An object with optional top and left properties,\n *   specifying the offset from the top left edge.\n * @param {boolean} skipOverflowHiddenElements - Ignore elements that have\n *   the CSS rule `overflow: hidden;` set. The default is false.\n */\nfunction scrollIntoView(element, spot, skipOverflowHiddenElements = false) {\n  // Assuming offsetParent is available (it's not available when viewer is in\n  // hidden iframe or object). We have to scroll: if the offsetParent is not set\n  // producing the error. See also animationStarted.\n  let parent = element.offsetParent;\n  if (!parent) {\n    console.error(\"offsetParent is not set -- cannot scroll\");\n    return;\n  }\n  let offsetY = element.offsetTop + element.clientTop;\n  let offsetX = element.offsetLeft + element.clientLeft;\n  while (\n    (parent.clientHeight === parent.scrollHeight &&\n      parent.clientWidth === parent.scrollWidth) ||\n    (skipOverflowHiddenElements &&\n      getComputedStyle(parent).overflow === \"hidden\")\n  ) {\n    if (parent.dataset._scaleY) {\n      offsetY /= parent.dataset._scaleY;\n      offsetX /= parent.dataset._scaleX;\n    }\n    offsetY += parent.offsetTop;\n    offsetX += parent.offsetLeft;\n    parent = parent.offsetParent;\n    if (!parent) {\n      return; // no need to scroll\n    }\n  }\n  if (spot) {\n    if (spot.top !== undefined) {\n      offsetY += spot.top;\n    }\n    if (spot.left !== undefined) {\n      offsetX += spot.left;\n      parent.scrollLeft = offsetX;\n    }\n  }\n  parent.scrollTop = offsetY;\n}\n\n/**\n * Helper function to start monitoring the scroll event and converting them into\n * PDF.js friendly one: with scroll debounce and scroll direction.\n */\nfunction watchScroll(viewAreaElement, callback) {\n  const debounceScroll = function (evt) {\n    if (rAF) {\n      return;\n    }\n    // schedule an invocation of scroll for next animation frame.\n    rAF = window.requestAnimationFrame(function viewAreaElementScrolled() {\n      rAF = null;\n\n      const currentX = viewAreaElement.scrollLeft;\n      const lastX = state.lastX;\n      if (currentX !== lastX) {\n        state.right = currentX > lastX;\n      }\n      state.lastX = currentX;\n      const currentY = viewAreaElement.scrollTop;\n      const lastY = state.lastY;\n      if (currentY !== lastY) {\n        state.down = currentY > lastY;\n      }\n      state.lastY = currentY;\n      callback(state);\n    });\n  };\n\n  const state = {\n    right: true,\n    down: true,\n    lastX: viewAreaElement.scrollLeft,\n    lastY: viewAreaElement.scrollTop,\n    _eventHandler: debounceScroll,\n  };\n\n  let rAF = null;\n  viewAreaElement.addEventListener(\"scroll\", debounceScroll, true);\n  return state;\n}\n\n/**\n * Helper function to parse query string (e.g. ?param1=value&parm2=...).\n */\nfunction parseQueryString(query) {\n  const parts = query.split(\"&\");\n  const params = Object.create(null);\n  for (let i = 0, ii = parts.length; i < ii; ++i) {\n    const param = parts[i].split(\"=\");\n    const key = param[0].toLowerCase();\n    const value = param.length > 1 ? param[1] : null;\n    params[decodeURIComponent(key)] = decodeURIComponent(value);\n  }\n  return params;\n}\n\n/**\n * Use binary search to find the index of the first item in a given array which\n * passes a given condition. The items are expected to be sorted in the sense\n * that if the condition is true for one item in the array, then it is also true\n * for all following items.\n *\n * @returns {number} Index of the first array element to pass the test,\n *                   or |items.length| if no such element exists.\n */\nfunction binarySearchFirstItem(items, condition) {\n  let minIndex = 0;\n  let maxIndex = items.length - 1;\n\n  if (maxIndex < 0 || !condition(items[maxIndex])) {\n    return items.length;\n  }\n  if (condition(items[minIndex])) {\n    return minIndex;\n  }\n\n  while (minIndex < maxIndex) {\n    const currentIndex = (minIndex + maxIndex) >> 1;\n    const currentItem = items[currentIndex];\n    if (condition(currentItem)) {\n      maxIndex = currentIndex;\n    } else {\n      minIndex = currentIndex + 1;\n    }\n  }\n  return minIndex; /* === maxIndex */\n}\n\n/**\n *  Approximates float number as a fraction using Farey sequence (max order\n *  of 8).\n *  @param {number} x - Positive float number.\n *  @returns {Array} Estimated fraction: the first array item is a numerator,\n *                   the second one is a denominator.\n */\nfunction approximateFraction(x) {\n  // Fast paths for int numbers or their inversions.\n  if (Math.floor(x) === x) {\n    return [x, 1];\n  }\n  const xinv = 1 / x;\n  const limit = 8;\n  if (xinv > limit) {\n    return [1, limit];\n  } else if (Math.floor(xinv) === xinv) {\n    return [1, xinv];\n  }\n\n  const x_ = x > 1 ? xinv : x;\n  // a/b and c/d are neighbours in Farey sequence.\n  let a = 0,\n    b = 1,\n    c = 1,\n    d = 1;\n  // Limiting search to order 8.\n  while (true) {\n    // Generating next term in sequence (order of q).\n    const p = a + c,\n      q = b + d;\n    if (q > limit) {\n      break;\n    }\n    if (x_ <= p / q) {\n      c = p;\n      d = q;\n    } else {\n      a = p;\n      b = q;\n    }\n  }\n  let result;\n  // Select closest of the neighbours to x.\n  if (x_ - a / b < c / d - x_) {\n    result = x_ === x ? [a, b] : [b, a];\n  } else {\n    result = x_ === x ? [c, d] : [d, c];\n  }\n  return result;\n}\n\nfunction roundToDivide(x, div) {\n  const r = x % div;\n  return r === 0 ? x : Math.round(x - r + div);\n}\n\n/**\n * Gets the size of the specified page, converted from PDF units to inches.\n * @param {Object} An Object containing the properties: {Array} `view`,\n *   {number} `userUnit`, and {number} `rotate`.\n * @returns {Object} An Object containing the properties: {number} `width`\n *   and {number} `height`, given in inches.\n */\nfunction getPageSizeInches({ view, userUnit, rotate }) {\n  const [x1, y1, x2, y2] = view;\n  // We need to take the page rotation into account as well.\n  const changeOrientation = rotate % 180 !== 0;\n\n  const width = ((x2 - x1) / 72) * userUnit;\n  const height = ((y2 - y1) / 72) * userUnit;\n\n  return {\n    width: changeOrientation ? height : width,\n    height: changeOrientation ? width : height,\n  };\n}\n\n/**\n * Helper function for getVisibleElements.\n *\n * @param {number} index - initial guess at the first visible element\n * @param {Array} views - array of pages, into which `index` is an index\n * @param {number} top - the top of the scroll pane\n * @returns {number} less than or equal to `index` that is definitely at or\n *   before the first visible element in `views`, but not by too much. (Usually,\n *   this will be the first element in the first partially visible row in\n *   `views`, although sometimes it goes back one row further.)\n */\nfunction backtrackBeforeAllVisibleElements(index, views, top) {\n  // binarySearchFirstItem's assumption is that the input is ordered, with only\n  // one index where the conditions flips from false to true: [false ...,\n  // true...]. With vertical scrolling and spreads, it is possible to have\n  // [false ..., true, false, true ...]. With wrapped scrolling we can have a\n  // similar sequence, with many more mixed true and false in the middle.\n  //\n  // So there is no guarantee that the binary search yields the index of the\n  // first visible element. It could have been any of the other visible elements\n  // that were preceded by a hidden element.\n\n  // Of course, if either this element or the previous (hidden) element is also\n  // the first element, there's nothing to worry about.\n  if (index < 2) {\n    return index;\n  }\n\n  // That aside, the possible cases are represented below.\n  //\n  //     ****  = fully hidden\n  //     A*B*  = mix of partially visible and/or hidden pages\n  //     CDEF  = fully visible\n  //\n  // (1) Binary search could have returned A, in which case we can stop.\n  // (2) Binary search could also have returned B, in which case we need to\n  // check the whole row.\n  // (3) Binary search could also have returned C, in which case we need to\n  // check the whole previous row.\n  //\n  // There's one other possibility:\n  //\n  //     ****  = fully hidden\n  //     ABCD  = mix of fully and/or partially visible pages\n  //\n  // (4) Binary search could only have returned A.\n\n  // Initially assume that we need to find the beginning of the current row\n  // (case 1, 2, or 4), which means finding a page that is above the current\n  // page's top. If the found page is partially visible, we're definitely not in\n  // case 3, and this assumption is correct.\n  let elt = views[index].div;\n  let pageTop = elt.offsetTop + elt.clientTop;\n\n  if (pageTop >= top) {\n    // The found page is fully visible, so we're actually either in case 3 or 4,\n    // and unfortunately we can't tell the difference between them without\n    // scanning the entire previous row, so we just conservatively assume that\n    // we do need to backtrack to that row. In both cases, the previous page is\n    // in the previous row, so use its top instead.\n    elt = views[index - 1].div;\n    pageTop = elt.offsetTop + elt.clientTop;\n  }\n\n  // Now we backtrack to the first page that still has its bottom below\n  // `pageTop`, which is the top of a page in the first visible row (unless\n  // we're in case 4, in which case it's the row before that).\n  // `index` is found by binary search, so the page at `index - 1` is\n  // invisible and we can start looking for potentially visible pages from\n  // `index - 2`. (However, if this loop terminates on its first iteration,\n  // which is the case when pages are stacked vertically, `index` should remain\n  // unchanged, so we use a distinct loop variable.)\n  for (let i = index - 2; i >= 0; --i) {\n    elt = views[i].div;\n    if (elt.offsetTop + elt.clientTop + elt.clientHeight <= pageTop) {\n      // We have reached the previous row, so stop now.\n      // This loop is expected to terminate relatively quickly because the\n      // number of pages per row is expected to be small.\n      break;\n    }\n    index = i;\n  }\n  return index;\n}\n\n/**\n * @typedef {Object} GetVisibleElementsParameters\n * @property {HTMLElement} scrollEl - A container that can possibly scroll.\n * @property {Array} views - Objects with a `div` property that contains an\n *   HTMLElement, which should all be descendants of `scrollEl` satisfying the\n *   relevant layout assumptions.\n * @property {boolean} sortByVisibility - If `true`, the returned elements are\n *   sorted in descending order of the percent of their padding box that is\n *   visible. The default value is `false`.\n * @property {boolean} horizontal - If `true`, the elements are assumed to be\n *   laid out horizontally instead of vertically. The default value is `false`.\n * @property {boolean} rtl - If `true`, the `scrollEl` container is assumed to\n *   be in right-to-left mode. The default value is `false`.\n */\n\n/**\n * Generic helper to find out what elements are visible within a scroll pane.\n *\n * Well, pretty generic. There are some assumptions placed on the elements\n * referenced by `views`:\n *   - If `horizontal`, no left of any earlier element is to the right of the\n *     left of any later element.\n *   - Otherwise, `views` can be split into contiguous rows where, within a row,\n *     no top of any element is below the bottom of any other element, and\n *     between rows, no bottom of any element in an earlier row is below the\n *     top of any element in a later row.\n *\n * (Here, top, left, etc. all refer to the padding edge of the element in\n * question. For pages, that ends up being equivalent to the bounding box of the\n * rendering canvas. Earlier and later refer to index in `views`, not page\n * layout.)\n *\n * @param {GetVisibleElementsParameters}\n * @returns {Object} `{ first, last, views: [{ id, x, y, view, percent }] }`\n */\nfunction getVisibleElements({\n  scrollEl,\n  views,\n  sortByVisibility = false,\n  horizontal = false,\n  rtl = false,\n}) {\n  const top = scrollEl.scrollTop,\n    bottom = top + scrollEl.clientHeight;\n  const left = scrollEl.scrollLeft,\n    right = left + scrollEl.clientWidth;\n\n  // Throughout this \"generic\" function, comments will assume we're working with\n  // PDF document pages, which is the most important and complex case. In this\n  // case, the visible elements we're actually interested is the page canvas,\n  // which is contained in a wrapper which adds no padding/border/margin, which\n  // is itself contained in `view.div` which adds no padding (but does add a\n  // border). So, as specified in this function's doc comment, this function\n  // does all of its work on the padding edge of the provided views, starting at\n  // offsetLeft/Top (which includes margin) and adding clientLeft/Top (which is\n  // the border). Adding clientWidth/Height gets us the bottom-right corner of\n  // the padding edge.\n  function isElementBottomAfterViewTop(view) {\n    const element = view.div;\n    const elementBottom =\n      element.offsetTop + element.clientTop + element.clientHeight;\n    return elementBottom > top;\n  }\n  function isElementNextAfterViewHorizontally(view) {\n    const element = view.div;\n    const elementLeft = element.offsetLeft + element.clientLeft;\n    const elementRight = elementLeft + element.clientWidth;\n    return rtl ? elementLeft < right : elementRight > left;\n  }\n\n  const visible = [],\n    numViews = views.length;\n  let firstVisibleElementInd = binarySearchFirstItem(\n    views,\n    horizontal\n      ? isElementNextAfterViewHorizontally\n      : isElementBottomAfterViewTop\n  );\n\n  // Please note the return value of the `binarySearchFirstItem` function when\n  // no valid element is found (hence the `firstVisibleElementInd` check below).\n  if (\n    firstVisibleElementInd > 0 &&\n    firstVisibleElementInd < numViews &&\n    !horizontal\n  ) {\n    // In wrapped scrolling (or vertical scrolling with spreads), with some page\n    // sizes, isElementBottomAfterViewTop doesn't satisfy the binary search\n    // condition: there can be pages with bottoms above the view top between\n    // pages with bottoms below. This function detects and corrects that error;\n    // see it for more comments.\n    firstVisibleElementInd = backtrackBeforeAllVisibleElements(\n      firstVisibleElementInd,\n      views,\n      top\n    );\n  }\n\n  // lastEdge acts as a cutoff for us to stop looping, because we know all\n  // subsequent pages will be hidden.\n  //\n  // When using wrapped scrolling or vertical scrolling with spreads, we can't\n  // simply stop the first time we reach a page below the bottom of the view;\n  // the tops of subsequent pages on the same row could still be visible. In\n  // horizontal scrolling, we don't have that issue, so we can stop as soon as\n  // we pass `right`, without needing the code below that handles the -1 case.\n  let lastEdge = horizontal ? right : -1;\n\n  for (let i = firstVisibleElementInd; i < numViews; i++) {\n    const view = views[i],\n      element = view.div;\n    const currentWidth = element.offsetLeft + element.clientLeft;\n    const currentHeight = element.offsetTop + element.clientTop;\n    const viewWidth = element.clientWidth,\n      viewHeight = element.clientHeight;\n    const viewRight = currentWidth + viewWidth;\n    const viewBottom = currentHeight + viewHeight;\n\n    if (lastEdge === -1) {\n      // As commented above, this is only needed in non-horizontal cases.\n      // Setting lastEdge to the bottom of the first page that is partially\n      // visible ensures that the next page fully below lastEdge is on the\n      // next row, which has to be fully hidden along with all subsequent rows.\n      if (viewBottom >= bottom) {\n        lastEdge = viewBottom;\n      }\n    } else if ((horizontal ? currentWidth : currentHeight) > lastEdge) {\n      break;\n    }\n\n    if (\n      viewBottom <= top ||\n      currentHeight >= bottom ||\n      viewRight <= left ||\n      currentWidth >= right\n    ) {\n      continue;\n    }\n\n    const hiddenHeight =\n      Math.max(0, top - currentHeight) + Math.max(0, viewBottom - bottom);\n    const hiddenWidth =\n      Math.max(0, left - currentWidth) + Math.max(0, viewRight - right);\n    const percent =\n      (((viewHeight - hiddenHeight) * (viewWidth - hiddenWidth) * 100) /\n        viewHeight /\n        viewWidth) |\n      0;\n    visible.push({\n      id: view.id,\n      x: currentWidth,\n      y: currentHeight,\n      view,\n      percent,\n    });\n  }\n\n  const first = visible[0],\n    last = visible[visible.length - 1];\n\n  if (sortByVisibility) {\n    visible.sort(function (a, b) {\n      const pc = a.percent - b.percent;\n      if (Math.abs(pc) > 0.001) {\n        return -pc;\n      }\n      return a.id - b.id; // ensure stability\n    });\n  }\n  return { first, last, views: visible };\n}\n\n/**\n * Event handler to suppress context menu.\n */\nfunction noContextMenuHandler(evt) {\n  evt.preventDefault();\n}\n\nfunction isDataSchema(url) {\n  let i = 0;\n  const ii = url.length;\n  while (i < ii && url[i].trim() === \"\") {\n    i++;\n  }\n  return url.substring(i, i + 5).toLowerCase() === \"data:\";\n}\n\n/**\n * Returns the filename or guessed filename from the url (see issue 3455).\n * @param {string} url - The original PDF location.\n * @param {string} defaultFilename - The value returned if the filename is\n *   unknown, or the protocol is unsupported.\n * @returns {string} Guessed PDF filename.\n */\nfunction getPDFFileNameFromURL(url, defaultFilename = \"document.pdf\") {\n  if (typeof url !== \"string\") {\n    return defaultFilename;\n  }\n  if (isDataSchema(url)) {\n    console.warn(\n      \"getPDFFileNameFromURL: \" +\n        'ignoring \"data:\" URL for performance reasons.'\n    );\n    return defaultFilename;\n  }\n  const reURI = /^(?:(?:[^:]+:)?\\/\\/[^/]+)?([^?#]*)(\\?[^#]*)?(#.*)?$/;\n  //              SCHEME        HOST        1.PATH  2.QUERY   3.REF\n  // Pattern to get last matching NAME.pdf\n  const reFilename = /[^/?#=]+\\.pdf\\b(?!.*\\.pdf\\b)/i;\n  const splitURI = reURI.exec(url);\n  let suggestedFilename =\n    reFilename.exec(splitURI[1]) ||\n    reFilename.exec(splitURI[2]) ||\n    reFilename.exec(splitURI[3]);\n  if (suggestedFilename) {\n    suggestedFilename = suggestedFilename[0];\n    if (suggestedFilename.includes(\"%\")) {\n      // URL-encoded %2Fpath%2Fto%2Ffile.pdf should be file.pdf\n      try {\n        suggestedFilename = reFilename.exec(\n          decodeURIComponent(suggestedFilename)\n        )[0];\n      } catch (ex) {\n        // Possible (extremely rare) errors:\n        // URIError \"Malformed URI\", e.g. for \"%AA.pdf\"\n        // TypeError \"null has no properties\", e.g. for \"%2F.pdf\"\n      }\n    }\n  }\n  return suggestedFilename || defaultFilename;\n}\n\nfunction normalizeWheelEventDirection(evt) {\n  let delta = Math.sqrt(evt.deltaX * evt.deltaX + evt.deltaY * evt.deltaY);\n  const angle = Math.atan2(evt.deltaY, evt.deltaX);\n  if (-0.25 * Math.PI < angle && angle < 0.75 * Math.PI) {\n    // All that is left-up oriented has to change the sign.\n    delta = -delta;\n  }\n  return delta;\n}\n\nfunction normalizeWheelEventDelta(evt) {\n  let delta = normalizeWheelEventDirection(evt);\n\n  const MOUSE_DOM_DELTA_PIXEL_MODE = 0;\n  const MOUSE_DOM_DELTA_LINE_MODE = 1;\n  const MOUSE_PIXELS_PER_LINE = 30;\n  const MOUSE_LINES_PER_PAGE = 30;\n\n  // Converts delta to per-page units\n  if (evt.deltaMode === MOUSE_DOM_DELTA_PIXEL_MODE) {\n    delta /= MOUSE_PIXELS_PER_LINE * MOUSE_LINES_PER_PAGE;\n  } else if (evt.deltaMode === MOUSE_DOM_DELTA_LINE_MODE) {\n    delta /= MOUSE_LINES_PER_PAGE;\n  }\n  return delta;\n}\n\nfunction isValidRotation(angle) {\n  return Number.isInteger(angle) && angle % 90 === 0;\n}\n\nfunction isValidScrollMode(mode) {\n  return (\n    Number.isInteger(mode) &&\n    Object.values(ScrollMode).includes(mode) &&\n    mode !== ScrollMode.UNKNOWN\n  );\n}\n\nfunction isValidSpreadMode(mode) {\n  return (\n    Number.isInteger(mode) &&\n    Object.values(SpreadMode).includes(mode) &&\n    mode !== SpreadMode.UNKNOWN\n  );\n}\n\nfunction isPortraitOrientation(size) {\n  return size.width <= size.height;\n}\n\nconst WaitOnType = {\n  EVENT: \"event\",\n  TIMEOUT: \"timeout\",\n};\n\n/**\n * @typedef {Object} WaitOnEventOrTimeoutParameters\n * @property {Object} target - The event target, can for example be:\n *   `window`, `document`, a DOM element, or an {EventBus} instance.\n * @property {string} name - The name of the event.\n * @property {number} delay - The delay, in milliseconds, after which the\n *   timeout occurs (if the event wasn't already dispatched).\n */\n\n/**\n * Allows waiting for an event or a timeout, whichever occurs first.\n * Can be used to ensure that an action always occurs, even when an event\n * arrives late or not at all.\n *\n * @param {WaitOnEventOrTimeoutParameters}\n * @returns {Promise} A promise that is resolved with a {WaitOnType} value.\n */\nfunction waitOnEventOrTimeout({ target, name, delay = 0 }) {\n  return new Promise(function (resolve, reject) {\n    if (\n      typeof target !== \"object\" ||\n      !(name && typeof name === \"string\") ||\n      !(Number.isInteger(delay) && delay >= 0)\n    ) {\n      throw new Error(\"waitOnEventOrTimeout - invalid parameters.\");\n    }\n\n    function handler(type) {\n      if (target instanceof EventBus) {\n        target._off(name, eventHandler);\n      } else {\n        target.removeEventListener(name, eventHandler);\n      }\n\n      if (timeout) {\n        clearTimeout(timeout);\n      }\n      resolve(type);\n    }\n\n    const eventHandler = handler.bind(null, WaitOnType.EVENT);\n    if (target instanceof EventBus) {\n      target._on(name, eventHandler);\n    } else {\n      target.addEventListener(name, eventHandler);\n    }\n\n    const timeoutHandler = handler.bind(null, WaitOnType.TIMEOUT);\n    const timeout = setTimeout(timeoutHandler, delay);\n  });\n}\n\n/**\n * Promise that is resolved when DOM window becomes visible.\n */\nconst animationStarted = new Promise(function (resolve) {\n  if (\n    typeof PDFJSDev !== \"undefined\" &&\n    PDFJSDev.test(\"LIB && TESTING\") &&\n    typeof window === \"undefined\"\n  ) {\n    // Prevent \"ReferenceError: window is not defined\" errors when running the\n    // unit-tests in Node.js/Travis.\n    setTimeout(resolve, 20);\n    return;\n  }\n  window.requestAnimationFrame(resolve);\n});\n\n/**\n * NOTE: Only used to support various PDF viewer tests in `mozilla-central`.\n */\nfunction dispatchDOMEvent(eventName, args = null) {\n  if (typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"MOZCENTRAL\")) {\n    throw new Error(\"Not implemented: dispatchDOMEvent\");\n  }\n  const details = Object.create(null);\n  if (args && args.length > 0) {\n    const obj = args[0];\n    for (const key in obj) {\n      const value = obj[key];\n      if (key === \"source\") {\n        if (value === window || value === document) {\n          return; // No need to re-dispatch (already) global events.\n        }\n        continue; // Ignore the `source` property.\n      }\n      details[key] = value;\n    }\n  }\n  const event = document.createEvent(\"CustomEvent\");\n  event.initCustomEvent(eventName, true, true, details);\n  document.dispatchEvent(event);\n}\n\n/**\n * Simple event bus for an application. Listeners are attached using the `on`\n * and `off` methods. To raise an event, the `dispatch` method shall be used.\n */\nclass EventBus {\n  constructor(options) {\n    this._listeners = Object.create(null);\n\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"MOZCENTRAL\")) {\n      this._isInAutomation = (options && options.isInAutomation) === true;\n    }\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {function} listener\n   */\n  on(eventName, listener) {\n    this._on(eventName, listener, { external: true });\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {function} listener\n   */\n  off(eventName, listener) {\n    this._off(eventName, listener, { external: true });\n  }\n\n  dispatch(eventName) {\n    const eventListeners = this._listeners[eventName];\n    if (!eventListeners || eventListeners.length === 0) {\n      if (\n        (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"MOZCENTRAL\")) &&\n        this._isInAutomation\n      ) {\n        const args = Array.prototype.slice.call(arguments, 1);\n        dispatchDOMEvent(eventName, args);\n      }\n      return;\n    }\n    // Passing all arguments after the eventName to the listeners.\n    const args = Array.prototype.slice.call(arguments, 1);\n    let externalListeners;\n    // Making copy of the listeners array in case if it will be modified\n    // during dispatch.\n    eventListeners.slice(0).forEach(function ({ listener, external }) {\n      if (external) {\n        if (!externalListeners) {\n          externalListeners = [];\n        }\n        externalListeners.push(listener);\n        return;\n      }\n      listener.apply(null, args);\n    });\n    // Dispatch any \"external\" listeners *after* the internal ones, to give the\n    // viewer components time to handle events and update their state first.\n    if (externalListeners) {\n      externalListeners.forEach(function (listener) {\n        listener.apply(null, args);\n      });\n      externalListeners = null;\n    }\n    if (\n      (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"MOZCENTRAL\")) &&\n      this._isInAutomation\n    ) {\n      dispatchDOMEvent(eventName, args);\n    }\n  }\n\n  /**\n   * @ignore\n   */\n  _on(eventName, listener, options = null) {\n    let eventListeners = this._listeners[eventName];\n    if (!eventListeners) {\n      this._listeners[eventName] = eventListeners = [];\n    }\n    eventListeners.push({\n      listener,\n      external: (options && options.external) === true,\n    });\n  }\n\n  /**\n   * @ignore\n   */\n  _off(eventName, listener, options = null) {\n    const eventListeners = this._listeners[eventName];\n    if (!eventListeners) {\n      return;\n    }\n    for (let i = 0, ii = eventListeners.length; i < ii; i++) {\n      if (eventListeners[i].listener === listener) {\n        eventListeners.splice(i, 1);\n        return;\n      }\n    }\n  }\n}\n\nfunction clamp(v, min, max) {\n  return Math.min(Math.max(v, min), max);\n}\n\nclass ProgressBar {\n  constructor(id, { height, width, units } = {}) {\n    this.visible = true;\n\n    // Fetch the sub-elements for later.\n    this.div = document.querySelector(id + \" .progress\");\n    // Get the loading bar element, so it can be resized to fit the viewer.\n    this.bar = this.div.parentNode;\n\n    // Get options, with sensible defaults.\n    this.height = height || 100;\n    this.width = width || 100;\n    this.units = units || \"%\";\n\n    // Initialize heights.\n    this.div.style.height = this.height + this.units;\n    this.percent = 0;\n  }\n\n  _updateBar() {\n    if (this._indeterminate) {\n      this.div.classList.add(\"indeterminate\");\n      this.div.style.width = this.width + this.units;\n      return;\n    }\n\n    this.div.classList.remove(\"indeterminate\");\n    const progressSize = (this.width * this._percent) / 100;\n    this.div.style.width = progressSize + this.units;\n  }\n\n  get percent() {\n    return this._percent;\n  }\n\n  set percent(val) {\n    this._indeterminate = isNaN(val);\n    this._percent = clamp(val, 0, 100);\n    this._updateBar();\n  }\n\n  setWidth(viewer) {\n    if (!viewer) {\n      return;\n    }\n    const container = viewer.parentNode;\n    const scrollbarWidth = container.offsetWidth - viewer.offsetWidth;\n    if (scrollbarWidth > 0) {\n      const doc = document.documentElement;\n      doc.style.setProperty(LOADINGBAR_END_OFFSET_VAR, `${scrollbarWidth}px`);\n    }\n  }\n\n  hide() {\n    if (!this.visible) {\n      return;\n    }\n    this.visible = false;\n    this.bar.classList.add(\"hidden\");\n  }\n\n  show() {\n    if (this.visible) {\n      return;\n    }\n    this.visible = true;\n    this.bar.classList.remove(\"hidden\");\n  }\n}\n\n/**\n * Moves all elements of an array that satisfy condition to the end of the\n * array, preserving the order of the rest.\n */\nfunction moveToEndOfArray(arr, condition) {\n  const moved = [],\n    len = arr.length;\n  let write = 0;\n  for (let read = 0; read < len; ++read) {\n    if (condition(arr[read])) {\n      moved.push(arr[read]);\n    } else {\n      arr[write] = arr[read];\n      ++write;\n    }\n  }\n  for (let read = 0; write < len; ++read, ++write) {\n    arr[write] = moved[read];\n  }\n}\n\n/**\n * Get the active or focused element in current DOM.\n *\n * Recursively search for the truly active or focused element in case there are\n * shadow DOMs.\n *\n * @returns {Element} the truly active or focused element.\n */\nfunction getActiveOrFocusedElement() {\n  let curRoot = document;\n  let curActiveOrFocused =\n    curRoot.activeElement || curRoot.querySelector(\":focus\");\n\n  while (curActiveOrFocused && curActiveOrFocused.shadowRoot) {\n    curRoot = curActiveOrFocused.shadowRoot;\n    curActiveOrFocused =\n      curRoot.activeElement || curRoot.querySelector(\":focus\");\n  }\n\n  return curActiveOrFocused;\n}\n\n/**\n * Generate a random string which is not define somewhere in actions.\n *\n * @param {Object} objects - The value returned by `getFieldObjects` in the API.\n * @returns {string} A unique string.\n */\nfunction generateRandomStringForSandbox(objects) {\n  const allObjects = Object.values(objects).flat(2);\n  const actions = allObjects\n    .filter(obj => !!obj.actions)\n    .map(obj => Object.values(obj.actions))\n    .flat(2);\n\n  while (true) {\n    const name = new Uint8Array(64);\n    if (typeof crypto !== \"undefined\") {\n      crypto.getRandomValues(name);\n    } else {\n      for (let i = 0, ii = name.length; i < ii; i++) {\n        name[i] = Math.floor(256 * Math.random());\n      }\n    }\n\n    const nameString =\n      \"_\" +\n      btoa(\n        Array.from(name)\n          .map(x => String.fromCharCode(x))\n          .join(\"\")\n      );\n    if (actions.every(action => !action.includes(nameString))) {\n      return nameString;\n    }\n  }\n}\n\nexport {\n  AutoPrintRegExp,\n  CSS_UNITS,\n  DEFAULT_SCALE_VALUE,\n  DEFAULT_SCALE,\n  MIN_SCALE,\n  MAX_SCALE,\n  UNKNOWN_SCALE,\n  MAX_AUTO_SCALE,\n  SCROLLBAR_PADDING,\n  VERTICAL_PADDING,\n  isValidRotation,\n  isValidScrollMode,\n  isValidSpreadMode,\n  isPortraitOrientation,\n  PresentationModeState,\n  RendererType,\n  TextLayerMode,\n  ScrollMode,\n  SpreadMode,\n  NullL10n,\n  EventBus,\n  ProgressBar,\n  generateRandomStringForSandbox,\n  getPDFFileNameFromURL,\n  noContextMenuHandler,\n  parseQueryString,\n  backtrackBeforeAllVisibleElements, // only exported for testing\n  getVisibleElements,\n  roundToDivide,\n  getPageSizeInches,\n  approximateFraction,\n  getOutputScale,\n  scrollIntoView,\n  watchScroll,\n  binarySearchFirstItem,\n  normalizeWheelEventDirection,\n  normalizeWheelEventDelta,\n  animationStarted,\n  WaitOnType,\n  waitOnEventOrTimeout,\n  moveToEndOfArray,\n  getActiveOrFocusedElement,\n};\n","/* Copyright 2016 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals module, __non_webpack_require__ */\n\n\"use strict\";\n\nlet pdfjsLib;\nif (typeof window !== \"undefined\" && window[\"pdfjs-dist/build/pdf\"]) {\n  pdfjsLib = window[\"pdfjs-dist/build/pdf\"];\n} else {\n  pdfjsLib = __non_webpack_require__(\"../build/pdf.js\");\n}\nmodule.exports = pdfjsLib;\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { GrabToPan } from \"./grab_to_pan.js\";\n\nconst CursorTool = {\n  SELECT: 0, // The default value.\n  HAND: 1,\n  ZOOM: 2,\n};\n\n/**\n * @typedef {Object} PDFCursorToolsOptions\n * @property {HTMLDivElement} container - The document container.\n * @property {EventBus} eventBus - The application event bus.\n * @property {number} [cursorToolOnLoad] - The cursor tool that will be enabled\n *   on load; the constants from {CursorTool} should be used. The default value\n *   is `CursorTool.SELECT`.\n */\n\nclass PDFCursorTools {\n  /**\n   * @param {PDFCursorToolsOptions} options\n   */\n  constructor({ container, eventBus, cursorToolOnLoad = CursorTool.SELECT }) {\n    this.container = container;\n    this.eventBus = eventBus;\n\n    this.active = CursorTool.SELECT;\n    this.activeBeforePresentationMode = null;\n\n    this.handTool = new GrabToPan({\n      element: this.container,\n    });\n\n    this._addEventListeners();\n\n    // Defer the initial `switchTool` call, to give other viewer components\n    // time to initialize *and* register 'cursortoolchanged' event listeners.\n    Promise.resolve().then(() => {\n      this.switchTool(cursorToolOnLoad);\n    });\n  }\n\n  /**\n   * @type {number} One of the values in {CursorTool}.\n   */\n  get activeTool() {\n    return this.active;\n  }\n\n  /**\n   * NOTE: This method is ignored while Presentation Mode is active.\n   * @param {number} tool - The cursor mode that should be switched to,\n   *                        must be one of the values in {CursorTool}.\n   */\n  switchTool(tool) {\n    if (this.activeBeforePresentationMode !== null) {\n      return; // Cursor tools cannot be used in Presentation Mode.\n    }\n    if (tool === this.active) {\n      return; // The requested tool is already active.\n    }\n\n    const disableActiveTool = () => {\n      switch (this.active) {\n        case CursorTool.SELECT:\n          break;\n        case CursorTool.HAND:\n          this.handTool.deactivate();\n          break;\n        case CursorTool.ZOOM:\n        /* falls through */\n      }\n    };\n\n    // Enable the new cursor tool.\n    switch (tool) {\n      case CursorTool.SELECT:\n        disableActiveTool();\n        break;\n      case CursorTool.HAND:\n        disableActiveTool();\n        this.handTool.activate();\n        break;\n      case CursorTool.ZOOM:\n      /* falls through */\n      default:\n        console.error(`switchTool: \"${tool}\" is an unsupported value.`);\n        return;\n    }\n    // Update the active tool *after* it has been validated above,\n    // in order to prevent setting it to an invalid state.\n    this.active = tool;\n\n    this._dispatchEvent();\n  }\n\n  /**\n   * @private\n   */\n  _dispatchEvent() {\n    this.eventBus.dispatch(\"cursortoolchanged\", {\n      source: this,\n      tool: this.active,\n    });\n  }\n\n  /**\n   * @private\n   */\n  _addEventListeners() {\n    this.eventBus._on(\"switchcursortool\", evt => {\n      this.switchTool(evt.tool);\n    });\n\n    this.eventBus._on(\"presentationmodechanged\", evt => {\n      if (evt.switchInProgress) {\n        return;\n      }\n      let previouslyActive;\n\n      if (evt.active) {\n        previouslyActive = this.active;\n\n        this.switchTool(CursorTool.SELECT);\n        this.activeBeforePresentationMode = previouslyActive;\n      } else {\n        previouslyActive = this.activeBeforePresentationMode;\n\n        this.activeBeforePresentationMode = null;\n        this.switchTool(previouslyActive);\n      }\n    });\n  }\n}\n\nexport { CursorTool, PDFCursorTools };\n","/* Copyright 2013 Rob Wu <rob@robwu.nl>\n * https://github.com/Rob--W/grab-to-pan.js\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Construct a GrabToPan instance for a given HTML element.\n * @param options.element {Element}\n * @param options.ignoreTarget {function} optional. See `ignoreTarget(node)`\n * @param options.onActiveChanged {function(boolean)} optional. Called\n *  when grab-to-pan is (de)activated. The first argument is a boolean that\n *  shows whether grab-to-pan is activated.\n */\nfunction GrabToPan(options) {\n  this.element = options.element;\n  this.document = options.element.ownerDocument;\n  if (typeof options.ignoreTarget === \"function\") {\n    this.ignoreTarget = options.ignoreTarget;\n  }\n  this.onActiveChanged = options.onActiveChanged;\n\n  // Bind the contexts to ensure that `this` always points to\n  // the GrabToPan instance.\n  this.activate = this.activate.bind(this);\n  this.deactivate = this.deactivate.bind(this);\n  this.toggle = this.toggle.bind(this);\n  this._onmousedown = this._onmousedown.bind(this);\n  this._onmousemove = this._onmousemove.bind(this);\n  this._endPan = this._endPan.bind(this);\n\n  // This overlay will be inserted in the document when the mouse moves during\n  // a grab operation, to ensure that the cursor has the desired appearance.\n  const overlay = (this.overlay = document.createElement(\"div\"));\n  overlay.className = \"grab-to-pan-grabbing\";\n}\nGrabToPan.prototype = {\n  /**\n   * Class name of element which can be grabbed\n   */\n  CSS_CLASS_GRAB: \"grab-to-pan-grab\",\n\n  /**\n   * Bind a mousedown event to the element to enable grab-detection.\n   */\n  activate: function GrabToPan_activate() {\n    if (!this.active) {\n      this.active = true;\n      this.element.addEventListener(\"mousedown\", this._onmousedown, true);\n      this.element.classList.add(this.CSS_CLASS_GRAB);\n      if (this.onActiveChanged) {\n        this.onActiveChanged(true);\n      }\n    }\n  },\n\n  /**\n   * Removes all events. Any pending pan session is immediately stopped.\n   */\n  deactivate: function GrabToPan_deactivate() {\n    if (this.active) {\n      this.active = false;\n      this.element.removeEventListener(\"mousedown\", this._onmousedown, true);\n      this._endPan();\n      this.element.classList.remove(this.CSS_CLASS_GRAB);\n      if (this.onActiveChanged) {\n        this.onActiveChanged(false);\n      }\n    }\n  },\n\n  toggle: function GrabToPan_toggle() {\n    if (this.active) {\n      this.deactivate();\n    } else {\n      this.activate();\n    }\n  },\n\n  /**\n   * Whether to not pan if the target element is clicked.\n   * Override this method to change the default behaviour.\n   *\n   * @param node {Element} The target of the event\n   * @returns {boolean} Whether to not react to the click event.\n   */\n  ignoreTarget: function GrabToPan_ignoreTarget(node) {\n    // Use matchesSelector to check whether the clicked element\n    // is (a child of) an input element / link\n    return node[matchesSelector](\n      \"a[href], a[href] *, input, textarea, button, button *, select, option\"\n    );\n  },\n\n  /**\n   * @private\n   */\n  _onmousedown: function GrabToPan__onmousedown(event) {\n    if (event.button !== 0 || this.ignoreTarget(event.target)) {\n      return;\n    }\n    if (event.originalTarget) {\n      try {\n        // eslint-disable-next-line no-unused-expressions\n        event.originalTarget.tagName;\n      } catch (e) {\n        // Mozilla-specific: element is a scrollbar (XUL element)\n        return;\n      }\n    }\n\n    this.scrollLeftStart = this.element.scrollLeft;\n    this.scrollTopStart = this.element.scrollTop;\n    this.clientXStart = event.clientX;\n    this.clientYStart = event.clientY;\n    this.document.addEventListener(\"mousemove\", this._onmousemove, true);\n    this.document.addEventListener(\"mouseup\", this._endPan, true);\n    // When a scroll event occurs before a mousemove, assume that the user\n    // dragged a scrollbar (necessary for Opera Presto, Safari and IE)\n    // (not needed for Chrome/Firefox)\n    this.element.addEventListener(\"scroll\", this._endPan, true);\n    event.preventDefault();\n    event.stopPropagation();\n\n    const focusedElement = document.activeElement;\n    if (focusedElement && !focusedElement.contains(event.target)) {\n      focusedElement.blur();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _onmousemove: function GrabToPan__onmousemove(event) {\n    this.element.removeEventListener(\"scroll\", this._endPan, true);\n    if (isLeftMouseReleased(event)) {\n      this._endPan();\n      return;\n    }\n    const xDiff = event.clientX - this.clientXStart;\n    const yDiff = event.clientY - this.clientYStart;\n    const scrollTop = this.scrollTopStart - yDiff;\n    const scrollLeft = this.scrollLeftStart - xDiff;\n    if (this.element.scrollTo) {\n      this.element.scrollTo({\n        top: scrollTop,\n        left: scrollLeft,\n        behavior: \"instant\",\n      });\n    } else {\n      this.element.scrollTop = scrollTop;\n      this.element.scrollLeft = scrollLeft;\n    }\n    if (!this.overlay.parentNode) {\n      document.body.appendChild(this.overlay);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _endPan: function GrabToPan__endPan() {\n    this.element.removeEventListener(\"scroll\", this._endPan, true);\n    this.document.removeEventListener(\"mousemove\", this._onmousemove, true);\n    this.document.removeEventListener(\"mouseup\", this._endPan, true);\n    // Note: ChildNode.remove doesn't throw if the parentNode is undefined.\n    this.overlay.remove();\n  },\n};\n\n// Get the correct (vendor-prefixed) name of the matches method.\nlet matchesSelector;\n[\"webkitM\", \"mozM\", \"m\"].some(function (prefix) {\n  let name = prefix + \"atches\";\n  if (name in document.documentElement) {\n    matchesSelector = name;\n  }\n  name += \"Selector\";\n  if (name in document.documentElement) {\n    matchesSelector = name;\n  }\n  return matchesSelector; // If found, then truthy, and [].some() ends.\n});\n\n// Browser sniffing because it's impossible to feature-detect\n// whether event.which for onmousemove is reliable\nconst isNotIEorIsIE10plus = !document.documentMode || document.documentMode > 9;\nconst chrome = window.chrome;\nconst isChrome15OrOpera15plus = chrome && (chrome.webstore || chrome.app);\n//                                         ^ Chrome 15+       ^ Opera 15+\nconst isSafari6plus =\n  /Apple/.test(navigator.vendor) &&\n  /Version\\/([6-9]\\d*|[1-5]\\d+)/.test(navigator.userAgent);\n\n/**\n * Whether the left mouse is not pressed.\n * @param event {MouseEvent}\n * @returns {boolean} True if the left mouse button is not pressed,\n *                    False if unsure or if the left mouse button is pressed.\n */\nfunction isLeftMouseReleased(event) {\n  if (\"buttons\" in event && isNotIEorIsIE10plus) {\n    // http://www.w3.org/TR/DOM-Level-3-Events/#events-MouseEvent-buttons\n    // Firefox 15+\n    // Internet Explorer 10+\n    return !(event.buttons & 1);\n  }\n  if (isChrome15OrOpera15plus || isSafari6plus) {\n    // Chrome 14+\n    // Opera 15+\n    // Safari 6.0+\n    return event.which === 0;\n  }\n  return false;\n}\n\nexport { GrabToPan };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RenderingCancelledException } from \"pdfjs-lib\";\n\nconst CLEANUP_TIMEOUT = 30000;\n\nconst RenderingStates = {\n  INITIAL: 0,\n  RUNNING: 1,\n  PAUSED: 2,\n  FINISHED: 3,\n};\n\n/**\n * Controls rendering of the views for pages and thumbnails.\n */\nclass PDFRenderingQueue {\n  constructor() {\n    this.pdfViewer = null;\n    this.pdfThumbnailViewer = null;\n    this.onIdle = null;\n    this.highestPriorityPage = null;\n    this.idleTimeout = null;\n    this.printing = false;\n    this.isThumbnailViewEnabled = false;\n  }\n\n  /**\n   * @param {PDFViewer} pdfViewer\n   */\n  setViewer(pdfViewer) {\n    this.pdfViewer = pdfViewer;\n  }\n\n  /**\n   * @param {PDFThumbnailViewer} pdfThumbnailViewer\n   */\n  setThumbnailViewer(pdfThumbnailViewer) {\n    this.pdfThumbnailViewer = pdfThumbnailViewer;\n  }\n\n  /**\n   * @param {IRenderableView} view\n   * @returns {boolean}\n   */\n  isHighestPriority(view) {\n    return this.highestPriorityPage === view.renderingId;\n  }\n\n  /**\n   * @param {Object} currentlyVisiblePages\n   */\n  renderHighestPriority(currentlyVisiblePages) {\n    if (this.idleTimeout) {\n      clearTimeout(this.idleTimeout);\n      this.idleTimeout = null;\n    }\n\n    // Pages have a higher priority than thumbnails, so check them first.\n    if (this.pdfViewer.forceRendering(currentlyVisiblePages)) {\n      return;\n    }\n    // No pages needed rendering, so check thumbnails.\n    if (this.pdfThumbnailViewer && this.isThumbnailViewEnabled) {\n      if (this.pdfThumbnailViewer.forceRendering()) {\n        return;\n      }\n    }\n\n    if (this.printing) {\n      // If printing is currently ongoing do not reschedule cleanup.\n      return;\n    }\n\n    if (this.onIdle) {\n      this.idleTimeout = setTimeout(this.onIdle.bind(this), CLEANUP_TIMEOUT);\n    }\n  }\n\n  /**\n   * @param {Object} visible\n   * @param {Array} views\n   * @param {boolean} scrolledDown\n   */\n  getHighestPriority(visible, views, scrolledDown) {\n    /**\n     * The state has changed. Figure out which page has the highest priority to\n     * render next (if any).\n     *\n     * Priority:\n     * 1. visible pages\n     * 2. if last scrolled down, the page after the visible pages, or\n     *    if last scrolled up, the page before the visible pages\n     */\n    const visibleViews = visible.views;\n\n    const numVisible = visibleViews.length;\n    if (numVisible === 0) {\n      return null;\n    }\n    for (let i = 0; i < numVisible; ++i) {\n      const view = visibleViews[i].view;\n      if (!this.isViewFinished(view)) {\n        return view;\n      }\n    }\n\n    // All the visible views have rendered; try to render next/previous pages.\n    if (scrolledDown) {\n      const nextPageIndex = visible.last.id;\n      // IDs start at 1, so no need to add 1.\n      if (views[nextPageIndex] && !this.isViewFinished(views[nextPageIndex])) {\n        return views[nextPageIndex];\n      }\n    } else {\n      const previousPageIndex = visible.first.id - 2;\n      if (\n        views[previousPageIndex] &&\n        !this.isViewFinished(views[previousPageIndex])\n      ) {\n        return views[previousPageIndex];\n      }\n    }\n    // Everything that needs to be rendered has been.\n    return null;\n  }\n\n  /**\n   * @param {IRenderableView} view\n   * @returns {boolean}\n   */\n  isViewFinished(view) {\n    return view.renderingState === RenderingStates.FINISHED;\n  }\n\n  /**\n   * Render a page or thumbnail view. This calls the appropriate function\n   * based on the views state. If the view is already rendered it will return\n   * `false`.\n   *\n   * @param {IRenderableView} view\n   */\n  renderView(view) {\n    switch (view.renderingState) {\n      case RenderingStates.FINISHED:\n        return false;\n      case RenderingStates.PAUSED:\n        this.highestPriorityPage = view.renderingId;\n        view.resume();\n        break;\n      case RenderingStates.RUNNING:\n        this.highestPriorityPage = view.renderingId;\n        break;\n      case RenderingStates.INITIAL:\n        this.highestPriorityPage = view.renderingId;\n        view\n          .draw()\n          .finally(() => {\n            this.renderHighestPriority();\n          })\n          .catch(reason => {\n            if (reason instanceof RenderingCancelledException) {\n              return;\n            }\n            console.error(`renderView: \"${reason}\"`);\n          });\n        break;\n    }\n    return true;\n  }\n}\n\nexport { RenderingStates, PDFRenderingQueue };\n","/* Copyright 2016 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NullL10n } from \"./ui_utils.js\";\nimport { RenderingStates } from \"./pdf_rendering_queue.js\";\n\nconst UI_NOTIFICATION_CLASS = \"pdfSidebarNotification\";\n\nconst SidebarView = {\n  UNKNOWN: -1,\n  NONE: 0,\n  THUMBS: 1, // Default value.\n  OUTLINE: 2,\n  ATTACHMENTS: 3,\n  LAYERS: 4,\n};\n\n/**\n * @typedef {Object} PDFSidebarOptions\n * @property {PDFSidebarElements} elements - The DOM elements.\n * @property {PDFViewer} pdfViewer - The document viewer.\n * @property {PDFThumbnailViewer} pdfThumbnailViewer - The thumbnail viewer.\n * @property {EventBus} eventBus - The application event bus.\n * @property {IL10n} l10n - The localization service.\n * @property {boolean} [disableNotification] - Disable the notification for\n *   documents containing outline/attachments. The default value is `false`.\n */\n\n/**\n * @typedef {Object} PDFSidebarElements\n * @property {HTMLDivElement} outerContainer - The outer container\n *   (encasing both the viewer and sidebar elements).\n * @property {HTMLDivElement} viewerContainer - The viewer container\n *   (in which the viewer element is placed).\n * @property {HTMLButtonElement} toggleButton - The button used for\n *   opening/closing the sidebar.\n * @property {HTMLButtonElement} thumbnailButton - The button used to show\n *   the thumbnail view.\n * @property {HTMLButtonElement} outlineButton - The button used to show\n *   the outline view.\n * @property {HTMLButtonElement} attachmentsButton - The button used to show\n *   the attachments view.\n * @property {HTMLButtonElement} layersButton - The button used to show\n *   the layers view.\n * @property {HTMLDivElement} thumbnailView - The container in which\n *   the thumbnails are placed.\n * @property {HTMLDivElement} outlineView - The container in which\n *   the outline is placed.\n * @property {HTMLDivElement} attachmentsView - The container in which\n *   the attachments are placed.\n * @property {HTMLDivElement} layersView - The container in which\n *   the layers are placed.\n */\n\nclass PDFSidebar {\n  /**\n   * @param {PDFSidebarOptions} options\n   */\n  constructor({\n    elements,\n    pdfViewer,\n    pdfThumbnailViewer,\n    eventBus,\n    l10n = NullL10n,\n    disableNotification = false,\n  }) {\n    this.isOpen = false;\n    this.active = SidebarView.THUMBS;\n    this.isInitialViewSet = false;\n\n    /**\n     * Callback used when the sidebar has been opened/closed, to ensure that\n     * the viewers (PDFViewer/PDFThumbnailViewer) are updated correctly.\n     */\n    this.onToggled = null;\n\n    this.pdfViewer = pdfViewer;\n    this.pdfThumbnailViewer = pdfThumbnailViewer;\n\n    this.outerContainer = elements.outerContainer;\n    this.viewerContainer = elements.viewerContainer;\n    this.toggleButton = elements.toggleButton;\n\n    this.thumbnailButton = elements.thumbnailButton;\n    this.outlineButton = elements.outlineButton;\n    this.attachmentsButton = elements.attachmentsButton;\n    this.layersButton = elements.layersButton;\n\n    this.thumbnailView = elements.thumbnailView;\n    this.outlineView = elements.outlineView;\n    this.attachmentsView = elements.attachmentsView;\n    this.layersView = elements.layersView;\n\n    this.eventBus = eventBus;\n    this.l10n = l10n;\n    this._disableNotification = disableNotification;\n\n    this._addEventListeners();\n  }\n\n  reset() {\n    this.isInitialViewSet = false;\n\n    this._hideUINotification(null);\n    this.switchView(SidebarView.THUMBS);\n\n    this.outlineButton.disabled = false;\n    this.attachmentsButton.disabled = false;\n    this.layersButton.disabled = false;\n  }\n\n  /**\n   * @type {number} One of the values in {SidebarView}.\n   */\n  get visibleView() {\n    return this.isOpen ? this.active : SidebarView.NONE;\n  }\n\n  get isThumbnailViewVisible() {\n    return this.isOpen && this.active === SidebarView.THUMBS;\n  }\n\n  get isOutlineViewVisible() {\n    return this.isOpen && this.active === SidebarView.OUTLINE;\n  }\n\n  get isAttachmentsViewVisible() {\n    return this.isOpen && this.active === SidebarView.ATTACHMENTS;\n  }\n\n  get isLayersViewVisible() {\n    return this.isOpen && this.active === SidebarView.LAYERS;\n  }\n\n  /**\n   * @param {number} view - The sidebar view that should become visible,\n   *                        must be one of the values in {SidebarView}.\n   */\n  setInitialView(view = SidebarView.NONE) {\n    if (this.isInitialViewSet) {\n      return;\n    }\n    this.isInitialViewSet = true;\n\n    // If the user has already manually opened the sidebar, immediately closing\n    // it would be bad UX; also ignore the \"unknown\" sidebar view value.\n    if (view === SidebarView.NONE || view === SidebarView.UNKNOWN) {\n      this._dispatchEvent();\n      return;\n    }\n    // Prevent dispatching two back-to-back `sidebarviewchanged` events,\n    // since `this._switchView` dispatched the event if the view changed.\n    if (!this._switchView(view, /* forceOpen */ true)) {\n      this._dispatchEvent();\n    }\n  }\n\n  /**\n   * @param {number} view - The sidebar view that should be switched to,\n   *                        must be one of the values in {SidebarView}.\n   * @param {boolean} [forceOpen] - Ensure that the sidebar is open.\n   *                                The default value is `false`.\n   */\n  switchView(view, forceOpen = false) {\n    this._switchView(view, forceOpen);\n  }\n\n  /**\n   * @returns {boolean} Indicating if `this._dispatchEvent` was called.\n   * @private\n   */\n  _switchView(view, forceOpen = false) {\n    const isViewChanged = view !== this.active;\n    let shouldForceRendering = false;\n\n    switch (view) {\n      case SidebarView.NONE:\n        if (this.isOpen) {\n          this.close();\n          return true; // Closing will trigger rendering and dispatch the event.\n        }\n        return false;\n      case SidebarView.THUMBS:\n        if (this.isOpen && isViewChanged) {\n          shouldForceRendering = true;\n        }\n        break;\n      case SidebarView.OUTLINE:\n        if (this.outlineButton.disabled) {\n          return false;\n        }\n        break;\n      case SidebarView.ATTACHMENTS:\n        if (this.attachmentsButton.disabled) {\n          return false;\n        }\n        break;\n      case SidebarView.LAYERS:\n        if (this.layersButton.disabled) {\n          return false;\n        }\n        break;\n      default:\n        console.error(`PDFSidebar._switchView: \"${view}\" is not a valid view.`);\n        return false;\n    }\n    // Update the active view *after* it has been validated above,\n    // in order to prevent setting it to an invalid state.\n    this.active = view;\n\n    // Update the CSS classes, for all buttons...\n    this.thumbnailButton.classList.toggle(\n      \"toggled\",\n      view === SidebarView.THUMBS\n    );\n    this.outlineButton.classList.toggle(\n      \"toggled\",\n      view === SidebarView.OUTLINE\n    );\n    this.attachmentsButton.classList.toggle(\n      \"toggled\",\n      view === SidebarView.ATTACHMENTS\n    );\n    this.layersButton.classList.toggle(\"toggled\", view === SidebarView.LAYERS);\n    // ... and for all views.\n    this.thumbnailView.classList.toggle(\"hidden\", view !== SidebarView.THUMBS);\n    this.outlineView.classList.toggle(\"hidden\", view !== SidebarView.OUTLINE);\n    this.attachmentsView.classList.toggle(\n      \"hidden\",\n      view !== SidebarView.ATTACHMENTS\n    );\n    this.layersView.classList.toggle(\"hidden\", view !== SidebarView.LAYERS);\n\n    if (forceOpen && !this.isOpen) {\n      this.open();\n      return true; // Opening will trigger rendering and dispatch the event.\n    }\n    if (shouldForceRendering) {\n      this._updateThumbnailViewer();\n      this._forceRendering();\n    }\n    if (isViewChanged) {\n      this._dispatchEvent();\n    }\n    this._hideUINotification(this.active);\n    return isViewChanged;\n  }\n\n  open() {\n    if (this.isOpen) {\n      return;\n    }\n    this.isOpen = true;\n    this.toggleButton.classList.add(\"toggled\");\n\n    this.outerContainer.classList.add(\"sidebarMoving\", \"sidebarOpen\");\n\n    if (this.active === SidebarView.THUMBS) {\n      this._updateThumbnailViewer();\n    }\n    this._forceRendering();\n    this._dispatchEvent();\n\n    this._hideUINotification(this.active);\n  }\n\n  close() {\n    if (!this.isOpen) {\n      return;\n    }\n    this.isOpen = false;\n    this.toggleButton.classList.remove(\"toggled\");\n\n    this.outerContainer.classList.add(\"sidebarMoving\");\n    this.outerContainer.classList.remove(\"sidebarOpen\");\n\n    this._forceRendering();\n    this._dispatchEvent();\n  }\n\n  toggle() {\n    if (this.isOpen) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _dispatchEvent() {\n    this.eventBus.dispatch(\"sidebarviewchanged\", {\n      source: this,\n      view: this.visibleView,\n    });\n  }\n\n  /**\n   * @private\n   */\n  _forceRendering() {\n    if (this.onToggled) {\n      this.onToggled();\n    } else {\n      // Fallback\n      this.pdfViewer.forceRendering();\n      this.pdfThumbnailViewer.forceRendering();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateThumbnailViewer() {\n    const { pdfViewer, pdfThumbnailViewer } = this;\n\n    // Use the rendered pages to set the corresponding thumbnail images.\n    const pagesCount = pdfViewer.pagesCount;\n    for (let pageIndex = 0; pageIndex < pagesCount; pageIndex++) {\n      const pageView = pdfViewer.getPageView(pageIndex);\n      if (pageView && pageView.renderingState === RenderingStates.FINISHED) {\n        const thumbnailView = pdfThumbnailViewer.getThumbnail(pageIndex);\n        thumbnailView.setImage(pageView);\n      }\n    }\n    pdfThumbnailViewer.scrollThumbnailIntoView(pdfViewer.currentPageNumber);\n  }\n\n  /**\n   * @private\n   */\n  _showUINotification(view) {\n    if (this._disableNotification) {\n      return;\n    }\n\n    this.l10n\n      .get(\n        \"toggle_sidebar_notification2.title\",\n        null,\n        \"Toggle Sidebar (document contains outline/attachments/layers)\"\n      )\n      .then(msg => {\n        this.toggleButton.title = msg;\n      });\n\n    if (!this.isOpen) {\n      // Only show the notification on the `toggleButton` if the sidebar is\n      // currently closed, to avoid unnecessarily bothering the user.\n      this.toggleButton.classList.add(UI_NOTIFICATION_CLASS);\n    } else if (view === this.active) {\n      // If the sidebar is currently open *and* the `view` is visible, do not\n      // bother the user with a notification on the corresponding button.\n      return;\n    }\n\n    switch (view) {\n      case SidebarView.OUTLINE:\n        this.outlineButton.classList.add(UI_NOTIFICATION_CLASS);\n        break;\n      case SidebarView.ATTACHMENTS:\n        this.attachmentsButton.classList.add(UI_NOTIFICATION_CLASS);\n        break;\n      case SidebarView.LAYERS:\n        this.layersButton.classList.add(UI_NOTIFICATION_CLASS);\n        break;\n    }\n  }\n\n  /**\n   * @private\n   */\n  _hideUINotification(view) {\n    if (this._disableNotification) {\n      return;\n    }\n\n    const removeNotification = sidebarView => {\n      switch (sidebarView) {\n        case SidebarView.OUTLINE:\n          this.outlineButton.classList.remove(UI_NOTIFICATION_CLASS);\n          break;\n        case SidebarView.ATTACHMENTS:\n          this.attachmentsButton.classList.remove(UI_NOTIFICATION_CLASS);\n          break;\n        case SidebarView.LAYERS:\n          this.layersButton.classList.remove(UI_NOTIFICATION_CLASS);\n          break;\n      }\n    };\n\n    if (!this.isOpen && view !== null) {\n      // Only hide the notifications when the sidebar is currently open,\n      // or when it is being reset (i.e. `view === null`).\n      return;\n    }\n    this.toggleButton.classList.remove(UI_NOTIFICATION_CLASS);\n\n    if (view !== null) {\n      removeNotification(view);\n      return;\n    }\n    // Remove all sidebar notifications on reset.\n    for (view in SidebarView) {\n      removeNotification(SidebarView[view]);\n    }\n\n    this.l10n.get(\"toggle_sidebar.title\", null, \"Toggle Sidebar\").then(msg => {\n      this.toggleButton.title = msg;\n    });\n  }\n\n  /**\n   * @private\n   */\n  _addEventListeners() {\n    this.viewerContainer.addEventListener(\"transitionend\", evt => {\n      if (evt.target === this.viewerContainer) {\n        this.outerContainer.classList.remove(\"sidebarMoving\");\n      }\n    });\n\n    this.toggleButton.addEventListener(\"click\", () => {\n      this.toggle();\n    });\n\n    // Buttons for switching views.\n    this.thumbnailButton.addEventListener(\"click\", () => {\n      this.switchView(SidebarView.THUMBS);\n    });\n\n    this.outlineButton.addEventListener(\"click\", () => {\n      this.switchView(SidebarView.OUTLINE);\n    });\n    this.outlineButton.addEventListener(\"dblclick\", () => {\n      this.eventBus.dispatch(\"toggleoutlinetree\", { source: this });\n    });\n\n    this.attachmentsButton.addEventListener(\"click\", () => {\n      this.switchView(SidebarView.ATTACHMENTS);\n    });\n\n    this.layersButton.addEventListener(\"click\", () => {\n      this.switchView(SidebarView.LAYERS);\n    });\n    this.layersButton.addEventListener(\"dblclick\", () => {\n      this.eventBus.dispatch(\"resetlayers\", { source: this });\n    });\n\n    // Disable/enable views.\n    const onTreeLoaded = (count, button, view) => {\n      button.disabled = !count;\n\n      if (count) {\n        this._showUINotification(view);\n      } else if (this.active === view) {\n        // If the `view` was opened by the user during document load,\n        // switch away from it if it turns out to be empty.\n        this.switchView(SidebarView.THUMBS);\n      }\n    };\n\n    this.eventBus._on(\"outlineloaded\", evt => {\n      onTreeLoaded(evt.outlineCount, this.outlineButton, SidebarView.OUTLINE);\n    });\n\n    this.eventBus._on(\"attachmentsloaded\", evt => {\n      onTreeLoaded(\n        evt.attachmentsCount,\n        this.attachmentsButton,\n        SidebarView.ATTACHMENTS\n      );\n    });\n\n    this.eventBus._on(\"layersloaded\", evt => {\n      onTreeLoaded(evt.layersCount, this.layersButton, SidebarView.LAYERS);\n    });\n\n    // Update the thumbnailViewer, if visible, when exiting presentation mode.\n    this.eventBus._on(\"presentationmodechanged\", evt => {\n      if (!evt.active && !evt.switchInProgress && this.isThumbnailViewVisible) {\n        this._updateThumbnailViewer();\n      }\n    });\n  }\n}\n\nexport { SidebarView, PDFSidebar };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nclass OverlayManager {\n  constructor() {\n    this._overlays = {};\n    this._active = null;\n    this._keyDownBound = this._keyDown.bind(this);\n  }\n\n  get active() {\n    return this._active;\n  }\n\n  /**\n   * @param {string} name - The name of the overlay that is registered.\n   * @param {HTMLDivElement} element - The overlay's DOM element.\n   * @param {function} [callerCloseMethod] - The method that, if present, calls\n   *                   `OverlayManager.close` from the object registering the\n   *                   overlay. Access to this method is necessary in order to\n   *                   run cleanup code when e.g. the overlay is force closed.\n   *                   The default is `null`.\n   * @param {boolean} [canForceClose] - Indicates if opening the overlay closes\n   *                  an active overlay. The default is `false`.\n   * @returns {Promise} A promise that is resolved when the overlay has been\n   *                    registered.\n   */\n  async register(\n    name,\n    element,\n    callerCloseMethod = null,\n    canForceClose = false\n  ) {\n    let container;\n    if (!name || !element || !(container = element.parentNode)) {\n      throw new Error(\"Not enough parameters.\");\n    } else if (this._overlays[name]) {\n      throw new Error(\"The overlay is already registered.\");\n    }\n    this._overlays[name] = {\n      element,\n      container,\n      callerCloseMethod,\n      canForceClose,\n    };\n  }\n\n  /**\n   * @param {string} name - The name of the overlay that is unregistered.\n   * @returns {Promise} A promise that is resolved when the overlay has been\n   *                    unregistered.\n   */\n  async unregister(name) {\n    if (!this._overlays[name]) {\n      throw new Error(\"The overlay does not exist.\");\n    } else if (this._active === name) {\n      throw new Error(\"The overlay cannot be removed while it is active.\");\n    }\n    delete this._overlays[name];\n  }\n\n  /**\n   * @param {string} name - The name of the overlay that should be opened.\n   * @returns {Promise} A promise that is resolved when the overlay has been\n   *                    opened.\n   */\n  async open(name) {\n    if (!this._overlays[name]) {\n      throw new Error(\"The overlay does not exist.\");\n    } else if (this._active) {\n      if (this._overlays[name].canForceClose) {\n        this._closeThroughCaller();\n      } else if (this._active === name) {\n        throw new Error(\"The overlay is already active.\");\n      } else {\n        throw new Error(\"Another overlay is currently active.\");\n      }\n    }\n    this._active = name;\n    this._overlays[this._active].element.classList.remove(\"hidden\");\n    this._overlays[this._active].container.classList.remove(\"hidden\");\n\n    window.addEventListener(\"keydown\", this._keyDownBound);\n  }\n\n  /**\n   * @param {string} name - The name of the overlay that should be closed.\n   * @returns {Promise} A promise that is resolved when the overlay has been\n   *                    closed.\n   */\n  async close(name) {\n    if (!this._overlays[name]) {\n      throw new Error(\"The overlay does not exist.\");\n    } else if (!this._active) {\n      throw new Error(\"The overlay is currently not active.\");\n    } else if (this._active !== name) {\n      throw new Error(\"Another overlay is currently active.\");\n    }\n    this._overlays[this._active].container.classList.add(\"hidden\");\n    this._overlays[this._active].element.classList.add(\"hidden\");\n    this._active = null;\n\n    window.removeEventListener(\"keydown\", this._keyDownBound);\n  }\n\n  /**\n   * @private\n   */\n  _keyDown(evt) {\n    if (this._active && evt.keyCode === /* Esc = */ 27) {\n      this._closeThroughCaller();\n      evt.preventDefault();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _closeThroughCaller() {\n    if (this._overlays[this._active].callerCloseMethod) {\n      this._overlays[this._active].callerCloseMethod();\n    }\n    if (this._active) {\n      this.close(this._active);\n    }\n  }\n}\n\nexport { OverlayManager };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NullL10n } from \"./ui_utils.js\";\nimport { PasswordResponses } from \"pdfjs-lib\";\n\n/**\n * @typedef {Object} PasswordPromptOptions\n * @property {string} overlayName - Name of the overlay for the overlay manager.\n * @property {HTMLDivElement} container - Div container for the overlay.\n * @property {HTMLParagraphElement} label - Label containing instructions for\n *                                          entering the password.\n * @property {HTMLInputElement} input - Input field for entering the password.\n * @property {HTMLButtonElement} submitButton - Button for submitting the\n *                                              password.\n * @property {HTMLButtonElement} cancelButton - Button for cancelling password\n *                                              entry.\n */\n\nclass PasswordPrompt {\n  /**\n   * @param {PasswordPromptOptions} options\n   * @param {OverlayManager} overlayManager - Manager for the viewer overlays.\n   * @param {IL10n} l10n - Localization service.\n   */\n  constructor(options, overlayManager, l10n = NullL10n) {\n    this.overlayName = options.overlayName;\n    this.container = options.container;\n    this.label = options.label;\n    this.input = options.input;\n    this.submitButton = options.submitButton;\n    this.cancelButton = options.cancelButton;\n    this.overlayManager = overlayManager;\n    this.l10n = l10n;\n\n    this.updateCallback = null;\n    this.reason = null;\n\n    // Attach the event listeners.\n    this.submitButton.addEventListener(\"click\", this.verify.bind(this));\n    this.cancelButton.addEventListener(\"click\", this.close.bind(this));\n    this.input.addEventListener(\"keydown\", e => {\n      if (e.keyCode === /* Enter = */ 13) {\n        this.verify();\n      }\n    });\n\n    this.overlayManager.register(\n      this.overlayName,\n      this.container,\n      this.close.bind(this),\n      true\n    );\n  }\n\n  open() {\n    this.overlayManager.open(this.overlayName).then(() => {\n      this.input.focus();\n\n      let promptString;\n      if (this.reason === PasswordResponses.INCORRECT_PASSWORD) {\n        promptString = this.l10n.get(\n          \"password_invalid\",\n          null,\n          \"Invalid password. Please try again.\"\n        );\n      } else {\n        promptString = this.l10n.get(\n          \"password_label\",\n          null,\n          \"Enter the password to open this PDF file.\"\n        );\n      }\n\n      promptString.then(msg => {\n        this.label.textContent = msg;\n      });\n    });\n  }\n\n  close() {\n    this.overlayManager.close(this.overlayName).then(() => {\n      this.input.value = \"\";\n    });\n  }\n\n  verify() {\n    const password = this.input.value;\n    if (password && password.length > 0) {\n      this.close();\n      this.updateCallback(password);\n    }\n  }\n\n  setUpdateCallback(updateCallback, reason) {\n    this.updateCallback = updateCallback;\n    this.reason = reason;\n  }\n}\n\nexport { PasswordPrompt };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createPromiseCapability, getFilenameFromUrl } from \"pdfjs-lib\";\nimport { BaseTreeViewer } from \"./base_tree_viewer.js\";\nimport { viewerCompatibilityParams } from \"./viewer_compatibility.js\";\n\nconst PdfFileRegExp = /\\.pdf$/i;\n\n/**\n * @typedef {Object} PDFAttachmentViewerOptions\n * @property {HTMLDivElement} container - The viewer element.\n * @property {EventBus} eventBus - The application event bus.\n * @property {DownloadManager} downloadManager - The download manager.\n */\n\n/**\n * @typedef {Object} PDFAttachmentViewerRenderParameters\n * @property {Object|null} attachments - A lookup table of attachment objects.\n */\n\nclass PDFAttachmentViewer extends BaseTreeViewer {\n  /**\n   * @param {PDFAttachmentViewerOptions} options\n   */\n  constructor(options) {\n    super(options);\n    this.downloadManager = options.downloadManager;\n\n    this.eventBus._on(\n      \"fileattachmentannotation\",\n      this._appendAttachment.bind(this)\n    );\n  }\n\n  reset(keepRenderedCapability = false) {\n    super.reset();\n    this._attachments = null;\n\n    if (!keepRenderedCapability) {\n      // The only situation in which the `_renderedCapability` should *not* be\n      // replaced is when appending FileAttachment annotations.\n      this._renderedCapability = createPromiseCapability();\n    }\n    if (this._pendingDispatchEvent) {\n      clearTimeout(this._pendingDispatchEvent);\n    }\n    this._pendingDispatchEvent = null;\n  }\n\n  /**\n   * @private\n   */\n  _dispatchEvent(attachmentsCount) {\n    this._renderedCapability.resolve();\n\n    if (this._pendingDispatchEvent) {\n      clearTimeout(this._pendingDispatchEvent);\n      this._pendingDispatchEvent = null;\n    }\n    if (attachmentsCount === 0) {\n      // Delay the event when no \"regular\" attachments exist, to allow time for\n      // parsing of any FileAttachment annotations that may be present on the\n      // *initially* rendered page; this reduces the likelihood of temporarily\n      // disabling the attachmentsView when the `PDFSidebar` handles the event.\n      this._pendingDispatchEvent = setTimeout(() => {\n        this.eventBus.dispatch(\"attachmentsloaded\", {\n          source: this,\n          attachmentsCount: 0,\n        });\n        this._pendingDispatchEvent = null;\n      });\n      return;\n    }\n\n    this.eventBus.dispatch(\"attachmentsloaded\", {\n      source: this,\n      attachmentsCount,\n    });\n  }\n\n  /**\n   * NOTE: Should only be used when `URL.createObjectURL` is natively supported.\n   * @private\n   */\n  _bindPdfLink(element, { content, filename }) {\n    let blobUrl;\n    element.onclick = () => {\n      if (!blobUrl) {\n        blobUrl = URL.createObjectURL(\n          new Blob([content], { type: \"application/pdf\" })\n        );\n      }\n      let viewerUrl;\n      if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n        // The current URL is the viewer, let's use it and append the file.\n        viewerUrl = \"?file=\" + encodeURIComponent(blobUrl + \"#\" + filename);\n      } else if (PDFJSDev.test(\"MOZCENTRAL\")) {\n        // Let Firefox's content handler catch the URL and display the PDF.\n        viewerUrl = blobUrl + \"#filename=\" + encodeURIComponent(filename);\n      } else if (PDFJSDev.test(\"CHROME\")) {\n        // In the Chrome extension, the URL is rewritten using the history API\n        // in viewer.js, so an absolute URL must be generated.\n        viewerUrl =\n          // eslint-disable-next-line no-undef\n          chrome.runtime.getURL(\"/content/web/viewer.html\") +\n          \"?file=\" +\n          encodeURIComponent(blobUrl + \"#\" + filename);\n      }\n      try {\n        window.open(viewerUrl);\n      } catch (ex) {\n        console.error(`_bindPdfLink: ${ex}`);\n        // Release the `blobUrl`, since opening it failed...\n        URL.revokeObjectURL(blobUrl);\n        blobUrl = null;\n        // ... and fallback to downloading the PDF file.\n        this.downloadManager.downloadData(content, filename, \"application/pdf\");\n      }\n      return false;\n    };\n  }\n\n  /**\n   * @private\n   */\n  _bindLink(element, { content, filename }) {\n    element.onclick = () => {\n      const contentType = PdfFileRegExp.test(filename) ? \"application/pdf\" : \"\";\n      this.downloadManager.downloadData(content, filename, contentType);\n      return false;\n    };\n  }\n\n  /**\n   * @param {PDFAttachmentViewerRenderParameters} params\n   */\n  render({ attachments, keepRenderedCapability = false }) {\n    if (this._attachments) {\n      this.reset(keepRenderedCapability);\n    }\n    this._attachments = attachments || null;\n\n    if (!attachments) {\n      this._dispatchEvent(/* attachmentsCount = */ 0);\n      return;\n    }\n    const names = Object.keys(attachments).sort(function (a, b) {\n      return a.toLowerCase().localeCompare(b.toLowerCase());\n    });\n\n    const fragment = document.createDocumentFragment();\n    let attachmentsCount = 0;\n    for (const name of names) {\n      const item = attachments[name];\n      const filename = getFilenameFromUrl(item.filename);\n\n      const div = document.createElement(\"div\");\n      div.className = \"treeItem\";\n\n      const element = document.createElement(\"a\");\n      if (\n        PdfFileRegExp.test(filename) &&\n        !viewerCompatibilityParams.disableCreateObjectURL\n      ) {\n        this._bindPdfLink(element, { content: item.content, filename });\n      } else {\n        this._bindLink(element, { content: item.content, filename });\n      }\n      element.textContent = this._normalizeTextContent(filename);\n\n      div.appendChild(element);\n\n      fragment.appendChild(div);\n      attachmentsCount++;\n    }\n\n    this.container.appendChild(fragment);\n\n    this._dispatchEvent(attachmentsCount);\n  }\n\n  /**\n   * Used to append FileAttachment annotations to the sidebar.\n   * @private\n   */\n  _appendAttachment({ id, filename, content }) {\n    const renderedPromise = this._renderedCapability.promise;\n\n    renderedPromise.then(() => {\n      if (renderedPromise !== this._renderedCapability.promise) {\n        return; // The FileAttachment annotation belongs to a previous document.\n      }\n      let attachments = this._attachments;\n\n      if (!attachments) {\n        attachments = Object.create(null);\n      } else {\n        for (const name in attachments) {\n          if (id === name) {\n            return; // Ignore the new attachment if it already exists.\n          }\n        }\n      }\n      attachments[id] = {\n        filename,\n        content,\n      };\n      this.render({\n        attachments,\n        keepRenderedCapability: true,\n      });\n    });\n  }\n}\n\nexport { PDFAttachmentViewer };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { removeNullCharacters } from \"pdfjs-lib\";\n\nclass BaseTreeViewer {\n  constructor(options) {\n    if (this.constructor === BaseTreeViewer) {\n      throw new Error(\"Cannot initialize BaseTreeViewer.\");\n    }\n    this.container = options.container;\n    this.eventBus = options.eventBus;\n\n    this.reset();\n  }\n\n  reset() {\n    this._lastToggleIsShow = true;\n\n    // Remove the tree from the DOM.\n    this.container.textContent = \"\";\n    // Ensure that the left (right in RTL locales) margin is always reset,\n    // to prevent incorrect tree alignment if a new document is opened.\n    this.container.classList.remove(\"treeWithDeepNesting\");\n  }\n\n  /**\n   * @private\n   */\n  _dispatchEvent(count) {\n    throw new Error(\"Not implemented: _dispatchEvent\");\n  }\n\n  /**\n   * @private\n   */\n  _bindLink(element, params) {\n    throw new Error(\"Not implemented: _bindLink\");\n  }\n\n  /**\n   * @private\n   */\n  _normalizeTextContent(str) {\n    return removeNullCharacters(str) || /* en dash = */ \"\\u2013\";\n  }\n\n  /**\n   * Prepend a button before a tree item which allows the user to collapse or\n   * expand all tree items at that level; see `_toggleTreeItem`.\n   * @private\n   */\n  _addToggleButton(div, hidden = false) {\n    const toggler = document.createElement(\"div\");\n    toggler.className = \"treeItemToggler\";\n    if (hidden) {\n      toggler.classList.add(\"treeItemsHidden\");\n    }\n    toggler.onclick = evt => {\n      evt.stopPropagation();\n      toggler.classList.toggle(\"treeItemsHidden\");\n\n      if (evt.shiftKey) {\n        const shouldShowAll = !toggler.classList.contains(\"treeItemsHidden\");\n        this._toggleTreeItem(div, shouldShowAll);\n      }\n    };\n    div.insertBefore(toggler, div.firstChild);\n  }\n\n  /**\n   * Collapse or expand the subtree of a tree item.\n   *\n   * @param {Element} root - the root of the item (sub)tree.\n   * @param {boolean} show - whether to show the item (sub)tree. If false,\n   *   the item subtree rooted at `root` will be collapsed.\n   * @private\n   */\n  _toggleTreeItem(root, show = false) {\n    this._lastToggleIsShow = show;\n    for (const toggler of root.querySelectorAll(\".treeItemToggler\")) {\n      toggler.classList.toggle(\"treeItemsHidden\", !show);\n    }\n  }\n\n  /**\n   * Collapse or expand all subtrees of the `container`.\n   * @private\n   */\n  _toggleAllTreeItems() {\n    this._toggleTreeItem(this.container, !this._lastToggleIsShow);\n  }\n\n  render(params) {\n    throw new Error(\"Not implemented: render\");\n  }\n}\n\nexport { BaseTreeViewer };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createPromiseCapability, PDFDateString } from \"pdfjs-lib\";\nimport {\n  getPageSizeInches,\n  getPDFFileNameFromURL,\n  isPortraitOrientation,\n  NullL10n,\n} from \"./ui_utils.js\";\n\nconst DEFAULT_FIELD_CONTENT = \"-\";\n\n// See https://en.wikibooks.org/wiki/Lentis/Conversion_to_the_Metric_Standard_in_the_United_States\nconst NON_METRIC_LOCALES = [\"en-us\", \"en-lr\", \"my\"];\n\n// Should use the format: `width x height`, in portrait orientation.\n// See https://en.wikipedia.org/wiki/Paper_size\nconst US_PAGE_NAMES = {\n  \"8.5x11\": \"Letter\",\n  \"8.5x14\": \"Legal\",\n};\nconst METRIC_PAGE_NAMES = {\n  \"297x420\": \"A3\",\n  \"210x297\": \"A4\",\n};\n\nfunction getPageName(size, isPortrait, pageNames) {\n  const width = isPortrait ? size.width : size.height;\n  const height = isPortrait ? size.height : size.width;\n\n  return pageNames[`${width}x${height}`];\n}\n\n/**\n * @typedef {Object} PDFDocumentPropertiesOptions\n * @property {string} overlayName - Name/identifier for the overlay.\n * @property {Object} fields - Names and elements of the overlay's fields.\n * @property {HTMLDivElement} container - Div container for the overlay.\n * @property {HTMLButtonElement} closeButton - Button for closing the overlay.\n */\n\nclass PDFDocumentProperties {\n  /**\n   * @param {PDFDocumentPropertiesOptions} options\n   * @param {OverlayManager} overlayManager - Manager for the viewer overlays.\n   * @param {EventBus} eventBus - The application event bus.\n   * @param {IL10n} l10n - Localization service.\n   */\n  constructor(\n    { overlayName, fields, container, closeButton },\n    overlayManager,\n    eventBus,\n    l10n = NullL10n\n  ) {\n    this.overlayName = overlayName;\n    this.fields = fields;\n    this.container = container;\n    this.overlayManager = overlayManager;\n    this.l10n = l10n;\n\n    this._reset();\n    // Bind the event listener for the Close button.\n    closeButton.addEventListener(\"click\", this.close.bind(this));\n\n    this.overlayManager.register(\n      this.overlayName,\n      this.container,\n      this.close.bind(this)\n    );\n\n    eventBus._on(\"pagechanging\", evt => {\n      this._currentPageNumber = evt.pageNumber;\n    });\n    eventBus._on(\"rotationchanging\", evt => {\n      this._pagesRotation = evt.pagesRotation;\n    });\n\n    this._isNonMetricLocale = true; // The default viewer locale is 'en-us'.\n    l10n.getLanguage().then(locale => {\n      this._isNonMetricLocale = NON_METRIC_LOCALES.includes(locale);\n    });\n  }\n\n  /**\n   * Open the document properties overlay.\n   */\n  async open() {\n    const freezeFieldData = data => {\n      Object.defineProperty(this, \"fieldData\", {\n        value: Object.freeze(data),\n        writable: false,\n        enumerable: true,\n        configurable: true,\n      });\n    };\n\n    await Promise.all([\n      this.overlayManager.open(this.overlayName),\n      this._dataAvailableCapability.promise,\n    ]);\n    const currentPageNumber = this._currentPageNumber;\n    const pagesRotation = this._pagesRotation;\n\n    // If the document properties were previously fetched (for this PDF file),\n    // just update the dialog immediately to avoid redundant lookups.\n    if (\n      this.fieldData &&\n      currentPageNumber === this.fieldData._currentPageNumber &&\n      pagesRotation === this.fieldData._pagesRotation\n    ) {\n      this._updateUI();\n      return;\n    }\n\n    // Get the document properties.\n    const {\n      info,\n      /* metadata, */\n      contentDispositionFilename,\n      contentLength,\n    } = await this.pdfDocument.getMetadata();\n\n    const [\n      fileName,\n      fileSize,\n      creationDate,\n      modificationDate,\n      pageSize,\n      isLinearized,\n    ] = await Promise.all([\n      contentDispositionFilename || getPDFFileNameFromURL(this.url),\n      this._parseFileSize(contentLength),\n      this._parseDate(info.CreationDate),\n      this._parseDate(info.ModDate),\n      this.pdfDocument.getPage(currentPageNumber).then(pdfPage => {\n        return this._parsePageSize(getPageSizeInches(pdfPage), pagesRotation);\n      }),\n      this._parseLinearization(info.IsLinearized),\n    ]);\n\n    freezeFieldData({\n      fileName,\n      fileSize,\n      title: info.Title,\n      author: info.Author,\n      subject: info.Subject,\n      keywords: info.Keywords,\n      creationDate,\n      modificationDate,\n      creator: info.Creator,\n      producer: info.Producer,\n      version: info.PDFFormatVersion,\n      pageCount: this.pdfDocument.numPages,\n      pageSize,\n      linearized: isLinearized,\n      _currentPageNumber: currentPageNumber,\n      _pagesRotation: pagesRotation,\n    });\n    this._updateUI();\n\n    // Get the correct fileSize, since it may not have been available\n    // or could potentially be wrong.\n    const { length } = await this.pdfDocument.getDownloadInfo();\n    if (contentLength === length) {\n      return; // The fileSize has already been correctly set.\n    }\n    const data = Object.assign(Object.create(null), this.fieldData);\n    data.fileSize = await this._parseFileSize(length);\n\n    freezeFieldData(data);\n    this._updateUI();\n  }\n\n  /**\n   * Close the document properties overlay.\n   */\n  close() {\n    this.overlayManager.close(this.overlayName);\n  }\n\n  /**\n   * Set a reference to the PDF document and the URL in order\n   * to populate the overlay fields with the document properties.\n   * Note that the overlay will contain no information if this method\n   * is not called.\n   *\n   * @param {PDFDocumentProxy} pdfDocument - A reference to the PDF document.\n   * @param {string} url - The URL of the document.\n   */\n  setDocument(pdfDocument, url = null) {\n    if (this.pdfDocument) {\n      this._reset();\n      this._updateUI(true);\n    }\n    if (!pdfDocument) {\n      return;\n    }\n    this.pdfDocument = pdfDocument;\n    this.url = url;\n\n    this._dataAvailableCapability.resolve();\n  }\n\n  /**\n   * @private\n   */\n  _reset() {\n    this.pdfDocument = null;\n    this.url = null;\n\n    delete this.fieldData;\n    this._dataAvailableCapability = createPromiseCapability();\n    this._currentPageNumber = 1;\n    this._pagesRotation = 0;\n  }\n\n  /**\n   * Always updates all of the dialog fields, to prevent inconsistent UI state.\n   * NOTE: If the contents of a particular field is neither a non-empty string,\n   *       nor a number, it will fall back to `DEFAULT_FIELD_CONTENT`.\n   * @private\n   */\n  _updateUI(reset = false) {\n    if (reset || !this.fieldData) {\n      for (const id in this.fields) {\n        this.fields[id].textContent = DEFAULT_FIELD_CONTENT;\n      }\n      return;\n    }\n    if (this.overlayManager.active !== this.overlayName) {\n      // Don't bother updating the dialog if has already been closed,\n      // since it will be updated the next time `this.open` is called.\n      return;\n    }\n    for (const id in this.fields) {\n      const content = this.fieldData[id];\n      this.fields[id].textContent =\n        content || content === 0 ? content : DEFAULT_FIELD_CONTENT;\n    }\n  }\n\n  /**\n   * @private\n   */\n  async _parseFileSize(fileSize = 0) {\n    const kb = fileSize / 1024;\n    if (!kb) {\n      return undefined;\n    } else if (kb < 1024) {\n      return this.l10n.get(\n        \"document_properties_kb\",\n        {\n          size_kb: (+kb.toPrecision(3)).toLocaleString(),\n          size_b: fileSize.toLocaleString(),\n        },\n        \"{{size_kb}} KB ({{size_b}} bytes)\"\n      );\n    }\n    return this.l10n.get(\n      \"document_properties_mb\",\n      {\n        size_mb: (+(kb / 1024).toPrecision(3)).toLocaleString(),\n        size_b: fileSize.toLocaleString(),\n      },\n      \"{{size_mb}} MB ({{size_b}} bytes)\"\n    );\n  }\n\n  /**\n   * @private\n   */\n  async _parsePageSize(pageSizeInches, pagesRotation) {\n    if (!pageSizeInches) {\n      return undefined;\n    }\n    // Take the viewer rotation into account as well; compare with Adobe Reader.\n    if (pagesRotation % 180 !== 0) {\n      pageSizeInches = {\n        width: pageSizeInches.height,\n        height: pageSizeInches.width,\n      };\n    }\n    const isPortrait = isPortraitOrientation(pageSizeInches);\n\n    let sizeInches = {\n      width: Math.round(pageSizeInches.width * 100) / 100,\n      height: Math.round(pageSizeInches.height * 100) / 100,\n    };\n    // 1in == 25.4mm; no need to round to 2 decimals for millimeters.\n    let sizeMillimeters = {\n      width: Math.round(pageSizeInches.width * 25.4 * 10) / 10,\n      height: Math.round(pageSizeInches.height * 25.4 * 10) / 10,\n    };\n\n    let pageName = null;\n    let rawName =\n      getPageName(sizeInches, isPortrait, US_PAGE_NAMES) ||\n      getPageName(sizeMillimeters, isPortrait, METRIC_PAGE_NAMES);\n\n    if (\n      !rawName &&\n      !(\n        Number.isInteger(sizeMillimeters.width) &&\n        Number.isInteger(sizeMillimeters.height)\n      )\n    ) {\n      // Attempt to improve the page name detection by falling back to fuzzy\n      // matching of the metric dimensions, to account for e.g. rounding errors\n      // and/or PDF files that define the page sizes in an imprecise manner.\n      const exactMillimeters = {\n        width: pageSizeInches.width * 25.4,\n        height: pageSizeInches.height * 25.4,\n      };\n      const intMillimeters = {\n        width: Math.round(sizeMillimeters.width),\n        height: Math.round(sizeMillimeters.height),\n      };\n\n      // Try to avoid false positives, by only considering \"small\" differences.\n      if (\n        Math.abs(exactMillimeters.width - intMillimeters.width) < 0.1 &&\n        Math.abs(exactMillimeters.height - intMillimeters.height) < 0.1\n      ) {\n        rawName = getPageName(intMillimeters, isPortrait, METRIC_PAGE_NAMES);\n        if (rawName) {\n          // Update *both* sizes, computed above, to ensure that the displayed\n          // dimensions always correspond to the detected page name.\n          sizeInches = {\n            width: Math.round((intMillimeters.width / 25.4) * 100) / 100,\n            height: Math.round((intMillimeters.height / 25.4) * 100) / 100,\n          };\n          sizeMillimeters = intMillimeters;\n        }\n      }\n    }\n    if (rawName) {\n      pageName = this.l10n.get(\n        \"document_properties_page_size_name_\" + rawName.toLowerCase(),\n        null,\n        rawName\n      );\n    }\n\n    return Promise.all([\n      this._isNonMetricLocale ? sizeInches : sizeMillimeters,\n      this.l10n.get(\n        \"document_properties_page_size_unit_\" +\n          (this._isNonMetricLocale ? \"inches\" : \"millimeters\"),\n        null,\n        this._isNonMetricLocale ? \"in\" : \"mm\"\n      ),\n      pageName,\n      this.l10n.get(\n        \"document_properties_page_size_orientation_\" +\n          (isPortrait ? \"portrait\" : \"landscape\"),\n        null,\n        isPortrait ? \"portrait\" : \"landscape\"\n      ),\n    ]).then(([{ width, height }, unit, name, orientation]) => {\n      return this.l10n.get(\n        \"document_properties_page_size_dimension_\" +\n          (name ? \"name_\" : \"\") +\n          \"string\",\n        {\n          width: width.toLocaleString(),\n          height: height.toLocaleString(),\n          unit,\n          name,\n          orientation,\n        },\n        \"{{width}} × {{height}} {{unit}} (\" +\n          (name ? \"{{name}}, \" : \"\") +\n          \"{{orientation}})\"\n      );\n    });\n  }\n\n  /**\n   * @private\n   */\n  async _parseDate(inputDate) {\n    const dateObject = PDFDateString.toDateObject(inputDate);\n    if (!dateObject) {\n      return undefined;\n    }\n    return this.l10n.get(\n      \"document_properties_date_string\",\n      {\n        date: dateObject.toLocaleDateString(),\n        time: dateObject.toLocaleTimeString(),\n      },\n      \"{{date}}, {{time}}\"\n    );\n  }\n\n  /**\n   * @private\n   */\n  _parseLinearization(isLinearized) {\n    return this.l10n.get(\n      \"document_properties_linearized_\" + (isLinearized ? \"yes\" : \"no\"),\n      null,\n      isLinearized ? \"Yes\" : \"No\"\n    );\n  }\n}\n\nexport { PDFDocumentProperties };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FindState } from \"./pdf_find_controller.js\";\nimport { NullL10n } from \"./ui_utils.js\";\n\nconst MATCHES_COUNT_LIMIT = 1000;\n\n/**\n * Creates a \"search bar\" given a set of DOM elements that act as controls\n * for searching or for setting search preferences in the UI. This object\n * also sets up the appropriate events for the controls. Actual searching\n * is done by PDFFindController.\n */\nclass PDFFindBar {\n  constructor(options, eventBus, l10n = NullL10n) {\n    this.opened = false;\n\n    this.bar = options.bar || null;\n    this.toggleButton = options.toggleButton || null;\n    this.findField = options.findField || null;\n    this.highlightAll = options.highlightAllCheckbox || null;\n    this.caseSensitive = options.caseSensitiveCheckbox || null;\n    this.entireWord = options.entireWordCheckbox || null;\n    this.findMsg = options.findMsg || null;\n    this.findResultsCount = options.findResultsCount || null;\n    this.findPreviousButton = options.findPreviousButton || null;\n    this.findNextButton = options.findNextButton || null;\n    this.eventBus = eventBus;\n    this.l10n = l10n;\n\n    // Add event listeners to the DOM elements.\n    this.toggleButton.addEventListener(\"click\", () => {\n      this.toggle();\n    });\n\n    this.findField.addEventListener(\"input\", () => {\n      this.dispatchEvent(\"\");\n    });\n\n    this.bar.addEventListener(\"keydown\", e => {\n      switch (e.keyCode) {\n        case 13: // Enter\n          if (e.target === this.findField) {\n            this.dispatchEvent(\"again\", e.shiftKey);\n          }\n          break;\n        case 27: // Escape\n          this.close();\n          break;\n      }\n    });\n\n    this.findPreviousButton.addEventListener(\"click\", () => {\n      this.dispatchEvent(\"again\", true);\n    });\n\n    this.findNextButton.addEventListener(\"click\", () => {\n      this.dispatchEvent(\"again\", false);\n    });\n\n    this.highlightAll.addEventListener(\"click\", () => {\n      this.dispatchEvent(\"highlightallchange\");\n    });\n\n    this.caseSensitive.addEventListener(\"click\", () => {\n      this.dispatchEvent(\"casesensitivitychange\");\n    });\n\n    this.entireWord.addEventListener(\"click\", () => {\n      this.dispatchEvent(\"entirewordchange\");\n    });\n\n    this.eventBus._on(\"resize\", this._adjustWidth.bind(this));\n  }\n\n  reset() {\n    this.updateUIState();\n  }\n\n  dispatchEvent(type, findPrev) {\n    this.eventBus.dispatch(\"find\", {\n      source: this,\n      type,\n      query: this.findField.value,\n      phraseSearch: true,\n      caseSensitive: this.caseSensitive.checked,\n      entireWord: this.entireWord.checked,\n      highlightAll: this.highlightAll.checked,\n      findPrevious: findPrev,\n    });\n  }\n\n  updateUIState(state, previous, matchesCount) {\n    let findMsg = \"\";\n    let status = \"\";\n\n    switch (state) {\n      case FindState.FOUND:\n        break;\n\n      case FindState.PENDING:\n        status = \"pending\";\n        break;\n\n      case FindState.NOT_FOUND:\n        findMsg = this.l10n.get(\"find_not_found\", null, \"Phrase not found\");\n        status = \"notFound\";\n        break;\n\n      case FindState.WRAPPED:\n        if (previous) {\n          findMsg = this.l10n.get(\n            \"find_reached_top\",\n            null,\n            \"Reached top of document, continued from bottom\"\n          );\n        } else {\n          findMsg = this.l10n.get(\n            \"find_reached_bottom\",\n            null,\n            \"Reached end of document, continued from top\"\n          );\n        }\n        break;\n    }\n    this.findField.setAttribute(\"data-status\", status);\n\n    Promise.resolve(findMsg).then(msg => {\n      this.findMsg.textContent = msg;\n      this._adjustWidth();\n    });\n\n    this.updateResultsCount(matchesCount);\n  }\n\n  updateResultsCount({ current = 0, total = 0 } = {}) {\n    if (!this.findResultsCount) {\n      return; // No UI control is provided.\n    }\n    const limit = MATCHES_COUNT_LIMIT;\n    let matchesCountMsg = \"\";\n\n    if (total > 0) {\n      if (total > limit) {\n        if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n          // TODO: Remove this hard-coded `[other]` form once plural support has\n          // been implemented in the mozilla-central specific `l10n.js` file.\n          matchesCountMsg = this.l10n.get(\n            \"find_match_count_limit[other]\",\n            {\n              limit,\n            },\n            \"More than {{limit}} matches\"\n          );\n        } else {\n          matchesCountMsg = this.l10n.get(\n            \"find_match_count_limit\",\n            {\n              limit,\n            },\n            \"More than {{limit}} match\" + (limit !== 1 ? \"es\" : \"\")\n          );\n        }\n      } else {\n        if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n          // TODO: Remove this hard-coded `[other]` form once plural support has\n          // been implemented in the mozilla-central specific `l10n.js` file.\n          matchesCountMsg = this.l10n.get(\n            \"find_match_count[other]\",\n            {\n              current,\n              total,\n            },\n            \"{{current}} of {{total}} matches\"\n          );\n        } else {\n          matchesCountMsg = this.l10n.get(\n            \"find_match_count\",\n            {\n              current,\n              total,\n            },\n            \"{{current}} of {{total}} match\" + (total !== 1 ? \"es\" : \"\")\n          );\n        }\n      }\n    }\n    Promise.resolve(matchesCountMsg).then(msg => {\n      this.findResultsCount.textContent = msg;\n      this.findResultsCount.classList.toggle(\"hidden\", !total);\n      // Since `updateResultsCount` may be called from `PDFFindController`,\n      // ensure that the width of the findbar is always updated correctly.\n      this._adjustWidth();\n    });\n  }\n\n  open() {\n    if (!this.opened) {\n      this.opened = true;\n      this.toggleButton.classList.add(\"toggled\");\n      this.bar.classList.remove(\"hidden\");\n    }\n    this.findField.select();\n    this.findField.focus();\n\n    this._adjustWidth();\n  }\n\n  close() {\n    if (!this.opened) {\n      return;\n    }\n    this.opened = false;\n    this.toggleButton.classList.remove(\"toggled\");\n    this.bar.classList.add(\"hidden\");\n\n    this.eventBus.dispatch(\"findbarclose\", { source: this });\n  }\n\n  toggle() {\n    if (this.opened) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _adjustWidth() {\n    if (!this.opened) {\n      return;\n    }\n\n    // The find bar has an absolute position and thus the browser extends\n    // its width to the maximum possible width once the find bar does not fit\n    // entirely within the window anymore (and its elements are automatically\n    // wrapped). Here we detect and fix that.\n    this.bar.classList.remove(\"wrapContainers\");\n\n    const findbarHeight = this.bar.clientHeight;\n    const inputContainerHeight = this.bar.firstElementChild.clientHeight;\n\n    if (findbarHeight > inputContainerHeight) {\n      // The findbar is taller than the input container, which means that\n      // the browser wrapped some of the elements. For a consistent look,\n      // wrap all of them to adjust the width of the find bar.\n      this.bar.classList.add(\"wrapContainers\");\n    }\n  }\n}\n\nexport { PDFFindBar };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createPromiseCapability } from \"pdfjs-lib\";\nimport { getCharacterType } from \"./pdf_find_utils.js\";\nimport { scrollIntoView } from \"./ui_utils.js\";\n\nconst FindState = {\n  FOUND: 0,\n  NOT_FOUND: 1,\n  WRAPPED: 2,\n  PENDING: 3,\n};\n\nconst FIND_TIMEOUT = 250; // ms\nconst MATCH_SCROLL_OFFSET_TOP = -50; // px\nconst MATCH_SCROLL_OFFSET_LEFT = -400; // px\n\nconst CHARACTERS_TO_NORMALIZE = {\n  \"\\u2018\": \"'\", // Left single quotation mark\n  \"\\u2019\": \"'\", // Right single quotation mark\n  \"\\u201A\": \"'\", // Single low-9 quotation mark\n  \"\\u201B\": \"'\", // Single high-reversed-9 quotation mark\n  \"\\u201C\": '\"', // Left double quotation mark\n  \"\\u201D\": '\"', // Right double quotation mark\n  \"\\u201E\": '\"', // Double low-9 quotation mark\n  \"\\u201F\": '\"', // Double high-reversed-9 quotation mark\n  \"\\u00BC\": \"1/4\", // Vulgar fraction one quarter\n  \"\\u00BD\": \"1/2\", // Vulgar fraction one half\n  \"\\u00BE\": \"3/4\", // Vulgar fraction three quarters\n};\n\nlet normalizationRegex = null;\nfunction normalize(text) {\n  if (!normalizationRegex) {\n    // Compile the regular expression for text normalization once.\n    const replace = Object.keys(CHARACTERS_TO_NORMALIZE).join(\"\");\n    normalizationRegex = new RegExp(`[${replace}]`, \"g\");\n  }\n  return text.replace(normalizationRegex, function (ch) {\n    return CHARACTERS_TO_NORMALIZE[ch];\n  });\n}\n\n/**\n * @typedef {Object} PDFFindControllerOptions\n * @property {IPDFLinkService} linkService - The navigation/linking service.\n * @property {EventBus} eventBus - The application event bus.\n */\n\n/**\n * Provides search functionality to find a given string in a PDF document.\n */\nclass PDFFindController {\n  /**\n   * @param {PDFFindControllerOptions} options\n   */\n  constructor({ linkService, eventBus }) {\n    this._linkService = linkService;\n    this._eventBus = eventBus;\n\n    this._reset();\n    eventBus._on(\"findbarclose\", this._onFindBarClose.bind(this));\n  }\n\n  get highlightMatches() {\n    return this._highlightMatches;\n  }\n\n  get pageMatches() {\n    return this._pageMatches;\n  }\n\n  get pageMatchesLength() {\n    return this._pageMatchesLength;\n  }\n\n  get selected() {\n    return this._selected;\n  }\n\n  get state() {\n    return this._state;\n  }\n\n  /**\n   * Set a reference to the PDF document in order to search it.\n   * Note that searching is not possible if this method is not called.\n   *\n   * @param {PDFDocumentProxy} pdfDocument - The PDF document to search.\n   */\n  setDocument(pdfDocument) {\n    if (this._pdfDocument) {\n      this._reset();\n    }\n    if (!pdfDocument) {\n      return;\n    }\n    this._pdfDocument = pdfDocument;\n    this._firstPageCapability.resolve();\n  }\n\n  executeCommand(cmd, state) {\n    if (!state) {\n      return;\n    }\n    const pdfDocument = this._pdfDocument;\n\n    if (this._state === null || this._shouldDirtyMatch(cmd, state)) {\n      this._dirtyMatch = true;\n    }\n    this._state = state;\n    if (cmd !== \"findhighlightallchange\") {\n      this._updateUIState(FindState.PENDING);\n    }\n\n    this._firstPageCapability.promise.then(() => {\n      // If the document was closed before searching began, or if the search\n      // operation was relevant for a previously opened document, do nothing.\n      if (\n        !this._pdfDocument ||\n        (pdfDocument && this._pdfDocument !== pdfDocument)\n      ) {\n        return;\n      }\n      this._extractText();\n\n      const findbarClosed = !this._highlightMatches;\n      const pendingTimeout = !!this._findTimeout;\n\n      if (this._findTimeout) {\n        clearTimeout(this._findTimeout);\n        this._findTimeout = null;\n      }\n      if (cmd === \"find\") {\n        // Trigger the find action with a small delay to avoid starting the\n        // search when the user is still typing (saving resources).\n        this._findTimeout = setTimeout(() => {\n          this._nextMatch();\n          this._findTimeout = null;\n        }, FIND_TIMEOUT);\n      } else if (this._dirtyMatch) {\n        // Immediately trigger searching for non-'find' operations, when the\n        // current state needs to be reset and matches re-calculated.\n        this._nextMatch();\n      } else if (cmd === \"findagain\") {\n        this._nextMatch();\n\n        // When the findbar was previously closed, and `highlightAll` is set,\n        // ensure that the matches on all active pages are highlighted again.\n        if (findbarClosed && this._state.highlightAll) {\n          this._updateAllPages();\n        }\n      } else if (cmd === \"findhighlightallchange\") {\n        // If there was a pending search operation, synchronously trigger a new\n        // search *first* to ensure that the correct matches are highlighted.\n        if (pendingTimeout) {\n          this._nextMatch();\n        } else {\n          this._highlightMatches = true;\n        }\n        this._updateAllPages(); // Update the highlighting on all active pages.\n      } else {\n        this._nextMatch();\n      }\n    });\n  }\n\n  scrollMatchIntoView({ element = null, pageIndex = -1, matchIndex = -1 }) {\n    if (!this._scrollMatches || !element) {\n      return;\n    } else if (matchIndex === -1 || matchIndex !== this._selected.matchIdx) {\n      return;\n    } else if (pageIndex === -1 || pageIndex !== this._selected.pageIdx) {\n      return;\n    }\n    this._scrollMatches = false; // Ensure that scrolling only happens once.\n\n    const spot = {\n      top: MATCH_SCROLL_OFFSET_TOP,\n      left: MATCH_SCROLL_OFFSET_LEFT,\n    };\n    scrollIntoView(element, spot, /* skipOverflowHiddenElements = */ true);\n  }\n\n  _reset() {\n    this._highlightMatches = false;\n    this._scrollMatches = false;\n    this._pdfDocument = null;\n    this._pageMatches = [];\n    this._pageMatchesLength = [];\n    this._state = null;\n    // Currently selected match.\n    this._selected = {\n      pageIdx: -1,\n      matchIdx: -1,\n    };\n    // Where the find algorithm currently is in the document.\n    this._offset = {\n      pageIdx: null,\n      matchIdx: null,\n      wrapped: false,\n    };\n    this._extractTextPromises = [];\n    this._pageContents = []; // Stores the normalized text for each page.\n    this._matchesCountTotal = 0;\n    this._pagesToSearch = null;\n    this._pendingFindMatches = Object.create(null);\n    this._resumePageIdx = null;\n    this._dirtyMatch = false;\n    clearTimeout(this._findTimeout);\n    this._findTimeout = null;\n\n    this._firstPageCapability = createPromiseCapability();\n  }\n\n  /**\n   * @type {string} The (current) normalized search query.\n   */\n  get _query() {\n    if (this._state.query !== this._rawQuery) {\n      this._rawQuery = this._state.query;\n      this._normalizedQuery = normalize(this._state.query);\n    }\n    return this._normalizedQuery;\n  }\n\n  _shouldDirtyMatch(cmd, state) {\n    // When the search query changes, regardless of the actual search command\n    // used, always re-calculate matches to avoid errors (fixes bug 1030622).\n    if (state.query !== this._state.query) {\n      return true;\n    }\n    switch (cmd) {\n      case \"findagain\":\n        const pageNumber = this._selected.pageIdx + 1;\n        const linkService = this._linkService;\n        // Only treat a 'findagain' event as a new search operation when it's\n        // *absolutely* certain that the currently selected match is no longer\n        // visible, e.g. as a result of the user scrolling in the document.\n        //\n        // NOTE: If only a simple `this._linkService.page` check was used here,\n        // there's a risk that consecutive 'findagain' operations could \"skip\"\n        // over matches at the top/bottom of pages thus making them completely\n        // inaccessible when there's multiple pages visible in the viewer.\n        if (\n          pageNumber >= 1 &&\n          pageNumber <= linkService.pagesCount &&\n          pageNumber !== linkService.page &&\n          !linkService.isPageVisible(pageNumber)\n        ) {\n          return true;\n        }\n        return false;\n      case \"findhighlightallchange\":\n        return false;\n    }\n    return true;\n  }\n\n  /**\n   * Helper for multi-term search that fills the `matchesWithLength` array\n   * and handles cases where one search term includes another search term (for\n   * example, \"tamed tame\" or \"this is\"). It looks for intersecting terms in\n   * the `matches` and keeps elements with a longer match length.\n   */\n  _prepareMatches(matchesWithLength, matches, matchesLength) {\n    function isSubTerm(currentIndex) {\n      const currentElem = matchesWithLength[currentIndex];\n      const nextElem = matchesWithLength[currentIndex + 1];\n\n      // Check for cases like \"TAMEd TAME\".\n      if (\n        currentIndex < matchesWithLength.length - 1 &&\n        currentElem.match === nextElem.match\n      ) {\n        currentElem.skipped = true;\n        return true;\n      }\n\n      // Check for cases like \"thIS IS\".\n      for (let i = currentIndex - 1; i >= 0; i--) {\n        const prevElem = matchesWithLength[i];\n        if (prevElem.skipped) {\n          continue;\n        }\n        if (prevElem.match + prevElem.matchLength < currentElem.match) {\n          break;\n        }\n        if (\n          prevElem.match + prevElem.matchLength >=\n          currentElem.match + currentElem.matchLength\n        ) {\n          currentElem.skipped = true;\n          return true;\n        }\n      }\n      return false;\n    }\n\n    // Sort the array of `{ match: <match>, matchLength: <matchLength> }`\n    // objects on increasing index first and on the length otherwise.\n    matchesWithLength.sort(function (a, b) {\n      return a.match === b.match\n        ? a.matchLength - b.matchLength\n        : a.match - b.match;\n    });\n    for (let i = 0, len = matchesWithLength.length; i < len; i++) {\n      if (isSubTerm(i)) {\n        continue;\n      }\n      matches.push(matchesWithLength[i].match);\n      matchesLength.push(matchesWithLength[i].matchLength);\n    }\n  }\n\n  /**\n   * Determine if the search query constitutes a \"whole word\", by comparing the\n   * first/last character type with the preceding/following character type.\n   */\n  _isEntireWord(content, startIdx, length) {\n    if (startIdx > 0) {\n      const first = content.charCodeAt(startIdx);\n      const limit = content.charCodeAt(startIdx - 1);\n      if (getCharacterType(first) === getCharacterType(limit)) {\n        return false;\n      }\n    }\n    const endIdx = startIdx + length - 1;\n    if (endIdx < content.length - 1) {\n      const last = content.charCodeAt(endIdx);\n      const limit = content.charCodeAt(endIdx + 1);\n      if (getCharacterType(last) === getCharacterType(limit)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  _calculatePhraseMatch(query, pageIndex, pageContent, entireWord) {\n    const matches = [];\n    const queryLen = query.length;\n\n    let matchIdx = -queryLen;\n    while (true) {\n      matchIdx = pageContent.indexOf(query, matchIdx + queryLen);\n      if (matchIdx === -1) {\n        break;\n      }\n      if (entireWord && !this._isEntireWord(pageContent, matchIdx, queryLen)) {\n        continue;\n      }\n      matches.push(matchIdx);\n    }\n    this._pageMatches[pageIndex] = matches;\n  }\n\n  _calculateWordMatch(query, pageIndex, pageContent, entireWord) {\n    const matchesWithLength = [];\n\n    // Divide the query into pieces and search for text in each piece.\n    const queryArray = query.match(/\\S+/g);\n    for (let i = 0, len = queryArray.length; i < len; i++) {\n      const subquery = queryArray[i];\n      const subqueryLen = subquery.length;\n\n      let matchIdx = -subqueryLen;\n      while (true) {\n        matchIdx = pageContent.indexOf(subquery, matchIdx + subqueryLen);\n        if (matchIdx === -1) {\n          break;\n        }\n        if (\n          entireWord &&\n          !this._isEntireWord(pageContent, matchIdx, subqueryLen)\n        ) {\n          continue;\n        }\n        // Other searches do not, so we store the length.\n        matchesWithLength.push({\n          match: matchIdx,\n          matchLength: subqueryLen,\n          skipped: false,\n        });\n      }\n    }\n\n    // Prepare arrays for storing the matches.\n    this._pageMatchesLength[pageIndex] = [];\n    this._pageMatches[pageIndex] = [];\n\n    // Sort `matchesWithLength`, remove intersecting terms and put the result\n    // into the two arrays.\n    this._prepareMatches(\n      matchesWithLength,\n      this._pageMatches[pageIndex],\n      this._pageMatchesLength[pageIndex]\n    );\n  }\n\n  _calculateMatch(pageIndex) {\n    let pageContent = this._pageContents[pageIndex];\n    let query = this._query;\n    const { caseSensitive, entireWord, phraseSearch } = this._state;\n\n    if (query.length === 0) {\n      // Do nothing: the matches should be wiped out already.\n      return;\n    }\n\n    if (!caseSensitive) {\n      pageContent = pageContent.toLowerCase();\n      query = query.toLowerCase();\n    }\n\n    if (phraseSearch) {\n      this._calculatePhraseMatch(query, pageIndex, pageContent, entireWord);\n    } else {\n      this._calculateWordMatch(query, pageIndex, pageContent, entireWord);\n    }\n\n    // When `highlightAll` is set, ensure that the matches on previously\n    // rendered (and still active) pages are correctly highlighted.\n    if (this._state.highlightAll) {\n      this._updatePage(pageIndex);\n    }\n    if (this._resumePageIdx === pageIndex) {\n      this._resumePageIdx = null;\n      this._nextPageMatch();\n    }\n\n    // Update the match count.\n    const pageMatchesCount = this._pageMatches[pageIndex].length;\n    if (pageMatchesCount > 0) {\n      this._matchesCountTotal += pageMatchesCount;\n      this._updateUIResultsCount();\n    }\n  }\n\n  _extractText() {\n    // Perform text extraction once if this method is called multiple times.\n    if (this._extractTextPromises.length > 0) {\n      return;\n    }\n\n    let promise = Promise.resolve();\n    for (let i = 0, ii = this._linkService.pagesCount; i < ii; i++) {\n      const extractTextCapability = createPromiseCapability();\n      this._extractTextPromises[i] = extractTextCapability.promise;\n\n      promise = promise.then(() => {\n        return this._pdfDocument\n          .getPage(i + 1)\n          .then(pdfPage => {\n            return pdfPage.getTextContent({\n              normalizeWhitespace: true,\n            });\n          })\n          .then(\n            textContent => {\n              const textItems = textContent.items;\n              const strBuf = [];\n\n              for (let j = 0, jj = textItems.length; j < jj; j++) {\n                strBuf.push(textItems[j].str);\n              }\n\n              // Store the normalized page content (text items) as one string.\n              this._pageContents[i] = normalize(strBuf.join(\"\"));\n              extractTextCapability.resolve(i);\n            },\n            reason => {\n              console.error(\n                `Unable to get text content for page ${i + 1}`,\n                reason\n              );\n              // Page error -- assuming no text content.\n              this._pageContents[i] = \"\";\n              extractTextCapability.resolve(i);\n            }\n          );\n      });\n    }\n  }\n\n  _updatePage(index) {\n    if (this._scrollMatches && this._selected.pageIdx === index) {\n      // If the page is selected, scroll the page into view, which triggers\n      // rendering the page, which adds the text layer. Once the text layer\n      // is built, it will attempt to scroll the selected match into view.\n      this._linkService.page = index + 1;\n    }\n\n    this._eventBus.dispatch(\"updatetextlayermatches\", {\n      source: this,\n      pageIndex: index,\n    });\n  }\n\n  _updateAllPages() {\n    this._eventBus.dispatch(\"updatetextlayermatches\", {\n      source: this,\n      pageIndex: -1,\n    });\n  }\n\n  _nextMatch() {\n    const previous = this._state.findPrevious;\n    const currentPageIndex = this._linkService.page - 1;\n    const numPages = this._linkService.pagesCount;\n\n    this._highlightMatches = true;\n\n    if (this._dirtyMatch) {\n      // Need to recalculate the matches, reset everything.\n      this._dirtyMatch = false;\n      this._selected.pageIdx = this._selected.matchIdx = -1;\n      this._offset.pageIdx = currentPageIndex;\n      this._offset.matchIdx = null;\n      this._offset.wrapped = false;\n      this._resumePageIdx = null;\n      this._pageMatches.length = 0;\n      this._pageMatchesLength.length = 0;\n      this._matchesCountTotal = 0;\n\n      this._updateAllPages(); // Wipe out any previously highlighted matches.\n\n      for (let i = 0; i < numPages; i++) {\n        // Start finding the matches as soon as the text is extracted.\n        if (this._pendingFindMatches[i] === true) {\n          continue;\n        }\n        this._pendingFindMatches[i] = true;\n        this._extractTextPromises[i].then(pageIdx => {\n          delete this._pendingFindMatches[pageIdx];\n          this._calculateMatch(pageIdx);\n        });\n      }\n    }\n\n    // If there's no query there's no point in searching.\n    if (this._query === \"\") {\n      this._updateUIState(FindState.FOUND);\n      return;\n    }\n    // If we're waiting on a page, we return since we can't do anything else.\n    if (this._resumePageIdx) {\n      return;\n    }\n\n    const offset = this._offset;\n    // Keep track of how many pages we should maximally iterate through.\n    this._pagesToSearch = numPages;\n    // If there's already a `matchIdx` that means we are iterating through a\n    // page's matches.\n    if (offset.matchIdx !== null) {\n      const numPageMatches = this._pageMatches[offset.pageIdx].length;\n      if (\n        (!previous && offset.matchIdx + 1 < numPageMatches) ||\n        (previous && offset.matchIdx > 0)\n      ) {\n        // The simple case; we just have advance the matchIdx to select\n        // the next match on the page.\n        offset.matchIdx = previous ? offset.matchIdx - 1 : offset.matchIdx + 1;\n        this._updateMatch(/* found = */ true);\n        return;\n      }\n      // We went beyond the current page's matches, so we advance to\n      // the next page.\n      this._advanceOffsetPage(previous);\n    }\n    // Start searching through the page.\n    this._nextPageMatch();\n  }\n\n  _matchesReady(matches) {\n    const offset = this._offset;\n    const numMatches = matches.length;\n    const previous = this._state.findPrevious;\n\n    if (numMatches) {\n      // There were matches for the page, so initialize `matchIdx`.\n      offset.matchIdx = previous ? numMatches - 1 : 0;\n      this._updateMatch(/* found = */ true);\n      return true;\n    }\n    // No matches, so attempt to search the next page.\n    this._advanceOffsetPage(previous);\n    if (offset.wrapped) {\n      offset.matchIdx = null;\n      if (this._pagesToSearch < 0) {\n        // No point in wrapping again, there were no matches.\n        this._updateMatch(/* found = */ false);\n        // While matches were not found, searching for a page\n        // with matches should nevertheless halt.\n        return true;\n      }\n    }\n    // Matches were not found (and searching is not done).\n    return false;\n  }\n\n  _nextPageMatch() {\n    if (this._resumePageIdx !== null) {\n      console.error(\"There can only be one pending page.\");\n    }\n\n    let matches = null;\n    do {\n      const pageIdx = this._offset.pageIdx;\n      matches = this._pageMatches[pageIdx];\n      if (!matches) {\n        // The matches don't exist yet for processing by `_matchesReady`,\n        // so set a resume point for when they do exist.\n        this._resumePageIdx = pageIdx;\n        break;\n      }\n    } while (!this._matchesReady(matches));\n  }\n\n  _advanceOffsetPage(previous) {\n    const offset = this._offset;\n    const numPages = this._linkService.pagesCount;\n    offset.pageIdx = previous ? offset.pageIdx - 1 : offset.pageIdx + 1;\n    offset.matchIdx = null;\n\n    this._pagesToSearch--;\n\n    if (offset.pageIdx >= numPages || offset.pageIdx < 0) {\n      offset.pageIdx = previous ? numPages - 1 : 0;\n      offset.wrapped = true;\n    }\n  }\n\n  _updateMatch(found = false) {\n    let state = FindState.NOT_FOUND;\n    const wrapped = this._offset.wrapped;\n    this._offset.wrapped = false;\n\n    if (found) {\n      const previousPage = this._selected.pageIdx;\n      this._selected.pageIdx = this._offset.pageIdx;\n      this._selected.matchIdx = this._offset.matchIdx;\n      state = wrapped ? FindState.WRAPPED : FindState.FOUND;\n\n      // Update the currently selected page to wipe out any selected matches.\n      if (previousPage !== -1 && previousPage !== this._selected.pageIdx) {\n        this._updatePage(previousPage);\n      }\n    }\n\n    this._updateUIState(state, this._state.findPrevious);\n    if (this._selected.pageIdx !== -1) {\n      // Ensure that the match will be scrolled into view.\n      this._scrollMatches = true;\n\n      this._updatePage(this._selected.pageIdx);\n    }\n  }\n\n  _onFindBarClose(evt) {\n    const pdfDocument = this._pdfDocument;\n    // Since searching is asynchronous, ensure that the removal of highlighted\n    // matches (from the UI) is async too such that the 'updatetextlayermatches'\n    // events will always be dispatched in the expected order.\n    this._firstPageCapability.promise.then(() => {\n      // Only update the UI if the document is open, and is the current one.\n      if (\n        !this._pdfDocument ||\n        (pdfDocument && this._pdfDocument !== pdfDocument)\n      ) {\n        return;\n      }\n      // Ensure that a pending, not yet started, search operation is aborted.\n      if (this._findTimeout) {\n        clearTimeout(this._findTimeout);\n        this._findTimeout = null;\n      }\n      // Abort any long running searches, to avoid a match being scrolled into\n      // view *after* the findbar has been closed. In this case `this._offset`\n      // will most likely differ from `this._selected`, hence we also ensure\n      // that any new search operation will always start with a clean slate.\n      if (this._resumePageIdx) {\n        this._resumePageIdx = null;\n        this._dirtyMatch = true;\n      }\n      // Avoid the UI being in a pending state when the findbar is re-opened.\n      this._updateUIState(FindState.FOUND);\n\n      this._highlightMatches = false;\n      this._updateAllPages(); // Wipe out any previously highlighted matches.\n    });\n  }\n\n  _requestMatchesCount() {\n    const { pageIdx, matchIdx } = this._selected;\n    let current = 0,\n      total = this._matchesCountTotal;\n    if (matchIdx !== -1) {\n      for (let i = 0; i < pageIdx; i++) {\n        current += (this._pageMatches[i] && this._pageMatches[i].length) || 0;\n      }\n      current += matchIdx + 1;\n    }\n    // When searching starts, this method may be called before the `pageMatches`\n    // have been counted (in `_calculateMatch`). Ensure that the UI won't show\n    // temporarily broken state when the active find result doesn't make sense.\n    if (current < 1 || current > total) {\n      current = total = 0;\n    }\n    return { current, total };\n  }\n\n  _updateUIResultsCount() {\n    this._eventBus.dispatch(\"updatefindmatchescount\", {\n      source: this,\n      matchesCount: this._requestMatchesCount(),\n    });\n  }\n\n  _updateUIState(state, previous) {\n    this._eventBus.dispatch(\"updatefindcontrolstate\", {\n      source: this,\n      state,\n      previous,\n      matchesCount: this._requestMatchesCount(),\n      rawQuery: this._state ? this._state.query : null,\n    });\n  }\n}\n\nexport { FindState, PDFFindController };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst CharacterType = {\n  SPACE: 0,\n  ALPHA_LETTER: 1,\n  PUNCT: 2,\n  HAN_LETTER: 3,\n  KATAKANA_LETTER: 4,\n  HIRAGANA_LETTER: 5,\n  HALFWIDTH_KATAKANA_LETTER: 6,\n  THAI_LETTER: 7,\n};\n\nfunction isAlphabeticalScript(charCode) {\n  return charCode < 0x2e80;\n}\n\nfunction isAscii(charCode) {\n  return (charCode & 0xff80) === 0;\n}\n\nfunction isAsciiAlpha(charCode) {\n  return (\n    (charCode >= /* a = */ 0x61 && charCode <= /* z = */ 0x7a) ||\n    (charCode >= /* A = */ 0x41 && charCode <= /* Z = */ 0x5a)\n  );\n}\n\nfunction isAsciiDigit(charCode) {\n  return charCode >= /* 0 = */ 0x30 && charCode <= /* 9 = */ 0x39;\n}\n\nfunction isAsciiSpace(charCode) {\n  return (\n    charCode === /* SPACE = */ 0x20 ||\n    charCode === /* TAB = */ 0x09 ||\n    charCode === /* CR = */ 0x0d ||\n    charCode === /* LF = */ 0x0a\n  );\n}\n\nfunction isHan(charCode) {\n  return (\n    (charCode >= 0x3400 && charCode <= 0x9fff) ||\n    (charCode >= 0xf900 && charCode <= 0xfaff)\n  );\n}\n\nfunction isKatakana(charCode) {\n  return charCode >= 0x30a0 && charCode <= 0x30ff;\n}\n\nfunction isHiragana(charCode) {\n  return charCode >= 0x3040 && charCode <= 0x309f;\n}\n\nfunction isHalfwidthKatakana(charCode) {\n  return charCode >= 0xff60 && charCode <= 0xff9f;\n}\n\nfunction isThai(charCode) {\n  return (charCode & 0xff80) === 0x0e00;\n}\n\n/**\n * This function is based on the word-break detection implemented in:\n * https://hg.mozilla.org/mozilla-central/file/tip/intl/lwbrk/WordBreaker.cpp\n */\nfunction getCharacterType(charCode) {\n  if (isAlphabeticalScript(charCode)) {\n    if (isAscii(charCode)) {\n      if (isAsciiSpace(charCode)) {\n        return CharacterType.SPACE;\n      } else if (\n        isAsciiAlpha(charCode) ||\n        isAsciiDigit(charCode) ||\n        charCode === /* UNDERSCORE = */ 0x5f\n      ) {\n        return CharacterType.ALPHA_LETTER;\n      }\n      return CharacterType.PUNCT;\n    } else if (isThai(charCode)) {\n      return CharacterType.THAI_LETTER;\n    } else if (charCode === /* NBSP = */ 0xa0) {\n      return CharacterType.SPACE;\n    }\n    return CharacterType.ALPHA_LETTER;\n  }\n\n  if (isHan(charCode)) {\n    return CharacterType.HAN_LETTER;\n  } else if (isKatakana(charCode)) {\n    return CharacterType.KATAKANA_LETTER;\n  } else if (isHiragana(charCode)) {\n    return CharacterType.HIRAGANA_LETTER;\n  } else if (isHalfwidthKatakana(charCode)) {\n    return CharacterType.HALFWIDTH_KATAKANA_LETTER;\n  }\n  return CharacterType.ALPHA_LETTER;\n}\n\nexport { CharacterType, getCharacterType };\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  isValidRotation,\n  parseQueryString,\n  waitOnEventOrTimeout,\n} from \"./ui_utils.js\";\n\n// Heuristic value used when force-resetting `this._blockHashChange`.\nconst HASH_CHANGE_TIMEOUT = 1000; // milliseconds\n// Heuristic value used when adding the current position to the browser history.\nconst POSITION_UPDATED_THRESHOLD = 50;\n// Heuristic value used when adding a temporary position to the browser history.\nconst UPDATE_VIEWAREA_TIMEOUT = 1000; // milliseconds\n\n/**\n * @typedef {Object} PDFHistoryOptions\n * @property {IPDFLinkService} linkService - The navigation/linking service.\n * @property {EventBus} eventBus - The application event bus.\n */\n\n/**\n * @typedef {Object} InitializeParameters\n * @property {string} fingerprint - The PDF document's unique fingerprint.\n * @property {boolean} [resetHistory] - Reset the browsing history.\n * @property {boolean} [updateUrl] - Attempt to update the document URL, with\n *   the current hash, when pushing/replacing browser history entries.\n */\n\n/**\n * @typedef {Object} PushParameters\n * @property {string} [namedDest] - The named destination. If absent, a\n *   stringified version of `explicitDest` is used.\n * @property {Array} explicitDest - The explicit destination array.\n * @property {number} pageNumber - The page to which the destination points.\n */\n\nfunction getCurrentHash() {\n  return document.location.hash;\n}\n\nclass PDFHistory {\n  /**\n   * @param {PDFHistoryOptions} options\n   */\n  constructor({ linkService, eventBus }) {\n    this.linkService = linkService;\n    this.eventBus = eventBus;\n\n    this._initialized = false;\n    this._fingerprint = \"\";\n    this.reset();\n\n    this._boundEvents = null;\n    this._isViewerInPresentationMode = false;\n    // Ensure that we don't miss either a 'presentationmodechanged' or a\n    // 'pagesinit' event, by registering the listeners immediately.\n    this.eventBus._on(\"presentationmodechanged\", evt => {\n      this._isViewerInPresentationMode = evt.active || evt.switchInProgress;\n    });\n    this.eventBus._on(\"pagesinit\", () => {\n      this._isPagesLoaded = false;\n\n      const onPagesLoaded = evt => {\n        this.eventBus._off(\"pagesloaded\", onPagesLoaded);\n        this._isPagesLoaded = !!evt.pagesCount;\n      };\n      this.eventBus._on(\"pagesloaded\", onPagesLoaded);\n    });\n  }\n\n  /**\n   * Initialize the history for the PDF document, using either the current\n   * browser history entry or the document hash, whichever is present.\n   * @param {InitializeParameters} params\n   */\n  initialize({ fingerprint, resetHistory = false, updateUrl = false }) {\n    if (!fingerprint || typeof fingerprint !== \"string\") {\n      console.error(\n        'PDFHistory.initialize: The \"fingerprint\" must be a non-empty string.'\n      );\n      return;\n    }\n    // Ensure that any old state is always reset upon initialization.\n    if (this._initialized) {\n      this.reset();\n    }\n    const reInitialized =\n      this._fingerprint !== \"\" && this._fingerprint !== fingerprint;\n    this._fingerprint = fingerprint;\n    this._updateUrl = updateUrl === true;\n\n    this._initialized = true;\n    this._bindEvents();\n    const state = window.history.state;\n\n    this._popStateInProgress = false;\n    this._blockHashChange = 0;\n    this._currentHash = getCurrentHash();\n    this._numPositionUpdates = 0;\n\n    this._uid = this._maxUid = 0;\n    this._destination = null;\n    this._position = null;\n\n    if (!this._isValidState(state, /* checkReload = */ true) || resetHistory) {\n      const { hash, page, rotation } = this._parseCurrentHash(\n        /* checkNameddest = */ true\n      );\n\n      if (!hash || reInitialized || resetHistory) {\n        // Ensure that the browser history is reset on PDF document load.\n        this._pushOrReplaceState(null, /* forceReplace = */ true);\n        return;\n      }\n      // Ensure that the browser history is initialized correctly when\n      // the document hash is present on PDF document load.\n      this._pushOrReplaceState(\n        { hash, page, rotation },\n        /* forceReplace = */ true\n      );\n      return;\n    }\n\n    // The browser history contains a valid entry, ensure that the history is\n    // initialized correctly on PDF document load.\n    const destination = state.destination;\n    this._updateInternalState(\n      destination,\n      state.uid,\n      /* removeTemporary = */ true\n    );\n\n    if (destination.rotation !== undefined) {\n      this._initialRotation = destination.rotation;\n    }\n    if (destination.dest) {\n      this._initialBookmark = JSON.stringify(destination.dest);\n\n      // If the history is updated, e.g. through the user changing the hash,\n      // before the initial destination has become visible, then we do *not*\n      // want to potentially add `this._position` to the browser history.\n      this._destination.page = null;\n    } else if (destination.hash) {\n      this._initialBookmark = destination.hash;\n    } else if (destination.page) {\n      // Fallback case; shouldn't be necessary, but better safe than sorry.\n      this._initialBookmark = `page=${destination.page}`;\n    }\n  }\n\n  /**\n   * Reset the current `PDFHistory` instance, and consequently prevent any\n   * further updates and/or navigation of the browser history.\n   */\n  reset() {\n    if (this._initialized) {\n      this._pageHide(); // Simulate a 'pagehide' event when resetting.\n\n      this._initialized = false;\n      this._unbindEvents();\n    }\n    if (this._updateViewareaTimeout) {\n      clearTimeout(this._updateViewareaTimeout);\n      this._updateViewareaTimeout = null;\n    }\n    this._initialBookmark = null;\n    this._initialRotation = null;\n  }\n\n  /**\n   * Push an internal destination to the browser history.\n   * @param {PushParameters}\n   */\n  push({ namedDest = null, explicitDest, pageNumber }) {\n    if (!this._initialized) {\n      return;\n    }\n    if (namedDest && typeof namedDest !== \"string\") {\n      console.error(\n        \"PDFHistory.push: \" +\n          `\"${namedDest}\" is not a valid namedDest parameter.`\n      );\n      return;\n    } else if (!Array.isArray(explicitDest)) {\n      console.error(\n        \"PDFHistory.push: \" +\n          `\"${explicitDest}\" is not a valid explicitDest parameter.`\n      );\n      return;\n    } else if (\n      !(\n        Number.isInteger(pageNumber) &&\n        pageNumber > 0 &&\n        pageNumber <= this.linkService.pagesCount\n      )\n    ) {\n      // Allow an unset `pageNumber` if and only if the history is still empty;\n      // please refer to the `this._destination.page = null;` comment above.\n      if (pageNumber !== null || this._destination) {\n        console.error(\n          \"PDFHistory.push: \" +\n            `\"${pageNumber}\" is not a valid pageNumber parameter.`\n        );\n        return;\n      }\n    }\n\n    const hash = namedDest || JSON.stringify(explicitDest);\n    if (!hash) {\n      // The hash *should* never be undefined, but if that were to occur,\n      // avoid any possible issues by not updating the browser history.\n      return;\n    }\n\n    let forceReplace = false;\n    if (\n      this._destination &&\n      (isDestHashesEqual(this._destination.hash, hash) ||\n        isDestArraysEqual(this._destination.dest, explicitDest))\n    ) {\n      // When the new destination is identical to `this._destination`, and\n      // its `page` is undefined, replace the current browser history entry.\n      // NOTE: This can only occur if `this._destination` was set either:\n      //  - through the document hash being specified on load.\n      //  - through the user changing the hash of the document.\n      if (this._destination.page) {\n        return;\n      }\n      forceReplace = true;\n    }\n    if (this._popStateInProgress && !forceReplace) {\n      return;\n    }\n\n    this._pushOrReplaceState(\n      {\n        dest: explicitDest,\n        hash,\n        page: pageNumber,\n        rotation: this.linkService.rotation,\n      },\n      forceReplace\n    );\n\n    if (!this._popStateInProgress) {\n      // Prevent the browser history from updating while the new destination is\n      // being scrolled into view, to avoid potentially inconsistent state.\n      this._popStateInProgress = true;\n      // We defer the resetting of `this._popStateInProgress`, to account for\n      // e.g. zooming occuring when the new destination is being navigated to.\n      Promise.resolve().then(() => {\n        this._popStateInProgress = false;\n      });\n    }\n  }\n\n  /**\n   * Push a page to the browser history; generally the `push` method should be\n   * used instead.\n   * @param {number} pageNumber\n   */\n  pushPage(pageNumber) {\n    if (!this._initialized) {\n      return;\n    }\n    if (\n      !(\n        Number.isInteger(pageNumber) &&\n        pageNumber > 0 &&\n        pageNumber <= this.linkService.pagesCount\n      )\n    ) {\n      console.error(\n        `PDFHistory.pushPage: \"${pageNumber}\" is not a valid page number.`\n      );\n      return;\n    }\n\n    if (this._destination?.page === pageNumber) {\n      // When the new page is identical to the one in `this._destination`, we\n      // don't want to add a potential duplicate entry in the browser history.\n      return;\n    }\n    if (this._popStateInProgress) {\n      return;\n    }\n\n    this._pushOrReplaceState({\n      hash: `page=${pageNumber}`,\n      page: pageNumber,\n      rotation: this.linkService.rotation,\n    });\n\n    if (!this._popStateInProgress) {\n      // Prevent the browser history from updating while the new page is\n      // being scrolled into view, to avoid potentially inconsistent state.\n      this._popStateInProgress = true;\n      // We defer the resetting of `this._popStateInProgress`, to account for\n      // e.g. zooming occuring when the new page is being navigated to.\n      Promise.resolve().then(() => {\n        this._popStateInProgress = false;\n      });\n    }\n  }\n\n  /**\n   * Push the current position to the browser history.\n   */\n  pushCurrentPosition() {\n    if (!this._initialized || this._popStateInProgress) {\n      return;\n    }\n    this._tryPushCurrentPosition();\n  }\n\n  /**\n   * Go back one step in the browser history.\n   * NOTE: Avoids navigating away from the document, useful for \"named actions\".\n   */\n  back() {\n    if (!this._initialized || this._popStateInProgress) {\n      return;\n    }\n    const state = window.history.state;\n    if (this._isValidState(state) && state.uid > 0) {\n      window.history.back();\n    }\n  }\n\n  /**\n   * Go forward one step in the browser history.\n   * NOTE: Avoids navigating away from the document, useful for \"named actions\".\n   */\n  forward() {\n    if (!this._initialized || this._popStateInProgress) {\n      return;\n    }\n    const state = window.history.state;\n    if (this._isValidState(state) && state.uid < this._maxUid) {\n      window.history.forward();\n    }\n  }\n\n  /**\n   * @type {boolean} Indicating if the user is currently moving through the\n   *   browser history, useful e.g. for skipping the next 'hashchange' event.\n   */\n  get popStateInProgress() {\n    return (\n      this._initialized &&\n      (this._popStateInProgress || this._blockHashChange > 0)\n    );\n  }\n\n  get initialBookmark() {\n    return this._initialized ? this._initialBookmark : null;\n  }\n\n  get initialRotation() {\n    return this._initialized ? this._initialRotation : null;\n  }\n\n  /**\n   * @private\n   */\n  _pushOrReplaceState(destination, forceReplace = false) {\n    const shouldReplace = forceReplace || !this._destination;\n    const newState = {\n      fingerprint: this._fingerprint,\n      uid: shouldReplace ? this._uid : this._uid + 1,\n      destination,\n    };\n\n    if (\n      typeof PDFJSDev !== \"undefined\" &&\n      PDFJSDev.test(\"CHROME\") &&\n      window.history.state?.chromecomState\n    ) {\n      // history.state.chromecomState is managed by chromecom.js.\n      newState.chromecomState = window.history.state.chromecomState;\n    }\n    this._updateInternalState(destination, newState.uid);\n\n    let newUrl;\n    if (this._updateUrl && destination?.hash) {\n      const baseUrl = document.location.href.split(\"#\")[0];\n      // Prevent errors in Firefox.\n      if (!baseUrl.startsWith(\"file://\")) {\n        newUrl = `${baseUrl}#${destination.hash}`;\n      }\n    }\n    if (shouldReplace) {\n      window.history.replaceState(newState, \"\", newUrl);\n    } else {\n      window.history.pushState(newState, \"\", newUrl);\n    }\n\n    if (\n      typeof PDFJSDev !== \"undefined\" &&\n      PDFJSDev.test(\"CHROME\") &&\n      top === window\n    ) {\n      // eslint-disable-next-line no-undef\n      chrome.runtime.sendMessage(\"showPageAction\");\n    }\n  }\n\n  /**\n   * @private\n   */\n  _tryPushCurrentPosition(temporary = false) {\n    if (!this._position) {\n      return;\n    }\n    let position = this._position;\n    if (temporary) {\n      position = Object.assign(Object.create(null), this._position);\n      position.temporary = true;\n    }\n\n    if (!this._destination) {\n      this._pushOrReplaceState(position);\n      return;\n    }\n    if (this._destination.temporary) {\n      // Always replace a previous *temporary* position.\n      this._pushOrReplaceState(position, /* forceReplace = */ true);\n      return;\n    }\n    if (this._destination.hash === position.hash) {\n      return; // The current document position has not changed.\n    }\n    if (\n      !this._destination.page &&\n      (POSITION_UPDATED_THRESHOLD <= 0 ||\n        this._numPositionUpdates <= POSITION_UPDATED_THRESHOLD)\n    ) {\n      // `this._destination` was set through the user changing the hash of\n      // the document. Do not add `this._position` to the browser history,\n      // to avoid \"flooding\" it with lots of (nearly) identical entries,\n      // since we cannot ensure that the document position has changed.\n      return;\n    }\n\n    let forceReplace = false;\n    if (\n      this._destination.page >= position.first &&\n      this._destination.page <= position.page\n    ) {\n      // When the `page` of `this._destination` is still visible, do not\n      // update the browsing history when `this._destination` either:\n      //  - contains an internal destination, since in this case we\n      //    cannot ensure that the document position has actually changed.\n      //  - was set through the user changing the hash of the document.\n      if (this._destination.dest || !this._destination.first) {\n        return;\n      }\n      // To avoid \"flooding\" the browser history, replace the current entry.\n      forceReplace = true;\n    }\n    this._pushOrReplaceState(position, forceReplace);\n  }\n\n  /**\n   * @private\n   */\n  _isValidState(state, checkReload = false) {\n    if (!state) {\n      return false;\n    }\n    if (state.fingerprint !== this._fingerprint) {\n      if (checkReload) {\n        // Potentially accept the history entry, even if the fingerprints don't\n        // match, when the viewer was reloaded (see issue 6847).\n        if (\n          typeof state.fingerprint !== \"string\" ||\n          state.fingerprint.length !== this._fingerprint.length\n        ) {\n          return false;\n        }\n        const [perfEntry] = performance.getEntriesByType(\"navigation\");\n        if (perfEntry?.type !== \"reload\") {\n          return false;\n        }\n      } else {\n        // This should only occur in viewers with support for opening more than\n        // one PDF document, e.g. the GENERIC viewer.\n        return false;\n      }\n    }\n    if (!Number.isInteger(state.uid) || state.uid < 0) {\n      return false;\n    }\n    if (state.destination === null || typeof state.destination !== \"object\") {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  _updateInternalState(destination, uid, removeTemporary = false) {\n    if (this._updateViewareaTimeout) {\n      // When updating `this._destination`, make sure that we always wait for\n      // the next 'updateviewarea' event before (potentially) attempting to\n      // push the current position to the browser history.\n      clearTimeout(this._updateViewareaTimeout);\n      this._updateViewareaTimeout = null;\n    }\n    if (removeTemporary && destination?.temporary) {\n      // When the `destination` comes from the browser history,\n      // we no longer treat it as a *temporary* position.\n      delete destination.temporary;\n    }\n    this._destination = destination;\n    this._uid = uid;\n    this._maxUid = Math.max(this._maxUid, uid);\n    // This should always be reset when `this._destination` is updated.\n    this._numPositionUpdates = 0;\n  }\n\n  /**\n   * @private\n   */\n  _parseCurrentHash(checkNameddest = false) {\n    const hash = unescape(getCurrentHash()).substring(1);\n    const params = parseQueryString(hash);\n\n    const nameddest = params.nameddest || \"\";\n    let page = params.page | 0;\n\n    if (\n      !(\n        Number.isInteger(page) &&\n        page > 0 &&\n        page <= this.linkService.pagesCount\n      ) ||\n      (checkNameddest && nameddest.length > 0)\n    ) {\n      page = null;\n    }\n    return { hash, page, rotation: this.linkService.rotation };\n  }\n\n  /**\n   * @private\n   */\n  _updateViewarea({ location }) {\n    if (this._updateViewareaTimeout) {\n      clearTimeout(this._updateViewareaTimeout);\n      this._updateViewareaTimeout = null;\n    }\n\n    this._position = {\n      hash: this._isViewerInPresentationMode\n        ? `page=${location.pageNumber}`\n        : location.pdfOpenParams.substring(1),\n      page: this.linkService.page,\n      first: location.pageNumber,\n      rotation: location.rotation,\n    };\n\n    if (this._popStateInProgress) {\n      return;\n    }\n\n    if (\n      POSITION_UPDATED_THRESHOLD > 0 &&\n      this._isPagesLoaded &&\n      this._destination &&\n      !this._destination.page\n    ) {\n      // If the current destination was set through the user changing the hash\n      // of the document, we will usually not try to push the current position\n      // to the browser history; see `this._tryPushCurrentPosition()`.\n      //\n      // To prevent `this._tryPushCurrentPosition()` from effectively being\n      // reduced to a no-op in this case, we will assume that the position\n      // *did* in fact change if the 'updateviewarea' event was dispatched\n      // more than `POSITION_UPDATED_THRESHOLD` times.\n      this._numPositionUpdates++;\n    }\n\n    if (UPDATE_VIEWAREA_TIMEOUT > 0) {\n      // When closing the browser, a 'pagehide' event will be dispatched which\n      // *should* allow us to push the current position to the browser history.\n      // In practice, it seems that the event is arriving too late in order for\n      // the session history to be successfully updated.\n      // (For additional details, please refer to the discussion in\n      //  https://bugzilla.mozilla.org/show_bug.cgi?id=1153393.)\n      //\n      // To workaround this we attempt to *temporarily* add the current position\n      // to the browser history only when the viewer is *idle*,\n      // i.e. when scrolling and/or zooming does not occur.\n      //\n      // PLEASE NOTE: It's absolutely imperative that the browser history is\n      // *not* updated too often, since that would render the viewer more or\n      // less unusable. Hence the use of a timeout to delay the update until\n      // the viewer has been idle for `UPDATE_VIEWAREA_TIMEOUT` milliseconds.\n      this._updateViewareaTimeout = setTimeout(() => {\n        if (!this._popStateInProgress) {\n          this._tryPushCurrentPosition(/* temporary = */ true);\n        }\n        this._updateViewareaTimeout = null;\n      }, UPDATE_VIEWAREA_TIMEOUT);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _popState({ state }) {\n    const newHash = getCurrentHash(),\n      hashChanged = this._currentHash !== newHash;\n    this._currentHash = newHash;\n\n    if (\n      (typeof PDFJSDev !== \"undefined\" &&\n        PDFJSDev.test(\"CHROME\") &&\n        state?.chromecomState &&\n        !this._isValidState(state)) ||\n      !state\n    ) {\n      // This case corresponds to the user changing the hash of the document.\n      this._uid++;\n\n      const { hash, page, rotation } = this._parseCurrentHash();\n      this._pushOrReplaceState(\n        { hash, page, rotation },\n        /* forceReplace = */ true\n      );\n      return;\n    }\n    if (!this._isValidState(state)) {\n      // This should only occur in viewers with support for opening more than\n      // one PDF document, e.g. the GENERIC viewer.\n      return;\n    }\n\n    // Prevent the browser history from updating until the new destination,\n    // as stored in the browser history, has been scrolled into view.\n    this._popStateInProgress = true;\n\n    if (hashChanged) {\n      // When the hash changed, implying that the 'popstate' event will be\n      // followed by a 'hashchange' event, then we do *not* want to update the\n      // browser history when handling the 'hashchange' event (in web/app.js)\n      // since that would *overwrite* the new destination navigated to below.\n      //\n      // To avoid accidentally disabling all future user-initiated hash changes,\n      // if there's e.g. another 'hashchange' listener that stops the event\n      // propagation, we make sure to always force-reset `this._blockHashChange`\n      // after `HASH_CHANGE_TIMEOUT` milliseconds have passed.\n      this._blockHashChange++;\n      waitOnEventOrTimeout({\n        target: window,\n        name: \"hashchange\",\n        delay: HASH_CHANGE_TIMEOUT,\n      }).then(() => {\n        this._blockHashChange--;\n      });\n    }\n\n    // Navigate to the new destination.\n    const destination = state.destination;\n    this._updateInternalState(\n      destination,\n      state.uid,\n      /* removeTemporary = */ true\n    );\n\n    if (isValidRotation(destination.rotation)) {\n      this.linkService.rotation = destination.rotation;\n    }\n    if (destination.dest) {\n      this.linkService.goToDestination(destination.dest);\n    } else if (destination.hash) {\n      this.linkService.setHash(destination.hash);\n    } else if (destination.page) {\n      // Fallback case; shouldn't be necessary, but better safe than sorry.\n      this.linkService.page = destination.page;\n    }\n\n    // Since `PDFLinkService.goToDestination` is asynchronous, we thus defer the\n    // resetting of `this._popStateInProgress` slightly.\n    Promise.resolve().then(() => {\n      this._popStateInProgress = false;\n    });\n  }\n\n  /**\n   * @private\n   */\n  _pageHide() {\n    // Attempt to push the `this._position` into the browser history when\n    // navigating away from the document. This is *only* done if the history\n    // is empty/temporary, since otherwise an existing browser history entry\n    // will end up being overwritten (given that new entries cannot be pushed\n    // into the browser history when the 'unload' event has already fired).\n    if (!this._destination || this._destination.temporary) {\n      this._tryPushCurrentPosition();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _bindEvents() {\n    if (this._boundEvents) {\n      return; // The event listeners were already added.\n    }\n    this._boundEvents = {\n      updateViewarea: this._updateViewarea.bind(this),\n      popState: this._popState.bind(this),\n      pageHide: this._pageHide.bind(this),\n    };\n\n    this.eventBus._on(\"updateviewarea\", this._boundEvents.updateViewarea);\n    window.addEventListener(\"popstate\", this._boundEvents.popState);\n    window.addEventListener(\"pagehide\", this._boundEvents.pageHide);\n  }\n\n  /**\n   * @private\n   */\n  _unbindEvents() {\n    if (!this._boundEvents) {\n      return; // The event listeners were already removed.\n    }\n    this.eventBus._off(\"updateviewarea\", this._boundEvents.updateViewarea);\n    window.removeEventListener(\"popstate\", this._boundEvents.popState);\n    window.removeEventListener(\"pagehide\", this._boundEvents.pageHide);\n\n    this._boundEvents = null;\n  }\n}\n\nfunction isDestHashesEqual(destHash, pushHash) {\n  if (typeof destHash !== \"string\" || typeof pushHash !== \"string\") {\n    return false;\n  }\n  if (destHash === pushHash) {\n    return true;\n  }\n  const { nameddest } = parseQueryString(destHash);\n  if (nameddest === pushHash) {\n    return true;\n  }\n  return false;\n}\n\nfunction isDestArraysEqual(firstDest, secondDest) {\n  function isEntryEqual(first, second) {\n    if (typeof first !== typeof second) {\n      return false;\n    }\n    if (Array.isArray(first) || Array.isArray(second)) {\n      return false;\n    }\n    if (first !== null && typeof first === \"object\" && second !== null) {\n      if (Object.keys(first).length !== Object.keys(second).length) {\n        return false;\n      }\n      for (const key in first) {\n        if (!isEntryEqual(first[key], second[key])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    return first === second || (Number.isNaN(first) && Number.isNaN(second));\n  }\n\n  if (!(Array.isArray(firstDest) && Array.isArray(secondDest))) {\n    return false;\n  }\n  if (firstDest.length !== secondDest.length) {\n    return false;\n  }\n  for (let i = 0, ii = firstDest.length; i < ii; i++) {\n    if (!isEntryEqual(firstDest[i], secondDest[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport { PDFHistory, isDestHashesEqual, isDestArraysEqual };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BaseTreeViewer } from \"./base_tree_viewer.js\";\n\n/**\n * @typedef {Object} PDFLayerViewerOptions\n * @property {HTMLDivElement} container - The viewer element.\n * @property {EventBus} eventBus - The application event bus.\n * @property {IL10n} l10n - Localization service.\n */\n\n/**\n * @typedef {Object} PDFLayerViewerRenderParameters\n * @property {OptionalContentConfig|null} optionalContentConfig - An\n *   {OptionalContentConfig} instance.\n * @property {PDFDocument} pdfDocument - A {PDFDocument} instance.\n */\n\nclass PDFLayerViewer extends BaseTreeViewer {\n  constructor(options) {\n    super(options);\n    this.l10n = options.l10n;\n\n    this.eventBus._on(\"resetlayers\", this._resetLayers.bind(this));\n    this.eventBus._on(\"togglelayerstree\", this._toggleAllTreeItems.bind(this));\n  }\n\n  reset() {\n    super.reset();\n    this._optionalContentConfig = null;\n    this._pdfDocument = null;\n  }\n\n  /**\n   * @private\n   */\n  _dispatchEvent(layersCount) {\n    this.eventBus.dispatch(\"layersloaded\", {\n      source: this,\n      layersCount,\n    });\n  }\n\n  /**\n   * @private\n   */\n  _bindLink(element, { groupId, input }) {\n    const setVisibility = () => {\n      this._optionalContentConfig.setVisibility(groupId, input.checked);\n\n      this.eventBus.dispatch(\"optionalcontentconfig\", {\n        source: this,\n        promise: Promise.resolve(this._optionalContentConfig),\n      });\n    };\n\n    element.onclick = evt => {\n      if (evt.target === input) {\n        setVisibility();\n        return true;\n      } else if (evt.target !== element) {\n        return true; // The target is the \"label\", which is handled above.\n      }\n      input.checked = !input.checked;\n      setVisibility();\n      return false;\n    };\n  }\n\n  /**\n   * @private\n   */\n  async _setNestedName(element, { name = null }) {\n    if (typeof name === \"string\") {\n      element.textContent = this._normalizeTextContent(name);\n      return;\n    }\n    element.textContent = await this.l10n.get(\n      \"additional_layers\",\n      null,\n      \"Additional Layers\"\n    );\n    element.style.fontStyle = \"italic\";\n  }\n\n  /**\n   * @private\n   */\n  _addToggleButton(div, { name = null }) {\n    super._addToggleButton(div, /* hidden = */ name === null);\n  }\n\n  /**\n   * @private\n   */\n  _toggleAllTreeItems() {\n    if (!this._optionalContentConfig) {\n      return;\n    }\n    super._toggleAllTreeItems();\n  }\n\n  /**\n   * @param {PDFLayerViewerRenderParameters} params\n   */\n  render({ optionalContentConfig, pdfDocument }) {\n    if (this._optionalContentConfig) {\n      this.reset();\n    }\n    this._optionalContentConfig = optionalContentConfig || null;\n    this._pdfDocument = pdfDocument || null;\n\n    const groups = optionalContentConfig && optionalContentConfig.getOrder();\n    if (!groups) {\n      this._dispatchEvent(/* layersCount = */ 0);\n      return;\n    }\n\n    const fragment = document.createDocumentFragment(),\n      queue = [{ parent: fragment, groups }];\n    let layersCount = 0,\n      hasAnyNesting = false;\n    while (queue.length > 0) {\n      const levelData = queue.shift();\n      for (const groupId of levelData.groups) {\n        const div = document.createElement(\"div\");\n        div.className = \"treeItem\";\n\n        const element = document.createElement(\"a\");\n        div.appendChild(element);\n\n        if (typeof groupId === \"object\") {\n          hasAnyNesting = true;\n          this._addToggleButton(div, groupId);\n          this._setNestedName(element, groupId);\n\n          const itemsDiv = document.createElement(\"div\");\n          itemsDiv.className = \"treeItems\";\n          div.appendChild(itemsDiv);\n\n          queue.push({ parent: itemsDiv, groups: groupId.order });\n        } else {\n          const group = optionalContentConfig.getGroup(groupId);\n\n          const input = document.createElement(\"input\");\n          this._bindLink(element, { groupId, input });\n          input.type = \"checkbox\";\n          input.id = groupId;\n          input.checked = group.visible;\n\n          const label = document.createElement(\"label\");\n          label.setAttribute(\"for\", groupId);\n          label.textContent = this._normalizeTextContent(group.name);\n\n          element.appendChild(input);\n          element.appendChild(label);\n\n          layersCount++;\n        }\n\n        levelData.parent.appendChild(div);\n      }\n    }\n    if (hasAnyNesting) {\n      this.container.classList.add(\"treeWithDeepNesting\");\n\n      this._lastToggleIsShow =\n        fragment.querySelectorAll(\".treeItemsHidden\").length === 0;\n    }\n\n    this.container.appendChild(fragment);\n\n    this._dispatchEvent(layersCount);\n  }\n\n  /**\n   * @private\n   */\n  async _resetLayers() {\n    if (!this._optionalContentConfig) {\n      return;\n    }\n    // Fetch the default optional content configuration...\n    const optionalContentConfig = await this._pdfDocument.getOptionalContentConfig();\n\n    this.eventBus.dispatch(\"optionalcontentconfig\", {\n      source: this,\n      promise: Promise.resolve(optionalContentConfig),\n    });\n\n    // ... and reset the sidebarView to the default state.\n    this.render({\n      optionalContentConfig,\n      pdfDocument: this._pdfDocument,\n    });\n  }\n}\n\nexport { PDFLayerViewer };\n","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { parseQueryString } from \"./ui_utils.js\";\n\n/**\n * @typedef {Object} PDFLinkServiceOptions\n * @property {EventBus} eventBus - The application event bus.\n * @property {number} [externalLinkTarget] - Specifies the `target` attribute\n *   for external links. Must use one of the values from {LinkTarget}.\n *   Defaults to using no target.\n * @property {string} [externalLinkRel] - Specifies the `rel` attribute for\n *   external links. Defaults to stripping the referrer.\n * @property {boolean} [ignoreDestinationZoom] - Ignores the zoom argument,\n *   thus preserving the current zoom level in the viewer, when navigating\n *   to internal destinations. The default value is `false`.\n */\n\n/**\n * Performs navigation functions inside PDF, such as opening specified page,\n * or destination.\n * @implements {IPDFLinkService}\n */\nclass PDFLinkService {\n  /**\n   * @param {PDFLinkServiceOptions} options\n   */\n  constructor({\n    eventBus,\n    externalLinkTarget = null,\n    externalLinkRel = null,\n    externalLinkEnabled = true,\n    ignoreDestinationZoom = false,\n  } = {}) {\n    this.eventBus = eventBus;\n    this.externalLinkTarget = externalLinkTarget;\n    this.externalLinkRel = externalLinkRel;\n    this.externalLinkEnabled = externalLinkEnabled;\n    this._ignoreDestinationZoom = ignoreDestinationZoom;\n\n    this.baseUrl = null;\n    this.pdfDocument = null;\n    this.pdfViewer = null;\n    this.pdfHistory = null;\n\n    this._pagesRefCache = null;\n  }\n\n  setDocument(pdfDocument, baseUrl = null) {\n    this.baseUrl = baseUrl;\n    this.pdfDocument = pdfDocument;\n    this._pagesRefCache = Object.create(null);\n  }\n\n  setViewer(pdfViewer) {\n    this.pdfViewer = pdfViewer;\n  }\n\n  setHistory(pdfHistory) {\n    this.pdfHistory = pdfHistory;\n  }\n\n  /**\n   * @type {number}\n   */\n  get pagesCount() {\n    return this.pdfDocument ? this.pdfDocument.numPages : 0;\n  }\n\n  /**\n   * @type {number}\n   */\n  get page() {\n    return this.pdfViewer.currentPageNumber;\n  }\n\n  /**\n   * @param {number} value\n   */\n  set page(value) {\n    this.pdfViewer.currentPageNumber = value;\n  }\n\n  /**\n   * @type {number}\n   */\n  get rotation() {\n    return this.pdfViewer.pagesRotation;\n  }\n\n  /**\n   * @param {number} value\n   */\n  set rotation(value) {\n    this.pdfViewer.pagesRotation = value;\n  }\n\n  /**\n   * @deprecated\n   */\n  navigateTo(dest) {\n    console.error(\n      \"Deprecated method: `navigateTo`, use `goToDestination` instead.\"\n    );\n    this.goToDestination(dest);\n  }\n\n  /**\n   * @private\n   */\n  _goToDestinationHelper(rawDest, namedDest = null, explicitDest) {\n    // Dest array looks like that: <page-ref> </XYZ|/FitXXX> <args..>\n    const destRef = explicitDest[0];\n    let pageNumber;\n\n    if (destRef instanceof Object) {\n      pageNumber = this._cachedPageNumber(destRef);\n\n      if (pageNumber === null) {\n        // Fetch the page reference if it's not yet available. This could\n        // only occur during loading, before all pages have been resolved.\n        this.pdfDocument\n          .getPageIndex(destRef)\n          .then(pageIndex => {\n            this.cachePageRef(pageIndex + 1, destRef);\n            this._goToDestinationHelper(rawDest, namedDest, explicitDest);\n          })\n          .catch(() => {\n            console.error(\n              `PDFLinkService._goToDestinationHelper: \"${destRef}\" is not ` +\n                `a valid page reference, for dest=\"${rawDest}\".`\n            );\n          });\n        return;\n      }\n    } else if (Number.isInteger(destRef)) {\n      pageNumber = destRef + 1;\n    } else {\n      console.error(\n        `PDFLinkService._goToDestinationHelper: \"${destRef}\" is not ` +\n          `a valid destination reference, for dest=\"${rawDest}\".`\n      );\n      return;\n    }\n    if (!pageNumber || pageNumber < 1 || pageNumber > this.pagesCount) {\n      console.error(\n        `PDFLinkService._goToDestinationHelper: \"${pageNumber}\" is not ` +\n          `a valid page number, for dest=\"${rawDest}\".`\n      );\n      return;\n    }\n\n    if (this.pdfHistory) {\n      // Update the browser history before scrolling the new destination into\n      // view, to be able to accurately capture the current document position.\n      this.pdfHistory.pushCurrentPosition();\n      this.pdfHistory.push({ namedDest, explicitDest, pageNumber });\n    }\n\n    this.pdfViewer.scrollPageIntoView({\n      pageNumber,\n      destArray: explicitDest,\n      ignoreDestinationZoom: this._ignoreDestinationZoom,\n    });\n  }\n\n  /**\n   * This method will, when available, also update the browser history.\n   *\n   * @param {string|Array} dest - The named, or explicit, PDF destination.\n   */\n  async goToDestination(dest) {\n    if (!this.pdfDocument) {\n      return;\n    }\n    let namedDest, explicitDest;\n    if (typeof dest === \"string\") {\n      namedDest = dest;\n      explicitDest = await this.pdfDocument.getDestination(dest);\n    } else {\n      namedDest = null;\n      explicitDest = await dest;\n    }\n    if (!Array.isArray(explicitDest)) {\n      console.error(\n        `PDFLinkService.goToDestination: \"${explicitDest}\" is not ` +\n          `a valid destination array, for dest=\"${dest}\".`\n      );\n      return;\n    }\n    this._goToDestinationHelper(dest, namedDest, explicitDest);\n  }\n\n  /**\n   * This method will, when available, also update the browser history.\n   *\n   * @param {number|string} val - The page number, or page label.\n   */\n  goToPage(val) {\n    if (!this.pdfDocument) {\n      return;\n    }\n    const pageNumber =\n      (typeof val === \"string\" && this.pdfViewer.pageLabelToPageNumber(val)) ||\n      val | 0;\n    if (\n      !(\n        Number.isInteger(pageNumber) &&\n        pageNumber > 0 &&\n        pageNumber <= this.pagesCount\n      )\n    ) {\n      console.error(`PDFLinkService.goToPage: \"${val}\" is not a valid page.`);\n      return;\n    }\n\n    if (this.pdfHistory) {\n      // Update the browser history before scrolling the new page into view,\n      // to be able to accurately capture the current document position.\n      this.pdfHistory.pushCurrentPosition();\n      this.pdfHistory.pushPage(pageNumber);\n    }\n\n    this.pdfViewer.scrollPageIntoView({ pageNumber });\n  }\n\n  /**\n   * @param {string|Array} dest - The PDF destination object.\n   * @returns {string} The hyperlink to the PDF object.\n   */\n  getDestinationHash(dest) {\n    if (typeof dest === \"string\") {\n      if (dest.length > 0) {\n        return this.getAnchorUrl(\"#\" + escape(dest));\n      }\n    } else if (Array.isArray(dest)) {\n      const str = JSON.stringify(dest);\n      if (str.length > 0) {\n        return this.getAnchorUrl(\"#\" + escape(str));\n      }\n    }\n    return this.getAnchorUrl(\"\");\n  }\n\n  /**\n   * Prefix the full url on anchor links to make sure that links are resolved\n   * relative to the current URL instead of the one defined in <base href>.\n   * @param {string} anchor - The anchor hash, including the #.\n   * @returns {string} The hyperlink to the PDF object.\n   */\n  getAnchorUrl(anchor) {\n    return (this.baseUrl || \"\") + anchor;\n  }\n\n  /**\n   * @param {string} hash\n   */\n  setHash(hash) {\n    if (!this.pdfDocument) {\n      return;\n    }\n    let pageNumber, dest;\n    if (hash.includes(\"=\")) {\n      const params = parseQueryString(hash);\n      if (\"search\" in params) {\n        this.eventBus.dispatch(\"findfromurlhash\", {\n          source: this,\n          query: params.search.replace(/\"/g, \"\"),\n          phraseSearch: params.phrase === \"true\",\n        });\n      }\n      // borrowing syntax from \"Parameters for Opening PDF Files\"\n      if (\"page\" in params) {\n        pageNumber = params.page | 0 || 1;\n      }\n      if (\"zoom\" in params) {\n        // Build the destination array.\n        const zoomArgs = params.zoom.split(\",\"); // scale,left,top\n        const zoomArg = zoomArgs[0];\n        const zoomArgNumber = parseFloat(zoomArg);\n\n        if (!zoomArg.includes(\"Fit\")) {\n          // If the zoomArg is a number, it has to get divided by 100. If it's\n          // a string, it should stay as it is.\n          dest = [\n            null,\n            { name: \"XYZ\" },\n            zoomArgs.length > 1 ? zoomArgs[1] | 0 : null,\n            zoomArgs.length > 2 ? zoomArgs[2] | 0 : null,\n            zoomArgNumber ? zoomArgNumber / 100 : zoomArg,\n          ];\n        } else {\n          if (zoomArg === \"Fit\" || zoomArg === \"FitB\") {\n            dest = [null, { name: zoomArg }];\n          } else if (\n            zoomArg === \"FitH\" ||\n            zoomArg === \"FitBH\" ||\n            zoomArg === \"FitV\" ||\n            zoomArg === \"FitBV\"\n          ) {\n            dest = [\n              null,\n              { name: zoomArg },\n              zoomArgs.length > 1 ? zoomArgs[1] | 0 : null,\n            ];\n          } else if (zoomArg === \"FitR\") {\n            if (zoomArgs.length !== 5) {\n              console.error(\n                'PDFLinkService.setHash: Not enough parameters for \"FitR\".'\n              );\n            } else {\n              dest = [\n                null,\n                { name: zoomArg },\n                zoomArgs[1] | 0,\n                zoomArgs[2] | 0,\n                zoomArgs[3] | 0,\n                zoomArgs[4] | 0,\n              ];\n            }\n          } else {\n            console.error(\n              `PDFLinkService.setHash: \"${zoomArg}\" is not ` +\n                \"a valid zoom value.\"\n            );\n          }\n        }\n      }\n      if (dest) {\n        this.pdfViewer.scrollPageIntoView({\n          pageNumber: pageNumber || this.page,\n          destArray: dest,\n          allowNegativeOffset: true,\n        });\n      } else if (pageNumber) {\n        this.page = pageNumber; // simple page\n      }\n      if (\"pagemode\" in params) {\n        this.eventBus.dispatch(\"pagemode\", {\n          source: this,\n          mode: params.pagemode,\n        });\n      }\n      // Ensure that this parameter is *always* handled last, in order to\n      // guarantee that it won't be overridden (e.g. by the \"page\" parameter).\n      if (\"nameddest\" in params) {\n        this.goToDestination(params.nameddest);\n      }\n    } else {\n      // Named (or explicit) destination.\n      dest = unescape(hash);\n      try {\n        dest = JSON.parse(dest);\n\n        if (!Array.isArray(dest)) {\n          // Avoid incorrectly rejecting a valid named destination, such as\n          // e.g. \"4.3\" or \"true\", because `JSON.parse` converted its type.\n          dest = dest.toString();\n        }\n      } catch (ex) {}\n\n      if (typeof dest === \"string\" || isValidExplicitDestination(dest)) {\n        this.goToDestination(dest);\n        return;\n      }\n      console.error(\n        `PDFLinkService.setHash: \"${unescape(hash)}\" is not ` +\n          \"a valid destination.\"\n      );\n    }\n  }\n\n  /**\n   * @param {string} action\n   */\n  executeNamedAction(action) {\n    // See PDF reference, table 8.45 - Named action\n    switch (action) {\n      case \"GoBack\":\n        if (this.pdfHistory) {\n          this.pdfHistory.back();\n        }\n        break;\n\n      case \"GoForward\":\n        if (this.pdfHistory) {\n          this.pdfHistory.forward();\n        }\n        break;\n\n      case \"NextPage\":\n        if (this.page < this.pagesCount) {\n          this.page++;\n        }\n        break;\n\n      case \"PrevPage\":\n        if (this.page > 1) {\n          this.page--;\n        }\n        break;\n\n      case \"LastPage\":\n        this.page = this.pagesCount;\n        break;\n\n      case \"FirstPage\":\n        this.page = 1;\n        break;\n\n      default:\n        break; // No action according to spec\n    }\n\n    this.eventBus.dispatch(\"namedaction\", {\n      source: this,\n      action,\n    });\n  }\n\n  /**\n   * @param {number} pageNum - page number.\n   * @param {Object} pageRef - reference to the page.\n   */\n  cachePageRef(pageNum, pageRef) {\n    if (!pageRef) {\n      return;\n    }\n    const refStr =\n      pageRef.gen === 0 ? `${pageRef.num}R` : `${pageRef.num}R${pageRef.gen}`;\n    this._pagesRefCache[refStr] = pageNum;\n  }\n\n  /**\n   * @private\n   */\n  _cachedPageNumber(pageRef) {\n    const refStr =\n      pageRef.gen === 0 ? `${pageRef.num}R` : `${pageRef.num}R${pageRef.gen}`;\n    return (this._pagesRefCache && this._pagesRefCache[refStr]) || null;\n  }\n\n  /**\n   * @param {number} pageNumber\n   */\n  isPageVisible(pageNumber) {\n    return this.pdfViewer.isPageVisible(pageNumber);\n  }\n\n  /**\n   * @param {number} pageNumber\n   */\n  isPageCached(pageNumber) {\n    return this.pdfViewer.isPageCached(pageNumber);\n  }\n}\n\nfunction isValidExplicitDestination(dest) {\n  if (!Array.isArray(dest)) {\n    return false;\n  }\n  const destLength = dest.length;\n  if (destLength < 2) {\n    return false;\n  }\n  const page = dest[0];\n  if (\n    !(\n      typeof page === \"object\" &&\n      Number.isInteger(page.num) &&\n      Number.isInteger(page.gen)\n    ) &&\n    !(Number.isInteger(page) && page >= 0)\n  ) {\n    return false;\n  }\n  const zoom = dest[1];\n  if (!(typeof zoom === \"object\" && typeof zoom.name === \"string\")) {\n    return false;\n  }\n  let allowNull = true;\n  switch (zoom.name) {\n    case \"XYZ\":\n      if (destLength !== 5) {\n        return false;\n      }\n      break;\n    case \"Fit\":\n    case \"FitB\":\n      return destLength === 2;\n    case \"FitH\":\n    case \"FitBH\":\n    case \"FitV\":\n    case \"FitBV\":\n      if (destLength !== 3) {\n        return false;\n      }\n      break;\n    case \"FitR\":\n      if (destLength !== 6) {\n        return false;\n      }\n      allowNull = false;\n      break;\n    default:\n      return false;\n  }\n  for (let i = 2; i < destLength; i++) {\n    const param = dest[i];\n    if (!(typeof param === \"number\" || (allowNull && param === null))) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @implements {IPDFLinkService}\n */\nclass SimpleLinkService {\n  constructor() {\n    this.externalLinkTarget = null;\n    this.externalLinkRel = null;\n    this.externalLinkEnabled = true;\n    this._ignoreDestinationZoom = false;\n  }\n\n  /**\n   * @type {number}\n   */\n  get pagesCount() {\n    return 0;\n  }\n\n  /**\n   * @type {number}\n   */\n  get page() {\n    return 0;\n  }\n\n  /**\n   * @param {number} value\n   */\n  set page(value) {}\n\n  /**\n   * @type {number}\n   */\n  get rotation() {\n    return 0;\n  }\n\n  /**\n   * @param {number} value\n   */\n  set rotation(value) {}\n\n  /**\n   * @param {string|Array} dest - The named, or explicit, PDF destination.\n   */\n  async goToDestination(dest) {}\n\n  /**\n   * @param {number|string} val - The page number, or page label.\n   */\n  goToPage(val) {}\n\n  /**\n   * @param dest - The PDF destination object.\n   * @returns {string} The hyperlink to the PDF object.\n   */\n  getDestinationHash(dest) {\n    return \"#\";\n  }\n\n  /**\n   * @param hash - The PDF parameters/hash.\n   * @returns {string} The hyperlink to the PDF object.\n   */\n  getAnchorUrl(hash) {\n    return \"#\";\n  }\n\n  /**\n   * @param {string} hash\n   */\n  setHash(hash) {}\n\n  /**\n   * @param {string} action\n   */\n  executeNamedAction(action) {}\n\n  /**\n   * @param {number} pageNum - page number.\n   * @param {Object} pageRef - reference to the page.\n   */\n  cachePageRef(pageNum, pageRef) {}\n\n  /**\n   * @param {number} pageNumber\n   */\n  isPageVisible(pageNumber) {\n    return true;\n  }\n\n  /**\n   * @param {number} pageNumber\n   */\n  isPageCached(pageNumber) {\n    return true;\n  }\n}\n\nexport { PDFLinkService, SimpleLinkService };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { addLinkAttributes, LinkTarget } from \"pdfjs-lib\";\nimport { BaseTreeViewer } from \"./base_tree_viewer.js\";\n\n/**\n * @typedef {Object} PDFOutlineViewerOptions\n * @property {HTMLDivElement} container - The viewer element.\n * @property {IPDFLinkService} linkService - The navigation/linking service.\n * @property {EventBus} eventBus - The application event bus.\n */\n\n/**\n * @typedef {Object} PDFOutlineViewerRenderParameters\n * @property {Array|null} outline - An array of outline objects.\n */\n\nclass PDFOutlineViewer extends BaseTreeViewer {\n  /**\n   * @param {PDFOutlineViewerOptions} options\n   */\n  constructor(options) {\n    super(options);\n    this.linkService = options.linkService;\n\n    this.eventBus._on(\"toggleoutlinetree\", this._toggleAllTreeItems.bind(this));\n  }\n\n  reset() {\n    super.reset();\n    this._outline = null;\n  }\n\n  /**\n   * @private\n   */\n  _dispatchEvent(outlineCount) {\n    this.eventBus.dispatch(\"outlineloaded\", {\n      source: this,\n      outlineCount,\n    });\n  }\n\n  /**\n   * @private\n   */\n  _bindLink(element, { url, newWindow, dest }) {\n    const { linkService } = this;\n\n    if (url) {\n      addLinkAttributes(element, {\n        url,\n        target: newWindow ? LinkTarget.BLANK : linkService.externalLinkTarget,\n        rel: linkService.externalLinkRel,\n        enabled: linkService.externalLinkEnabled,\n      });\n      return;\n    }\n\n    element.href = linkService.getDestinationHash(dest);\n    element.onclick = () => {\n      if (dest) {\n        linkService.goToDestination(dest);\n      }\n      return false;\n    };\n  }\n\n  /**\n   * @private\n   */\n  _setStyles(element, { bold, italic }) {\n    if (bold) {\n      element.style.fontWeight = \"bold\";\n    }\n    if (italic) {\n      element.style.fontStyle = \"italic\";\n    }\n  }\n\n  /**\n   * @private\n   */\n  _addToggleButton(div, { count, items }) {\n    let hidden = false;\n    if (count < 0) {\n      let totalCount = items.length;\n      if (totalCount > 0) {\n        const queue = [...items];\n        while (queue.length > 0) {\n          const { count: nestedCount, items: nestedItems } = queue.shift();\n          if (nestedCount > 0 && nestedItems.length > 0) {\n            totalCount += nestedItems.length;\n            queue.push(...nestedItems);\n          }\n        }\n      }\n      if (Math.abs(count) === totalCount) {\n        hidden = true;\n      }\n    }\n    super._addToggleButton(div, hidden);\n  }\n\n  /**\n   * @private\n   */\n  _toggleAllTreeItems() {\n    if (!this._outline) {\n      return;\n    }\n    super._toggleAllTreeItems();\n  }\n\n  /**\n   * @param {PDFOutlineViewerRenderParameters} params\n   */\n  render({ outline }) {\n    if (this._outline) {\n      this.reset();\n    }\n    this._outline = outline || null;\n\n    if (!outline) {\n      this._dispatchEvent(/* outlineCount = */ 0);\n      return;\n    }\n\n    const fragment = document.createDocumentFragment();\n    const queue = [{ parent: fragment, items: outline }];\n    let outlineCount = 0,\n      hasAnyNesting = false;\n    while (queue.length > 0) {\n      const levelData = queue.shift();\n      for (const item of levelData.items) {\n        const div = document.createElement(\"div\");\n        div.className = \"treeItem\";\n\n        const element = document.createElement(\"a\");\n        this._bindLink(element, item);\n        this._setStyles(element, item);\n        element.textContent = this._normalizeTextContent(item.title);\n\n        div.appendChild(element);\n\n        if (item.items.length > 0) {\n          hasAnyNesting = true;\n          this._addToggleButton(div, item);\n\n          const itemsDiv = document.createElement(\"div\");\n          itemsDiv.className = \"treeItems\";\n          div.appendChild(itemsDiv);\n\n          queue.push({ parent: itemsDiv, items: item.items });\n        }\n\n        levelData.parent.appendChild(div);\n        outlineCount++;\n      }\n    }\n    if (hasAnyNesting) {\n      this.container.classList.add(\"treeWithDeepNesting\");\n\n      this._lastToggleIsShow =\n        fragment.querySelectorAll(\".treeItemsHidden\").length === 0;\n    }\n\n    this.container.appendChild(fragment);\n\n    this._dispatchEvent(outlineCount);\n  }\n}\n\nexport { PDFOutlineViewer };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { normalizeWheelEventDelta } from \"./ui_utils.js\";\n\nconst DELAY_BEFORE_RESETTING_SWITCH_IN_PROGRESS = 1500; // in ms\nconst DELAY_BEFORE_HIDING_CONTROLS = 3000; // in ms\nconst ACTIVE_SELECTOR = \"pdfPresentationMode\";\nconst CONTROLS_SELECTOR = \"pdfPresentationModeControls\";\nconst MOUSE_SCROLL_COOLDOWN_TIME = 50; // in ms\nconst PAGE_SWITCH_THRESHOLD = 0.1;\n\n// Number of CSS pixels for a movement to count as a swipe.\nconst SWIPE_MIN_DISTANCE_THRESHOLD = 50;\n\n// Swipe angle deviation from the x or y axis before it is not\n// considered a swipe in that direction any more.\nconst SWIPE_ANGLE_THRESHOLD = Math.PI / 6;\n\n/**\n * @typedef {Object} PDFPresentationModeOptions\n * @property {HTMLDivElement} container - The container for the viewer element.\n * @property {PDFViewer} pdfViewer - The document viewer.\n * @property {EventBus} eventBus - The application event bus.\n * @property {Array} [contextMenuItems] - The menu items that are added to the\n *   context menu in Presentation Mode.\n */\n\nclass PDFPresentationMode {\n  /**\n   * @param {PDFPresentationModeOptions} options\n   */\n  constructor({ container, pdfViewer, eventBus, contextMenuItems = null }) {\n    this.container = container;\n    this.pdfViewer = pdfViewer;\n    this.eventBus = eventBus;\n\n    this.active = false;\n    this.args = null;\n    this.contextMenuOpen = false;\n    this.mouseScrollTimeStamp = 0;\n    this.mouseScrollDelta = 0;\n    this.touchSwipeState = null;\n\n    if (contextMenuItems) {\n      contextMenuItems.contextFirstPage.addEventListener(\"click\", () => {\n        this.contextMenuOpen = false;\n        this.eventBus.dispatch(\"firstpage\", { source: this });\n      });\n      contextMenuItems.contextLastPage.addEventListener(\"click\", () => {\n        this.contextMenuOpen = false;\n        this.eventBus.dispatch(\"lastpage\", { source: this });\n      });\n      contextMenuItems.contextPageRotateCw.addEventListener(\"click\", () => {\n        this.contextMenuOpen = false;\n        this.eventBus.dispatch(\"rotatecw\", { source: this });\n      });\n      contextMenuItems.contextPageRotateCcw.addEventListener(\"click\", () => {\n        this.contextMenuOpen = false;\n        this.eventBus.dispatch(\"rotateccw\", { source: this });\n      });\n    }\n  }\n\n  /**\n   * Request the browser to enter fullscreen mode.\n   * @returns {boolean} Indicating if the request was successful.\n   */\n  request() {\n    if (this.switchInProgress || this.active || !this.pdfViewer.pagesCount) {\n      return false;\n    }\n    this._addFullscreenChangeListeners();\n    this._setSwitchInProgress();\n    this._notifyStateChange();\n\n    if (this.container.requestFullscreen) {\n      this.container.requestFullscreen();\n    } else if (this.container.mozRequestFullScreen) {\n      this.container.mozRequestFullScreen();\n    } else if (this.container.webkitRequestFullscreen) {\n      this.container.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\n    } else {\n      return false;\n    }\n\n    this.args = {\n      page: this.pdfViewer.currentPageNumber,\n      previousScale: this.pdfViewer.currentScaleValue,\n    };\n\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  _mouseWheel(evt) {\n    if (!this.active) {\n      return;\n    }\n\n    evt.preventDefault();\n\n    const delta = normalizeWheelEventDelta(evt);\n    const currentTime = new Date().getTime();\n    const storedTime = this.mouseScrollTimeStamp;\n\n    // If we've already switched page, avoid accidentally switching again.\n    if (\n      currentTime > storedTime &&\n      currentTime - storedTime < MOUSE_SCROLL_COOLDOWN_TIME\n    ) {\n      return;\n    }\n    // If the scroll direction changed, reset the accumulated scroll delta.\n    if (\n      (this.mouseScrollDelta > 0 && delta < 0) ||\n      (this.mouseScrollDelta < 0 && delta > 0)\n    ) {\n      this._resetMouseScrollState();\n    }\n    this.mouseScrollDelta += delta;\n\n    if (Math.abs(this.mouseScrollDelta) >= PAGE_SWITCH_THRESHOLD) {\n      const totalDelta = this.mouseScrollDelta;\n      this._resetMouseScrollState();\n      const success =\n        totalDelta > 0 ? this._goToPreviousPage() : this._goToNextPage();\n      if (success) {\n        this.mouseScrollTimeStamp = currentTime;\n      }\n    }\n  }\n\n  get isFullscreen() {\n    return !!(\n      document.fullscreenElement ||\n      document.mozFullScreen ||\n      document.webkitIsFullScreen\n    );\n  }\n\n  /**\n   * @private\n   */\n  _goToPreviousPage() {\n    const page = this.pdfViewer.currentPageNumber;\n    // If we're at the first page, we don't need to do anything.\n    if (page <= 1) {\n      return false;\n    }\n    this.pdfViewer.currentPageNumber = page - 1;\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  _goToNextPage() {\n    const page = this.pdfViewer.currentPageNumber;\n    // If we're at the last page, we don't need to do anything.\n    if (page >= this.pdfViewer.pagesCount) {\n      return false;\n    }\n    this.pdfViewer.currentPageNumber = page + 1;\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  _notifyStateChange() {\n    this.eventBus.dispatch(\"presentationmodechanged\", {\n      source: this,\n      active: this.active,\n      switchInProgress: !!this.switchInProgress,\n    });\n  }\n\n  /**\n   * Used to initialize a timeout when requesting Presentation Mode,\n   * i.e. when the browser is requested to enter fullscreen mode.\n   * This timeout is used to prevent the current page from being scrolled\n   * partially, or completely, out of view when entering Presentation Mode.\n   * NOTE: This issue seems limited to certain zoom levels (e.g. page-width).\n   *\n   * @private\n   */\n  _setSwitchInProgress() {\n    if (this.switchInProgress) {\n      clearTimeout(this.switchInProgress);\n    }\n    this.switchInProgress = setTimeout(() => {\n      this._removeFullscreenChangeListeners();\n      delete this.switchInProgress;\n      this._notifyStateChange();\n    }, DELAY_BEFORE_RESETTING_SWITCH_IN_PROGRESS);\n  }\n\n  /**\n   * @private\n   */\n  _resetSwitchInProgress() {\n    if (this.switchInProgress) {\n      clearTimeout(this.switchInProgress);\n      delete this.switchInProgress;\n    }\n  }\n\n  /**\n   * @private\n   */\n  _enter() {\n    this.active = true;\n    this._resetSwitchInProgress();\n    this._notifyStateChange();\n    this.container.classList.add(ACTIVE_SELECTOR);\n\n    // Ensure that the correct page is scrolled into view when entering\n    // Presentation Mode, by waiting until fullscreen mode in enabled.\n    setTimeout(() => {\n      this.pdfViewer.currentPageNumber = this.args.page;\n      this.pdfViewer.currentScaleValue = \"page-fit\";\n    }, 0);\n\n    this._addWindowListeners();\n    this._showControls();\n    this.contextMenuOpen = false;\n    this.container.setAttribute(\"contextmenu\", \"viewerContextMenu\");\n\n    // Text selection is disabled in Presentation Mode, thus it's not possible\n    // for the user to deselect text that is selected (e.g. with \"Select all\")\n    // when entering Presentation Mode, hence we remove any active selection.\n    window.getSelection().removeAllRanges();\n  }\n\n  /**\n   * @private\n   */\n  _exit() {\n    const page = this.pdfViewer.currentPageNumber;\n    this.container.classList.remove(ACTIVE_SELECTOR);\n\n    // Ensure that the correct page is scrolled into view when exiting\n    // Presentation Mode, by waiting until fullscreen mode is disabled.\n    setTimeout(() => {\n      this.active = false;\n      this._removeFullscreenChangeListeners();\n      this._notifyStateChange();\n\n      this.pdfViewer.currentScaleValue = this.args.previousScale;\n      this.pdfViewer.currentPageNumber = page;\n      this.args = null;\n    }, 0);\n\n    this._removeWindowListeners();\n    this._hideControls();\n    this._resetMouseScrollState();\n    this.container.removeAttribute(\"contextmenu\");\n    this.contextMenuOpen = false;\n  }\n\n  /**\n   * @private\n   */\n  _mouseDown(evt) {\n    if (this.contextMenuOpen) {\n      this.contextMenuOpen = false;\n      evt.preventDefault();\n      return;\n    }\n    if (evt.button === 0) {\n      // Enable clicking of links in presentation mode. Note: only links\n      // pointing to destinations in the current PDF document work.\n      const isInternalLink =\n        evt.target.href && evt.target.classList.contains(\"internalLink\");\n      if (!isInternalLink) {\n        // Unless an internal link was clicked, advance one page.\n        evt.preventDefault();\n\n        if (evt.shiftKey) {\n          this._goToPreviousPage();\n        } else {\n          this._goToNextPage();\n        }\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  _contextMenu() {\n    this.contextMenuOpen = true;\n  }\n\n  /**\n   * @private\n   */\n  _showControls() {\n    if (this.controlsTimeout) {\n      clearTimeout(this.controlsTimeout);\n    } else {\n      this.container.classList.add(CONTROLS_SELECTOR);\n    }\n    this.controlsTimeout = setTimeout(() => {\n      this.container.classList.remove(CONTROLS_SELECTOR);\n      delete this.controlsTimeout;\n    }, DELAY_BEFORE_HIDING_CONTROLS);\n  }\n\n  /**\n   * @private\n   */\n  _hideControls() {\n    if (!this.controlsTimeout) {\n      return;\n    }\n    clearTimeout(this.controlsTimeout);\n    this.container.classList.remove(CONTROLS_SELECTOR);\n    delete this.controlsTimeout;\n  }\n\n  /**\n   * Resets the properties used for tracking mouse scrolling events.\n   *\n   * @private\n   */\n  _resetMouseScrollState() {\n    this.mouseScrollTimeStamp = 0;\n    this.mouseScrollDelta = 0;\n  }\n\n  /**\n   * @private\n   */\n  _touchSwipe(evt) {\n    if (!this.active) {\n      return;\n    }\n    if (evt.touches.length > 1) {\n      // Multiple touch points detected; cancel the swipe.\n      this.touchSwipeState = null;\n      return;\n    }\n\n    switch (evt.type) {\n      case \"touchstart\":\n        this.touchSwipeState = {\n          startX: evt.touches[0].pageX,\n          startY: evt.touches[0].pageY,\n          endX: evt.touches[0].pageX,\n          endY: evt.touches[0].pageY,\n        };\n        break;\n      case \"touchmove\":\n        if (this.touchSwipeState === null) {\n          return;\n        }\n        this.touchSwipeState.endX = evt.touches[0].pageX;\n        this.touchSwipeState.endY = evt.touches[0].pageY;\n        // Avoid the swipe from triggering browser gestures (Chrome in\n        // particular has some sort of swipe gesture in fullscreen mode).\n        evt.preventDefault();\n        break;\n      case \"touchend\":\n        if (this.touchSwipeState === null) {\n          return;\n        }\n        let delta = 0;\n        const dx = this.touchSwipeState.endX - this.touchSwipeState.startX;\n        const dy = this.touchSwipeState.endY - this.touchSwipeState.startY;\n        const absAngle = Math.abs(Math.atan2(dy, dx));\n        if (\n          Math.abs(dx) > SWIPE_MIN_DISTANCE_THRESHOLD &&\n          (absAngle <= SWIPE_ANGLE_THRESHOLD ||\n            absAngle >= Math.PI - SWIPE_ANGLE_THRESHOLD)\n        ) {\n          // Horizontal swipe.\n          delta = dx;\n        } else if (\n          Math.abs(dy) > SWIPE_MIN_DISTANCE_THRESHOLD &&\n          Math.abs(absAngle - Math.PI / 2) <= SWIPE_ANGLE_THRESHOLD\n        ) {\n          // Vertical swipe.\n          delta = dy;\n        }\n        if (delta > 0) {\n          this._goToPreviousPage();\n        } else if (delta < 0) {\n          this._goToNextPage();\n        }\n        break;\n    }\n  }\n\n  /**\n   * @private\n   */\n  _addWindowListeners() {\n    this.showControlsBind = this._showControls.bind(this);\n    this.mouseDownBind = this._mouseDown.bind(this);\n    this.mouseWheelBind = this._mouseWheel.bind(this);\n    this.resetMouseScrollStateBind = this._resetMouseScrollState.bind(this);\n    this.contextMenuBind = this._contextMenu.bind(this);\n    this.touchSwipeBind = this._touchSwipe.bind(this);\n\n    window.addEventListener(\"mousemove\", this.showControlsBind);\n    window.addEventListener(\"mousedown\", this.mouseDownBind);\n    window.addEventListener(\"wheel\", this.mouseWheelBind, { passive: false });\n    window.addEventListener(\"keydown\", this.resetMouseScrollStateBind);\n    window.addEventListener(\"contextmenu\", this.contextMenuBind);\n    window.addEventListener(\"touchstart\", this.touchSwipeBind);\n    window.addEventListener(\"touchmove\", this.touchSwipeBind);\n    window.addEventListener(\"touchend\", this.touchSwipeBind);\n  }\n\n  /**\n   * @private\n   */\n  _removeWindowListeners() {\n    window.removeEventListener(\"mousemove\", this.showControlsBind);\n    window.removeEventListener(\"mousedown\", this.mouseDownBind);\n    window.removeEventListener(\"wheel\", this.mouseWheelBind, {\n      passive: false,\n    });\n    window.removeEventListener(\"keydown\", this.resetMouseScrollStateBind);\n    window.removeEventListener(\"contextmenu\", this.contextMenuBind);\n    window.removeEventListener(\"touchstart\", this.touchSwipeBind);\n    window.removeEventListener(\"touchmove\", this.touchSwipeBind);\n    window.removeEventListener(\"touchend\", this.touchSwipeBind);\n\n    delete this.showControlsBind;\n    delete this.mouseDownBind;\n    delete this.mouseWheelBind;\n    delete this.resetMouseScrollStateBind;\n    delete this.contextMenuBind;\n    delete this.touchSwipeBind;\n  }\n\n  /**\n   * @private\n   */\n  _fullscreenChange() {\n    if (this.isFullscreen) {\n      this._enter();\n    } else {\n      this._exit();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _addFullscreenChangeListeners() {\n    this.fullscreenChangeBind = this._fullscreenChange.bind(this);\n\n    window.addEventListener(\"fullscreenchange\", this.fullscreenChangeBind);\n    window.addEventListener(\"mozfullscreenchange\", this.fullscreenChangeBind);\n    if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) {\n      window.addEventListener(\n        \"webkitfullscreenchange\",\n        this.fullscreenChangeBind\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  _removeFullscreenChangeListeners() {\n    window.removeEventListener(\"fullscreenchange\", this.fullscreenChangeBind);\n    window.removeEventListener(\n      \"mozfullscreenchange\",\n      this.fullscreenChangeBind\n    );\n    if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) {\n      window.removeEventListener(\n        \"webkitfullscreenchange\",\n        this.fullscreenChangeBind\n      );\n    }\n\n    delete this.fullscreenChangeBind;\n  }\n}\n\nexport { PDFPresentationMode };\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NullL10n } from \"./ui_utils.js\";\n\nconst SIDEBAR_WIDTH_VAR = \"--sidebar-width\";\nconst SIDEBAR_MIN_WIDTH = 200; // pixels\nconst SIDEBAR_RESIZING_CLASS = \"sidebarResizing\";\n\n/**\n * @typedef {Object} PDFSidebarResizerOptions\n * @property {HTMLDivElement} outerContainer - The outer container\n *   (encasing both the viewer and sidebar elements).\n * @property {HTMLDivElement} resizer - The DOM element that can be dragged in\n *   order to adjust the width of the sidebar.\n */\n\nclass PDFSidebarResizer {\n  /**\n   * @param {PDFSidebarResizerOptions} options\n   * @param {EventBus} eventBus - The application event bus.\n   * @param {IL10n} l10n - Localization service.\n   */\n  constructor(options, eventBus, l10n = NullL10n) {\n    this.isRTL = false;\n    this.sidebarOpen = false;\n    this.doc = document.documentElement;\n    this._width = null;\n    this._outerContainerWidth = null;\n    this._boundEvents = Object.create(null);\n\n    this.outerContainer = options.outerContainer;\n    this.resizer = options.resizer;\n    this.eventBus = eventBus;\n\n    l10n.getDirection().then(dir => {\n      this.isRTL = dir === \"rtl\";\n    });\n    this._addEventListeners();\n  }\n\n  /**\n   * @type {number}\n   */\n  get outerContainerWidth() {\n    if (!this._outerContainerWidth) {\n      this._outerContainerWidth = this.outerContainer.clientWidth;\n    }\n    return this._outerContainerWidth;\n  }\n\n  /**\n   * @private\n   * returns {boolean} Indicating if the sidebar width was updated.\n   */\n  _updateWidth(width = 0) {\n    // Prevent the sidebar from becoming too narrow, or from occupying more\n    // than half of the available viewer width.\n    const maxWidth = Math.floor(this.outerContainerWidth / 2);\n    if (width > maxWidth) {\n      width = maxWidth;\n    }\n    if (width < SIDEBAR_MIN_WIDTH) {\n      width = SIDEBAR_MIN_WIDTH;\n    }\n    // Only update the UI when the sidebar width did in fact change.\n    if (width === this._width) {\n      return false;\n    }\n    this._width = width;\n    this.doc.style.setProperty(SIDEBAR_WIDTH_VAR, `${width}px`);\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  _mouseMove(evt) {\n    let width = evt.clientX;\n    // For sidebar resizing to work correctly in RTL mode, invert the width.\n    if (this.isRTL) {\n      width = this.outerContainerWidth - width;\n    }\n    this._updateWidth(width);\n  }\n\n  /**\n   * @private\n   */\n  _mouseUp(evt) {\n    // Re-enable the `transition-duration` rules when sidebar resizing ends...\n    this.outerContainer.classList.remove(SIDEBAR_RESIZING_CLASS);\n    // ... and ensure that rendering will always be triggered.\n    this.eventBus.dispatch(\"resize\", { source: this });\n\n    const _boundEvents = this._boundEvents;\n    window.removeEventListener(\"mousemove\", _boundEvents.mouseMove);\n    window.removeEventListener(\"mouseup\", _boundEvents.mouseUp);\n  }\n\n  /**\n   * @private\n   */\n  _addEventListeners() {\n    const _boundEvents = this._boundEvents;\n    _boundEvents.mouseMove = this._mouseMove.bind(this);\n    _boundEvents.mouseUp = this._mouseUp.bind(this);\n\n    this.resizer.addEventListener(\"mousedown\", evt => {\n      if (evt.button !== 0) {\n        return;\n      }\n      // Disable the `transition-duration` rules when sidebar resizing begins,\n      // in order to improve responsiveness and to avoid visual glitches.\n      this.outerContainer.classList.add(SIDEBAR_RESIZING_CLASS);\n\n      window.addEventListener(\"mousemove\", _boundEvents.mouseMove);\n      window.addEventListener(\"mouseup\", _boundEvents.mouseUp);\n    });\n\n    this.eventBus._on(\"sidebarviewchanged\", evt => {\n      this.sidebarOpen = !!(evt && evt.view);\n    });\n\n    this.eventBus._on(\"resize\", evt => {\n      // When the *entire* viewer is resized, such that it becomes narrower,\n      // ensure that the sidebar doesn't end up being too wide.\n      if (!evt || evt.source !== window) {\n        return;\n      }\n      // Always reset the cached width when the viewer is resized.\n      this._outerContainerWidth = null;\n\n      if (!this._width) {\n        // The sidebar hasn't been resized, hence no need to adjust its width.\n        return;\n      }\n      // NOTE: If the sidebar is closed, we don't need to worry about\n      //       visual glitches nor ensure that rendering is triggered.\n      if (!this.sidebarOpen) {\n        this._updateWidth(this._width);\n        return;\n      }\n      this.outerContainer.classList.add(SIDEBAR_RESIZING_CLASS);\n      const updated = this._updateWidth(this._width);\n\n      Promise.resolve().then(() => {\n        this.outerContainer.classList.remove(SIDEBAR_RESIZING_CLASS);\n        // Trigger rendering if the sidebar width changed, to avoid\n        // depending on the order in which 'resize' events are handled.\n        if (updated) {\n          this.eventBus.dispatch(\"resize\", { source: this });\n        }\n      });\n    });\n  }\n}\n\nexport { PDFSidebarResizer };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  getVisibleElements,\n  isValidRotation,\n  NullL10n,\n  scrollIntoView,\n  watchScroll,\n} from \"./ui_utils.js\";\nimport { PDFThumbnailView, TempImageFactory } from \"./pdf_thumbnail_view.js\";\nimport { RenderingStates } from \"./pdf_rendering_queue.js\";\n\nconst THUMBNAIL_SCROLL_MARGIN = -19;\nconst THUMBNAIL_SELECTED_CLASS = \"selected\";\n\n/**\n * @typedef {Object} PDFThumbnailViewerOptions\n * @property {HTMLDivElement} container - The container for the thumbnail\n *   elements.\n * @property {EventBus} eventBus - The application event bus.\n * @property {IPDFLinkService} linkService - The navigation/linking service.\n * @property {PDFRenderingQueue} renderingQueue - The rendering queue object.\n * @property {IL10n} l10n - Localization service.\n */\n\n/**\n * Viewer control to display thumbnails for pages in a PDF document.\n *\n * @implements {IRenderableView}\n */\nclass PDFThumbnailViewer {\n  /**\n   * @param {PDFThumbnailViewerOptions} options\n   */\n  constructor({\n    container,\n    eventBus,\n    linkService,\n    renderingQueue,\n    l10n = NullL10n,\n  }) {\n    this.container = container;\n    this.linkService = linkService;\n    this.renderingQueue = renderingQueue;\n    this.l10n = l10n;\n\n    this.scroll = watchScroll(this.container, this._scrollUpdated.bind(this));\n    this._resetView();\n\n    eventBus._on(\"optionalcontentconfigchanged\", () => {\n      // Ensure that the thumbnails always render with the *default* optional\n      // content configuration.\n      this._setImageDisabled = true;\n    });\n  }\n\n  /**\n   * @private\n   */\n  _scrollUpdated() {\n    this.renderingQueue.renderHighestPriority();\n  }\n\n  getThumbnail(index) {\n    return this._thumbnails[index];\n  }\n\n  /**\n   * @private\n   */\n  _getVisibleThumbs() {\n    return getVisibleElements({\n      scrollEl: this.container,\n      views: this._thumbnails,\n    });\n  }\n\n  scrollThumbnailIntoView(pageNumber) {\n    if (!this.pdfDocument) {\n      return;\n    }\n    const thumbnailView = this._thumbnails[pageNumber - 1];\n\n    if (!thumbnailView) {\n      console.error('scrollThumbnailIntoView: Invalid \"pageNumber\" parameter.');\n      return;\n    }\n\n    if (pageNumber !== this._currentPageNumber) {\n      const prevThumbnailView = this._thumbnails[this._currentPageNumber - 1];\n      // Remove the highlight from the previous thumbnail...\n      prevThumbnailView.div.classList.remove(THUMBNAIL_SELECTED_CLASS);\n      // ... and add the highlight to the new thumbnail.\n      thumbnailView.div.classList.add(THUMBNAIL_SELECTED_CLASS);\n    }\n    const visibleThumbs = this._getVisibleThumbs();\n    const numVisibleThumbs = visibleThumbs.views.length;\n\n    // If the thumbnail isn't currently visible, scroll it into view.\n    if (numVisibleThumbs > 0) {\n      const first = visibleThumbs.first.id;\n      // Account for only one thumbnail being visible.\n      const last = numVisibleThumbs > 1 ? visibleThumbs.last.id : first;\n\n      let shouldScroll = false;\n      if (pageNumber <= first || pageNumber >= last) {\n        shouldScroll = true;\n      } else {\n        visibleThumbs.views.some(function (view) {\n          if (view.id !== pageNumber) {\n            return false;\n          }\n          shouldScroll = view.percent < 100;\n          return true;\n        });\n      }\n      if (shouldScroll) {\n        scrollIntoView(thumbnailView.div, { top: THUMBNAIL_SCROLL_MARGIN });\n      }\n    }\n\n    this._currentPageNumber = pageNumber;\n  }\n\n  get pagesRotation() {\n    return this._pagesRotation;\n  }\n\n  set pagesRotation(rotation) {\n    if (!isValidRotation(rotation)) {\n      throw new Error(\"Invalid thumbnails rotation angle.\");\n    }\n    if (!this.pdfDocument) {\n      return;\n    }\n    if (this._pagesRotation === rotation) {\n      return; // The rotation didn't change.\n    }\n    this._pagesRotation = rotation;\n\n    for (let i = 0, ii = this._thumbnails.length; i < ii; i++) {\n      this._thumbnails[i].update(rotation);\n    }\n  }\n\n  cleanup() {\n    for (let i = 0, ii = this._thumbnails.length; i < ii; i++) {\n      if (\n        this._thumbnails[i] &&\n        this._thumbnails[i].renderingState !== RenderingStates.FINISHED\n      ) {\n        this._thumbnails[i].reset();\n      }\n    }\n    TempImageFactory.destroyCanvas();\n  }\n\n  /**\n   * @private\n   */\n  _resetView() {\n    this._thumbnails = [];\n    this._currentPageNumber = 1;\n    this._pageLabels = null;\n    this._pagesRotation = 0;\n    this._optionalContentConfigPromise = null;\n    this._pagesRequests = new WeakMap();\n    this._setImageDisabled = false;\n\n    // Remove the thumbnails from the DOM.\n    this.container.textContent = \"\";\n  }\n\n  setDocument(pdfDocument) {\n    if (this.pdfDocument) {\n      this._cancelRendering();\n      this._resetView();\n    }\n\n    this.pdfDocument = pdfDocument;\n    if (!pdfDocument) {\n      return;\n    }\n    const firstPagePromise = pdfDocument.getPage(1);\n    const optionalContentConfigPromise = pdfDocument.getOptionalContentConfig();\n\n    firstPagePromise\n      .then(firstPdfPage => {\n        this._optionalContentConfigPromise = optionalContentConfigPromise;\n\n        const pagesCount = pdfDocument.numPages;\n        const viewport = firstPdfPage.getViewport({ scale: 1 });\n        const checkSetImageDisabled = () => {\n          return this._setImageDisabled;\n        };\n\n        for (let pageNum = 1; pageNum <= pagesCount; ++pageNum) {\n          const thumbnail = new PDFThumbnailView({\n            container: this.container,\n            id: pageNum,\n            defaultViewport: viewport.clone(),\n            optionalContentConfigPromise,\n            linkService: this.linkService,\n            renderingQueue: this.renderingQueue,\n            checkSetImageDisabled,\n            disableCanvasToImageConversion: false,\n            l10n: this.l10n,\n          });\n          this._thumbnails.push(thumbnail);\n        }\n        // Set the first `pdfPage` immediately, since it's already loaded,\n        // rather than having to repeat the `PDFDocumentProxy.getPage` call in\n        // the `this._ensurePdfPageLoaded` method before rendering can start.\n        const firstThumbnailView = this._thumbnails[0];\n        if (firstThumbnailView) {\n          firstThumbnailView.setPdfPage(firstPdfPage);\n        }\n\n        // Ensure that the current thumbnail is always highlighted on load.\n        const thumbnailView = this._thumbnails[this._currentPageNumber - 1];\n        thumbnailView.div.classList.add(THUMBNAIL_SELECTED_CLASS);\n      })\n      .catch(reason => {\n        console.error(\"Unable to initialize thumbnail viewer\", reason);\n      });\n  }\n\n  /**\n   * @private\n   */\n  _cancelRendering() {\n    for (let i = 0, ii = this._thumbnails.length; i < ii; i++) {\n      if (this._thumbnails[i]) {\n        this._thumbnails[i].cancelRendering();\n      }\n    }\n  }\n\n  /**\n   * @param {Array|null} labels\n   */\n  setPageLabels(labels) {\n    if (!this.pdfDocument) {\n      return;\n    }\n    if (!labels) {\n      this._pageLabels = null;\n    } else if (\n      !(Array.isArray(labels) && this.pdfDocument.numPages === labels.length)\n    ) {\n      this._pageLabels = null;\n      console.error(\"PDFThumbnailViewer_setPageLabels: Invalid page labels.\");\n    } else {\n      this._pageLabels = labels;\n    }\n    // Update all the `PDFThumbnailView` instances.\n    for (let i = 0, ii = this._thumbnails.length; i < ii; i++) {\n      const label = this._pageLabels && this._pageLabels[i];\n      this._thumbnails[i].setPageLabel(label);\n    }\n  }\n\n  /**\n   * @param {PDFThumbnailView} thumbView\n   * @returns {PDFPage}\n   * @private\n   */\n  _ensurePdfPageLoaded(thumbView) {\n    if (thumbView.pdfPage) {\n      return Promise.resolve(thumbView.pdfPage);\n    }\n    if (this._pagesRequests.has(thumbView)) {\n      return this._pagesRequests.get(thumbView);\n    }\n    const promise = this.pdfDocument\n      .getPage(thumbView.id)\n      .then(pdfPage => {\n        if (!thumbView.pdfPage) {\n          thumbView.setPdfPage(pdfPage);\n        }\n        this._pagesRequests.delete(thumbView);\n        return pdfPage;\n      })\n      .catch(reason => {\n        console.error(\"Unable to get page for thumb view\", reason);\n        // Page error -- there is nothing that can be done.\n        this._pagesRequests.delete(thumbView);\n      });\n    this._pagesRequests.set(thumbView, promise);\n    return promise;\n  }\n\n  forceRendering() {\n    const visibleThumbs = this._getVisibleThumbs();\n    const thumbView = this.renderingQueue.getHighestPriority(\n      visibleThumbs,\n      this._thumbnails,\n      this.scroll.down\n    );\n    if (thumbView) {\n      this._ensurePdfPageLoaded(thumbView).then(() => {\n        this.renderingQueue.renderView(thumbView);\n      });\n      return true;\n    }\n    return false;\n  }\n}\n\nexport { PDFThumbnailViewer };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getOutputScale, NullL10n } from \"./ui_utils.js\";\nimport { RenderingCancelledException } from \"pdfjs-lib\";\nimport { RenderingStates } from \"./pdf_rendering_queue.js\";\n\nconst MAX_NUM_SCALING_STEPS = 3;\nconst THUMBNAIL_CANVAS_BORDER_WIDTH = 1; // px\nconst THUMBNAIL_WIDTH = 98; // px\n\n/**\n * @typedef {Object} PDFThumbnailViewOptions\n * @property {HTMLDivElement} container - The viewer element.\n * @property {number} id - The thumbnail's unique ID (normally its number).\n * @property {PageViewport} defaultViewport - The page viewport.\n * @property {Promise<OptionalContentConfig>} [optionalContentConfigPromise] -\n *   A promise that is resolved with an {@link OptionalContentConfig} instance.\n *   The default value is `null`.\n * @property {IPDFLinkService} linkService - The navigation/linking service.\n * @property {PDFRenderingQueue} renderingQueue - The rendering queue object.\n * @property {function} checkSetImageDisabled\n * @property {boolean} [disableCanvasToImageConversion] - Don't convert the\n *   canvas thumbnails to images. This prevents `toDataURL` calls, but\n *   increases the overall memory usage. The default value is `false`.\n * @property {IL10n} l10n - Localization service.\n */\n\nconst TempImageFactory = (function TempImageFactoryClosure() {\n  let tempCanvasCache = null;\n\n  return {\n    getCanvas(width, height) {\n      let tempCanvas = tempCanvasCache;\n      if (!tempCanvas) {\n        tempCanvas = document.createElement(\"canvas\");\n        tempCanvasCache = tempCanvas;\n      }\n      tempCanvas.width = width;\n      tempCanvas.height = height;\n\n      // Since this is a temporary canvas, we need to fill it with a white\n      // background ourselves. `_getPageDrawContext` uses CSS rules for this.\n      if (\n        typeof PDFJSDev === \"undefined\" ||\n        PDFJSDev.test(\"MOZCENTRAL || GENERIC\")\n      ) {\n        tempCanvas.mozOpaque = true;\n      }\n\n      const ctx = tempCanvas.getContext(\"2d\", { alpha: false });\n      ctx.save();\n      ctx.fillStyle = \"rgb(255, 255, 255)\";\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n      return tempCanvas;\n    },\n\n    destroyCanvas() {\n      const tempCanvas = tempCanvasCache;\n      if (tempCanvas) {\n        // Zeroing the width and height causes Firefox to release graphics\n        // resources immediately, which can greatly reduce memory consumption.\n        tempCanvas.width = 0;\n        tempCanvas.height = 0;\n      }\n      tempCanvasCache = null;\n    },\n  };\n})();\n\n/**\n * @implements {IRenderableView}\n */\nclass PDFThumbnailView {\n  /**\n   * @param {PDFThumbnailViewOptions} options\n   */\n  constructor({\n    container,\n    id,\n    defaultViewport,\n    optionalContentConfigPromise,\n    linkService,\n    renderingQueue,\n    checkSetImageDisabled,\n    disableCanvasToImageConversion = false,\n    l10n = NullL10n,\n  }) {\n    this.id = id;\n    this.renderingId = \"thumbnail\" + id;\n    this.pageLabel = null;\n\n    this.pdfPage = null;\n    this.rotation = 0;\n    this.viewport = defaultViewport;\n    this.pdfPageRotate = defaultViewport.rotation;\n    this._optionalContentConfigPromise = optionalContentConfigPromise || null;\n\n    this.linkService = linkService;\n    this.renderingQueue = renderingQueue;\n\n    this.renderTask = null;\n    this.renderingState = RenderingStates.INITIAL;\n    this.resume = null;\n    this._checkSetImageDisabled =\n      checkSetImageDisabled ||\n      function () {\n        return false;\n      };\n    this.disableCanvasToImageConversion = disableCanvasToImageConversion;\n\n    this.pageWidth = this.viewport.width;\n    this.pageHeight = this.viewport.height;\n    this.pageRatio = this.pageWidth / this.pageHeight;\n\n    this.canvasWidth = THUMBNAIL_WIDTH;\n    this.canvasHeight = (this.canvasWidth / this.pageRatio) | 0;\n    this.scale = this.canvasWidth / this.pageWidth;\n\n    this.l10n = l10n;\n\n    const anchor = document.createElement(\"a\");\n    anchor.href = linkService.getAnchorUrl(\"#page=\" + id);\n    this._thumbPageTitle.then(msg => {\n      anchor.title = msg;\n    });\n    anchor.onclick = function () {\n      linkService.goToPage(id);\n      return false;\n    };\n    this.anchor = anchor;\n\n    const div = document.createElement(\"div\");\n    div.className = \"thumbnail\";\n    div.setAttribute(\"data-page-number\", this.id);\n    this.div = div;\n\n    const ring = document.createElement(\"div\");\n    ring.className = \"thumbnailSelectionRing\";\n    const borderAdjustment = 2 * THUMBNAIL_CANVAS_BORDER_WIDTH;\n    ring.style.width = this.canvasWidth + borderAdjustment + \"px\";\n    ring.style.height = this.canvasHeight + borderAdjustment + \"px\";\n    this.ring = ring;\n\n    div.appendChild(ring);\n    anchor.appendChild(div);\n    container.appendChild(anchor);\n  }\n\n  setPdfPage(pdfPage) {\n    this.pdfPage = pdfPage;\n    this.pdfPageRotate = pdfPage.rotate;\n    const totalRotation = (this.rotation + this.pdfPageRotate) % 360;\n    this.viewport = pdfPage.getViewport({ scale: 1, rotation: totalRotation });\n    this.reset();\n  }\n\n  reset() {\n    this.cancelRendering();\n    this.renderingState = RenderingStates.INITIAL;\n\n    this.pageWidth = this.viewport.width;\n    this.pageHeight = this.viewport.height;\n    this.pageRatio = this.pageWidth / this.pageHeight;\n\n    this.canvasHeight = (this.canvasWidth / this.pageRatio) | 0;\n    this.scale = this.canvasWidth / this.pageWidth;\n\n    this.div.removeAttribute(\"data-loaded\");\n    const ring = this.ring;\n    const childNodes = ring.childNodes;\n    for (let i = childNodes.length - 1; i >= 0; i--) {\n      ring.removeChild(childNodes[i]);\n    }\n    const borderAdjustment = 2 * THUMBNAIL_CANVAS_BORDER_WIDTH;\n    ring.style.width = this.canvasWidth + borderAdjustment + \"px\";\n    ring.style.height = this.canvasHeight + borderAdjustment + \"px\";\n\n    if (this.canvas) {\n      // Zeroing the width and height causes Firefox to release graphics\n      // resources immediately, which can greatly reduce memory consumption.\n      this.canvas.width = 0;\n      this.canvas.height = 0;\n      delete this.canvas;\n    }\n    if (this.image) {\n      this.image.removeAttribute(\"src\");\n      delete this.image;\n    }\n  }\n\n  update(rotation) {\n    if (typeof rotation !== \"undefined\") {\n      this.rotation = rotation;\n    }\n    const totalRotation = (this.rotation + this.pdfPageRotate) % 360;\n    this.viewport = this.viewport.clone({\n      scale: 1,\n      rotation: totalRotation,\n    });\n    this.reset();\n  }\n\n  /**\n   * PLEASE NOTE: Most likely you want to use the `this.reset()` method,\n   *              rather than calling this one directly.\n   */\n  cancelRendering() {\n    if (this.renderTask) {\n      this.renderTask.cancel();\n      this.renderTask = null;\n    }\n    this.resume = null;\n  }\n\n  /**\n   * @private\n   */\n  _getPageDrawContext() {\n    const canvas = document.createElement(\"canvas\");\n    // Keep the no-thumbnail outline visible, i.e. `data-loaded === false`,\n    // until rendering/image conversion is complete, to avoid display issues.\n    this.canvas = canvas;\n\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"MOZCENTRAL || GENERIC\")\n    ) {\n      canvas.mozOpaque = true;\n    }\n    const ctx = canvas.getContext(\"2d\", { alpha: false });\n    const outputScale = getOutputScale(ctx);\n\n    canvas.width = (this.canvasWidth * outputScale.sx) | 0;\n    canvas.height = (this.canvasHeight * outputScale.sy) | 0;\n    canvas.style.width = this.canvasWidth + \"px\";\n    canvas.style.height = this.canvasHeight + \"px\";\n\n    const transform = outputScale.scaled\n      ? [outputScale.sx, 0, 0, outputScale.sy, 0, 0]\n      : null;\n\n    return [ctx, transform];\n  }\n\n  /**\n   * @private\n   */\n  _convertCanvasToImage() {\n    if (!this.canvas) {\n      return;\n    }\n    if (this.renderingState !== RenderingStates.FINISHED) {\n      return;\n    }\n    const className = \"thumbnailImage\";\n\n    if (this.disableCanvasToImageConversion) {\n      this.canvas.className = className;\n      this._thumbPageCanvas.then(msg => {\n        this.canvas.setAttribute(\"aria-label\", msg);\n      });\n\n      this.div.setAttribute(\"data-loaded\", true);\n      this.ring.appendChild(this.canvas);\n      return;\n    }\n    const image = document.createElement(\"img\");\n    image.className = className;\n    this._thumbPageCanvas.then(msg => {\n      image.setAttribute(\"aria-label\", msg);\n    });\n\n    image.style.width = this.canvasWidth + \"px\";\n    image.style.height = this.canvasHeight + \"px\";\n\n    image.src = this.canvas.toDataURL();\n    this.image = image;\n\n    this.div.setAttribute(\"data-loaded\", true);\n    this.ring.appendChild(image);\n\n    // Zeroing the width and height causes Firefox to release graphics\n    // resources immediately, which can greatly reduce memory consumption.\n    this.canvas.width = 0;\n    this.canvas.height = 0;\n    delete this.canvas;\n  }\n\n  draw() {\n    if (this.renderingState !== RenderingStates.INITIAL) {\n      console.error(\"Must be in new state before drawing\");\n      return Promise.resolve(undefined);\n    }\n    const { pdfPage } = this;\n\n    if (!pdfPage) {\n      this.renderingState = RenderingStates.FINISHED;\n      return Promise.reject(new Error(\"pdfPage is not loaded\"));\n    }\n\n    this.renderingState = RenderingStates.RUNNING;\n\n    const finishRenderTask = async (error = null) => {\n      // The renderTask may have been replaced by a new one, so only remove\n      // the reference to the renderTask if it matches the one that is\n      // triggering this callback.\n      if (renderTask === this.renderTask) {\n        this.renderTask = null;\n      }\n\n      if (error instanceof RenderingCancelledException) {\n        return;\n      }\n\n      this.renderingState = RenderingStates.FINISHED;\n      this._convertCanvasToImage();\n\n      if (error) {\n        throw error;\n      }\n    };\n\n    const [ctx, transform] = this._getPageDrawContext();\n    const drawViewport = this.viewport.clone({ scale: this.scale });\n    const renderContinueCallback = cont => {\n      if (!this.renderingQueue.isHighestPriority(this)) {\n        this.renderingState = RenderingStates.PAUSED;\n        this.resume = () => {\n          this.renderingState = RenderingStates.RUNNING;\n          cont();\n        };\n        return;\n      }\n      cont();\n    };\n\n    const renderContext = {\n      canvasContext: ctx,\n      transform,\n      viewport: drawViewport,\n      optionalContentConfigPromise: this._optionalContentConfigPromise,\n    };\n    const renderTask = (this.renderTask = pdfPage.render(renderContext));\n    renderTask.onContinue = renderContinueCallback;\n\n    const resultPromise = renderTask.promise.then(\n      function () {\n        finishRenderTask(null);\n      },\n      function (error) {\n        finishRenderTask(error);\n      }\n    );\n    // Only trigger cleanup, once rendering has finished, when the current\n    // pageView is *not* cached on the `BaseViewer`-instance.\n    resultPromise.finally(() => {\n      const pageCached = this.linkService.isPageCached(this.id);\n      if (pageCached) {\n        return;\n      }\n      this.pdfPage?.cleanup();\n    });\n\n    return resultPromise;\n  }\n\n  setImage(pageView) {\n    if (this._checkSetImageDisabled()) {\n      return;\n    }\n    if (this.renderingState !== RenderingStates.INITIAL) {\n      return;\n    }\n    const img = pageView.canvas;\n    if (!img) {\n      return;\n    }\n    if (!this.pdfPage) {\n      this.setPdfPage(pageView.pdfPage);\n    }\n\n    this.renderingState = RenderingStates.FINISHED;\n\n    const [ctx] = this._getPageDrawContext();\n    const canvas = ctx.canvas;\n    if (img.width <= 2 * canvas.width) {\n      ctx.drawImage(\n        img,\n        0,\n        0,\n        img.width,\n        img.height,\n        0,\n        0,\n        canvas.width,\n        canvas.height\n      );\n      this._convertCanvasToImage();\n      return;\n    }\n\n    // drawImage does an awful job of rescaling the image, doing it gradually.\n    let reducedWidth = canvas.width << MAX_NUM_SCALING_STEPS;\n    let reducedHeight = canvas.height << MAX_NUM_SCALING_STEPS;\n    const reducedImage = TempImageFactory.getCanvas(\n      reducedWidth,\n      reducedHeight\n    );\n    const reducedImageCtx = reducedImage.getContext(\"2d\");\n\n    while (reducedWidth > img.width || reducedHeight > img.height) {\n      reducedWidth >>= 1;\n      reducedHeight >>= 1;\n    }\n    reducedImageCtx.drawImage(\n      img,\n      0,\n      0,\n      img.width,\n      img.height,\n      0,\n      0,\n      reducedWidth,\n      reducedHeight\n    );\n    while (reducedWidth > 2 * canvas.width) {\n      reducedImageCtx.drawImage(\n        reducedImage,\n        0,\n        0,\n        reducedWidth,\n        reducedHeight,\n        0,\n        0,\n        reducedWidth >> 1,\n        reducedHeight >> 1\n      );\n      reducedWidth >>= 1;\n      reducedHeight >>= 1;\n    }\n    ctx.drawImage(\n      reducedImage,\n      0,\n      0,\n      reducedWidth,\n      reducedHeight,\n      0,\n      0,\n      canvas.width,\n      canvas.height\n    );\n    this._convertCanvasToImage();\n  }\n\n  get _thumbPageTitle() {\n    return this.l10n.get(\n      \"thumb_page_title\",\n      { page: this.pageLabel ?? this.id },\n      \"Page {{page}}\"\n    );\n  }\n\n  get _thumbPageCanvas() {\n    return this.l10n.get(\n      \"thumb_page_canvas\",\n      { page: this.pageLabel ?? this.id },\n      \"Thumbnail of Page {{page}}\"\n    );\n  }\n\n  /**\n   * @param {string|null} label\n   */\n  setPageLabel(label) {\n    this.pageLabel = typeof label === \"string\" ? label : null;\n\n    this._thumbPageTitle.then(msg => {\n      this.anchor.title = msg;\n    });\n\n    if (this.renderingState !== RenderingStates.FINISHED) {\n      return;\n    }\n\n    this._thumbPageCanvas.then(msg => {\n      if (this.image) {\n        this.image.setAttribute(\"aria-label\", msg);\n      } else if (this.disableCanvasToImageConversion && this.canvas) {\n        this.canvas.setAttribute(\"aria-label\", msg);\n      }\n    });\n  }\n}\n\nexport { PDFThumbnailView, TempImageFactory };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BaseViewer } from \"./base_viewer.js\";\nimport { shadow } from \"pdfjs-lib\";\n\nclass PDFViewer extends BaseViewer {\n  get _viewerElement() {\n    return shadow(this, \"_viewerElement\", this.viewer);\n  }\n\n  _scrollIntoView({ pageDiv, pageSpot = null, pageNumber = null }) {\n    if (!pageSpot && !this.isInPresentationMode) {\n      const left = pageDiv.offsetLeft + pageDiv.clientLeft;\n      const right = left + pageDiv.clientWidth;\n      const { scrollLeft, clientWidth } = this.container;\n      if (\n        this._isScrollModeHorizontal ||\n        left < scrollLeft ||\n        right > scrollLeft + clientWidth\n      ) {\n        pageSpot = { left: 0, top: 0 };\n      }\n    }\n    super._scrollIntoView({ pageDiv, pageSpot, pageNumber });\n  }\n\n  _getVisiblePages() {\n    if (this.isInPresentationMode) {\n      // The algorithm in `getVisibleElements` doesn't work in all browsers and\n      // configurations (e.g. Chrome) when Presentation Mode is active.\n      return this._getCurrentVisiblePage();\n    }\n    return super._getVisiblePages();\n  }\n\n  _updateHelper(visiblePages) {\n    if (this.isInPresentationMode) {\n      return;\n    }\n    let currentId = this._currentPageNumber;\n    let stillFullyVisible = false;\n\n    for (const page of visiblePages) {\n      if (page.percent < 100) {\n        break;\n      }\n      if (page.id === currentId) {\n        stillFullyVisible = true;\n        break;\n      }\n    }\n    if (!stillFullyVisible) {\n      currentId = visiblePages[0].id;\n    }\n    this._setCurrentPageNumber(currentId);\n  }\n}\n\nexport { PDFViewer };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createPromiseCapability, version } from \"pdfjs-lib\";\nimport {\n  CSS_UNITS,\n  DEFAULT_SCALE,\n  DEFAULT_SCALE_VALUE,\n  getVisibleElements,\n  isPortraitOrientation,\n  isValidRotation,\n  isValidScrollMode,\n  isValidSpreadMode,\n  MAX_AUTO_SCALE,\n  moveToEndOfArray,\n  NullL10n,\n  PresentationModeState,\n  RendererType,\n  SCROLLBAR_PADDING,\n  scrollIntoView,\n  ScrollMode,\n  SpreadMode,\n  TextLayerMode,\n  UNKNOWN_SCALE,\n  VERTICAL_PADDING,\n  watchScroll,\n} from \"./ui_utils.js\";\nimport { PDFRenderingQueue, RenderingStates } from \"./pdf_rendering_queue.js\";\nimport { AnnotationLayerBuilder } from \"./annotation_layer_builder.js\";\nimport { PDFPageView } from \"./pdf_page_view.js\";\nimport { SimpleLinkService } from \"./pdf_link_service.js\";\nimport { TextLayerBuilder } from \"./text_layer_builder.js\";\n\nconst DEFAULT_CACHE_SIZE = 10;\n\n/**\n * @typedef {Object} PDFViewerOptions\n * @property {HTMLDivElement} container - The container for the viewer element.\n * @property {HTMLDivElement} [viewer] - The viewer element.\n * @property {EventBus} eventBus - The application event bus.\n * @property {IPDFLinkService} linkService - The navigation/linking service.\n * @property {DownloadManager} [downloadManager] - The download manager\n *   component.\n * @property {PDFFindController} [findController] - The find controller\n *   component.\n * @property {PDFRenderingQueue} [renderingQueue] - The rendering queue object.\n * @property {boolean} [removePageBorders] - Removes the border shadow around\n *   the pages. The default value is `false`.\n * @property {number} [textLayerMode] - Controls if the text layer used for\n *   selection and searching is created, and if the improved text selection\n *   behaviour is enabled. The constants from {TextLayerMode} should be used.\n *   The default value is `TextLayerMode.ENABLE`.\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   mainly for annotation icons. Include trailing slash.\n * @property {boolean} [renderInteractiveForms] - Enables rendering of\n *   interactive form elements. The default value is `true`.\n * @property {boolean} [enablePrintAutoRotate] - Enables automatic rotation of\n *   landscape pages upon printing. The default is `false`.\n * @property {string} renderer - 'canvas' or 'svg'. The default is 'canvas'.\n * @property {boolean} [enableWebGL] - Enables WebGL accelerated rendering for\n *   some operations. The default value is `false`.\n * @property {boolean} [useOnlyCssZoom] - Enables CSS only zooming. The default\n *   value is `false`.\n * @property {number} [maxCanvasPixels] - The maximum supported canvas size in\n *   total pixels, i.e. width * height. Use -1 for no limit. The default value\n *   is 4096 * 4096 (16 mega-pixels).\n * @property {IL10n} l10n - Localization service.\n * @property {boolean} [enableScripting] - Enable embedded script execution.\n *   The default value is `false`.\n */\n\nfunction PDFPageViewBuffer(size) {\n  const data = [];\n  this.push = function (view) {\n    const i = data.indexOf(view);\n    if (i >= 0) {\n      data.splice(i, 1);\n    }\n    data.push(view);\n    if (data.length > size) {\n      data.shift().destroy();\n    }\n  };\n  /**\n   * After calling resize, the size of the buffer will be newSize. The optional\n   * parameter pagesToKeep is, if present, an array of pages to push to the back\n   * of the buffer, delaying their destruction. The size of pagesToKeep has no\n   * impact on the final size of the buffer; if pagesToKeep has length larger\n   * than newSize, some of those pages will be destroyed anyway.\n   */\n  this.resize = function (newSize, pagesToKeep) {\n    size = newSize;\n    if (pagesToKeep) {\n      const pageIdsToKeep = new Set();\n      for (let i = 0, iMax = pagesToKeep.length; i < iMax; ++i) {\n        pageIdsToKeep.add(pagesToKeep[i].id);\n      }\n      moveToEndOfArray(data, function (page) {\n        return pageIdsToKeep.has(page.id);\n      });\n    }\n    while (data.length > size) {\n      data.shift().destroy();\n    }\n  };\n\n  this.has = function (view) {\n    return data.includes(view);\n  };\n}\n\nfunction isSameScale(oldScale, newScale) {\n  if (newScale === oldScale) {\n    return true;\n  }\n  if (Math.abs(newScale - oldScale) < 1e-15) {\n    // Prevent unnecessary re-rendering of all pages when the scale\n    // changes only because of limited numerical precision.\n    return true;\n  }\n  return false;\n}\n\n/**\n * Simple viewer control to display PDF content/pages.\n * @implements {IRenderableView}\n */\nclass BaseViewer {\n  /**\n   * @param {PDFViewerOptions} options\n   */\n  constructor(options) {\n    if (this.constructor === BaseViewer) {\n      throw new Error(\"Cannot initialize BaseViewer.\");\n    }\n    const viewerVersion =\n      typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : null;\n    if (version !== viewerVersion) {\n      throw new Error(\n        `The API version \"${version}\" does not match the Viewer version \"${viewerVersion}\".`\n      );\n    }\n    this._name = this.constructor.name;\n\n    this.container = options.container;\n    this.viewer = options.viewer || options.container.firstElementChild;\n\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || GENERIC\")\n    ) {\n      if (\n        !(\n          this.container?.tagName.toUpperCase() === \"DIV\" &&\n          this.viewer?.tagName.toUpperCase() === \"DIV\"\n        )\n      ) {\n        throw new Error(\"Invalid `container` and/or `viewer` option.\");\n      }\n\n      if (getComputedStyle(this.container).position !== \"absolute\") {\n        throw new Error(\"The `container` must be absolutely positioned.\");\n      }\n    }\n    this.eventBus = options.eventBus;\n    this.linkService = options.linkService || new SimpleLinkService();\n    this.downloadManager = options.downloadManager || null;\n    this.findController = options.findController || null;\n    this.removePageBorders = options.removePageBorders || false;\n    this.textLayerMode = Number.isInteger(options.textLayerMode)\n      ? options.textLayerMode\n      : TextLayerMode.ENABLE;\n    this.imageResourcesPath = options.imageResourcesPath || \"\";\n    this.renderInteractiveForms =\n      typeof options.renderInteractiveForms === \"boolean\"\n        ? options.renderInteractiveForms\n        : true;\n    this.enablePrintAutoRotate = options.enablePrintAutoRotate || false;\n    this.renderer = options.renderer || RendererType.CANVAS;\n    this.enableWebGL = options.enableWebGL || false;\n    this.useOnlyCssZoom = options.useOnlyCssZoom || false;\n    this.maxCanvasPixels = options.maxCanvasPixels;\n    this.l10n = options.l10n || NullL10n;\n    this.enableScripting = options.enableScripting || false;\n\n    this.defaultRenderingQueue = !options.renderingQueue;\n    if (this.defaultRenderingQueue) {\n      // Custom rendering queue is not specified, using default one\n      this.renderingQueue = new PDFRenderingQueue();\n      this.renderingQueue.setViewer(this);\n    } else {\n      this.renderingQueue = options.renderingQueue;\n    }\n\n    this.scroll = watchScroll(this.container, this._scrollUpdate.bind(this));\n    this.presentationModeState = PresentationModeState.UNKNOWN;\n    this._onBeforeDraw = this._onAfterDraw = null;\n    this._resetView();\n\n    if (this.removePageBorders) {\n      this.viewer.classList.add(\"removePageBorders\");\n    }\n    // Defer the dispatching of this event, to give other viewer components\n    // time to initialize *and* register 'baseviewerinit' event listeners.\n    Promise.resolve().then(() => {\n      this.eventBus.dispatch(\"baseviewerinit\", { source: this });\n    });\n  }\n\n  get pagesCount() {\n    return this._pages.length;\n  }\n\n  getPageView(index) {\n    return this._pages[index];\n  }\n\n  /**\n   * @type {boolean} - True if all {PDFPageView} objects are initialized.\n   */\n  get pageViewsReady() {\n    if (!this._pagesCapability.settled) {\n      return false;\n    }\n    // Prevent printing errors when 'disableAutoFetch' is set, by ensuring\n    // that *all* pages have in fact been completely loaded.\n    return this._pages.every(function (pageView) {\n      return pageView && pageView.pdfPage;\n    });\n  }\n\n  /**\n   * @type {number}\n   */\n  get currentPageNumber() {\n    return this._currentPageNumber;\n  }\n\n  /**\n   * @param {number} val - The page number.\n   */\n  set currentPageNumber(val) {\n    if (!Number.isInteger(val)) {\n      throw new Error(\"Invalid page number.\");\n    }\n    if (!this.pdfDocument) {\n      return;\n    }\n    // The intent can be to just reset a scroll position and/or scale.\n    if (!this._setCurrentPageNumber(val, /* resetCurrentPageView = */ true)) {\n      console.error(\n        `${this._name}.currentPageNumber: \"${val}\" is not a valid page.`\n      );\n    }\n  }\n\n  /**\n   * @returns {boolean} Whether the pageNumber is valid (within bounds).\n   * @private\n   */\n  _setCurrentPageNumber(val, resetCurrentPageView = false) {\n    if (this._currentPageNumber === val) {\n      if (resetCurrentPageView) {\n        this._resetCurrentPageView();\n      }\n      return true;\n    }\n\n    if (!(0 < val && val <= this.pagesCount)) {\n      return false;\n    }\n    this._currentPageNumber = val;\n\n    this.eventBus.dispatch(\"pagechanging\", {\n      source: this,\n      pageNumber: val,\n      pageLabel: this._pageLabels && this._pageLabels[val - 1],\n    });\n\n    if (resetCurrentPageView) {\n      this._resetCurrentPageView();\n    }\n    return true;\n  }\n\n  /**\n   * @type {string|null} Returns the current page label, or `null` if no page\n   *   labels exist.\n   */\n  get currentPageLabel() {\n    return this._pageLabels && this._pageLabels[this._currentPageNumber - 1];\n  }\n\n  /**\n   * @param {string} val - The page label.\n   */\n  set currentPageLabel(val) {\n    if (!this.pdfDocument) {\n      return;\n    }\n    let page = val | 0; // Fallback page number.\n    if (this._pageLabels) {\n      const i = this._pageLabels.indexOf(val);\n      if (i >= 0) {\n        page = i + 1;\n      }\n    }\n    // The intent can be to just reset a scroll position and/or scale.\n    if (!this._setCurrentPageNumber(page, /* resetCurrentPageView = */ true)) {\n      console.error(\n        `${this._name}.currentPageLabel: \"${val}\" is not a valid page.`\n      );\n    }\n  }\n\n  /**\n   * @type {number}\n   */\n  get currentScale() {\n    return this._currentScale !== UNKNOWN_SCALE\n      ? this._currentScale\n      : DEFAULT_SCALE;\n  }\n\n  /**\n   * @param {number} val - Scale of the pages in percents.\n   */\n  set currentScale(val) {\n    if (isNaN(val)) {\n      throw new Error(\"Invalid numeric scale.\");\n    }\n    if (!this.pdfDocument) {\n      return;\n    }\n    this._setScale(val, false);\n  }\n\n  /**\n   * @type {string}\n   */\n  get currentScaleValue() {\n    return this._currentScaleValue;\n  }\n\n  /**\n   * @param val - The scale of the pages (in percent or predefined value).\n   */\n  set currentScaleValue(val) {\n    if (!this.pdfDocument) {\n      return;\n    }\n    this._setScale(val, false);\n  }\n\n  /**\n   * @type {number}\n   */\n  get pagesRotation() {\n    return this._pagesRotation;\n  }\n\n  /**\n   * @param {number} rotation - The rotation of the pages (0, 90, 180, 270).\n   */\n  set pagesRotation(rotation) {\n    if (!isValidRotation(rotation)) {\n      throw new Error(\"Invalid pages rotation angle.\");\n    }\n    if (!this.pdfDocument) {\n      return;\n    }\n    if (this._pagesRotation === rotation) {\n      return; // The rotation didn't change.\n    }\n    this._pagesRotation = rotation;\n\n    const pageNumber = this._currentPageNumber;\n\n    for (let i = 0, ii = this._pages.length; i < ii; i++) {\n      const pageView = this._pages[i];\n      pageView.update(pageView.scale, rotation);\n    }\n    // Prevent errors in case the rotation changes *before* the scale has been\n    // set to a non-default value.\n    if (this._currentScaleValue) {\n      this._setScale(this._currentScaleValue, true);\n    }\n\n    this.eventBus.dispatch(\"rotationchanging\", {\n      source: this,\n      pagesRotation: rotation,\n      pageNumber,\n    });\n\n    if (this.defaultRenderingQueue) {\n      this.update();\n    }\n  }\n\n  get firstPagePromise() {\n    return this.pdfDocument ? this._firstPageCapability.promise : null;\n  }\n\n  get onePageRendered() {\n    return this.pdfDocument ? this._onePageRenderedCapability.promise : null;\n  }\n\n  get pagesPromise() {\n    return this.pdfDocument ? this._pagesCapability.promise : null;\n  }\n\n  /**\n   * @private\n   */\n  get _viewerElement() {\n    // In most viewers, e.g. `PDFViewer`, this should return `this.viewer`.\n    throw new Error(\"Not implemented: _viewerElement\");\n  }\n\n  /**\n   * @private\n   */\n  _onePageRenderedOrForceFetch() {\n    // Unless the viewer *and* its pages are visible, rendering won't start and\n    // `this._onePageRenderedCapability` thus won't be resolved.\n    // To ensure that automatic printing, on document load, still works even in\n    // those cases we force-allow fetching of all pages when:\n    //  - The viewer is hidden in the DOM, e.g. in a `display: none` <iframe>\n    //    element; fixes bug 1618621.\n    //  - The viewer is visible, but none of the pages are (e.g. if the\n    //    viewer is very small); fixes bug 1618955.\n    if (\n      !this.container.offsetParent ||\n      this._getVisiblePages().views.length === 0\n    ) {\n      return Promise.resolve();\n    }\n    return this._onePageRenderedCapability.promise;\n  }\n\n  /**\n   * @param pdfDocument {PDFDocument}\n   */\n  setDocument(pdfDocument) {\n    if (this.pdfDocument) {\n      this._cancelRendering();\n      this._resetView();\n\n      if (this.findController) {\n        this.findController.setDocument(null);\n      }\n    }\n\n    this.pdfDocument = pdfDocument;\n    if (!pdfDocument) {\n      return;\n    }\n    const pagesCount = pdfDocument.numPages;\n    const firstPagePromise = pdfDocument.getPage(1);\n    // Rendering (potentially) depends on this, hence fetching it immediately.\n    const optionalContentConfigPromise = pdfDocument.getOptionalContentConfig();\n\n    this._pagesCapability.promise.then(() => {\n      this.eventBus.dispatch(\"pagesloaded\", {\n        source: this,\n        pagesCount,\n      });\n    });\n\n    this._onBeforeDraw = evt => {\n      const pageView = this._pages[evt.pageNumber - 1];\n      if (!pageView) {\n        return;\n      }\n      // Add the page to the buffer at the start of drawing. That way it can be\n      // evicted from the buffer and destroyed even if we pause its rendering.\n      this._buffer.push(pageView);\n    };\n    this.eventBus._on(\"pagerender\", this._onBeforeDraw);\n\n    this._onAfterDraw = evt => {\n      if (evt.cssTransform || this._onePageRenderedCapability.settled) {\n        return;\n      }\n      this._onePageRenderedCapability.resolve();\n\n      this.eventBus._off(\"pagerendered\", this._onAfterDraw);\n      this._onAfterDraw = null;\n    };\n    this.eventBus._on(\"pagerendered\", this._onAfterDraw);\n\n    // Fetch a single page so we can get a viewport that will be the default\n    // viewport for all pages\n    firstPagePromise\n      .then(firstPdfPage => {\n        this._firstPageCapability.resolve(firstPdfPage);\n        this._optionalContentConfigPromise = optionalContentConfigPromise;\n\n        const scale = this.currentScale;\n        const viewport = firstPdfPage.getViewport({ scale: scale * CSS_UNITS });\n        const textLayerFactory =\n          this.textLayerMode !== TextLayerMode.DISABLE ? this : null;\n\n        for (let pageNum = 1; pageNum <= pagesCount; ++pageNum) {\n          const pageView = new PDFPageView({\n            container: this._viewerElement,\n            eventBus: this.eventBus,\n            id: pageNum,\n            scale,\n            defaultViewport: viewport.clone(),\n            optionalContentConfigPromise,\n            renderingQueue: this.renderingQueue,\n            textLayerFactory,\n            textLayerMode: this.textLayerMode,\n            annotationLayerFactory: this,\n            imageResourcesPath: this.imageResourcesPath,\n            renderInteractiveForms: this.renderInteractiveForms,\n            renderer: this.renderer,\n            enableWebGL: this.enableWebGL,\n            useOnlyCssZoom: this.useOnlyCssZoom,\n            maxCanvasPixels: this.maxCanvasPixels,\n            l10n: this.l10n,\n            enableScripting: this.enableScripting,\n          });\n          this._pages.push(pageView);\n        }\n        // Set the first `pdfPage` immediately, since it's already loaded,\n        // rather than having to repeat the `PDFDocumentProxy.getPage` call in\n        // the `this._ensurePdfPageLoaded` method before rendering can start.\n        const firstPageView = this._pages[0];\n        if (firstPageView) {\n          firstPageView.setPdfPage(firstPdfPage);\n          this.linkService.cachePageRef(1, firstPdfPage.ref);\n        }\n        if (this._spreadMode !== SpreadMode.NONE) {\n          this._updateSpreadMode();\n        }\n\n        // Fetch all the pages since the viewport is needed before printing\n        // starts to create the correct size canvas. Wait until one page is\n        // rendered so we don't tie up too many resources early on.\n        this._onePageRenderedOrForceFetch().then(() => {\n          if (this.findController) {\n            this.findController.setDocument(pdfDocument); // Enable searching.\n          }\n\n          // In addition to 'disableAutoFetch' being set, also attempt to reduce\n          // resource usage when loading *very* long/large documents.\n          if (pdfDocument.loadingParams.disableAutoFetch || pagesCount > 7500) {\n            // XXX: Printing is semi-broken with auto fetch disabled.\n            this._pagesCapability.resolve();\n            return;\n          }\n          let getPagesLeft = pagesCount - 1; // The first page was already loaded.\n\n          if (getPagesLeft <= 0) {\n            this._pagesCapability.resolve();\n            return;\n          }\n          for (let pageNum = 2; pageNum <= pagesCount; ++pageNum) {\n            pdfDocument.getPage(pageNum).then(\n              pdfPage => {\n                const pageView = this._pages[pageNum - 1];\n                if (!pageView.pdfPage) {\n                  pageView.setPdfPage(pdfPage);\n                }\n                this.linkService.cachePageRef(pageNum, pdfPage.ref);\n                if (--getPagesLeft === 0) {\n                  this._pagesCapability.resolve();\n                }\n              },\n              reason => {\n                console.error(\n                  `Unable to get page ${pageNum} to initialize viewer`,\n                  reason\n                );\n                if (--getPagesLeft === 0) {\n                  this._pagesCapability.resolve();\n                }\n              }\n            );\n          }\n        });\n\n        this.eventBus.dispatch(\"pagesinit\", { source: this });\n\n        if (this.defaultRenderingQueue) {\n          this.update();\n        }\n      })\n      .catch(reason => {\n        console.error(\"Unable to initialize viewer\", reason);\n      });\n  }\n\n  /**\n   * @param {Array|null} labels\n   */\n  setPageLabels(labels) {\n    if (!this.pdfDocument) {\n      return;\n    }\n    if (!labels) {\n      this._pageLabels = null;\n    } else if (\n      !(Array.isArray(labels) && this.pdfDocument.numPages === labels.length)\n    ) {\n      this._pageLabels = null;\n      console.error(`${this._name}.setPageLabels: Invalid page labels.`);\n    } else {\n      this._pageLabels = labels;\n    }\n    // Update all the `PDFPageView` instances.\n    for (let i = 0, ii = this._pages.length; i < ii; i++) {\n      const pageView = this._pages[i];\n      const label = this._pageLabels && this._pageLabels[i];\n      pageView.setPageLabel(label);\n    }\n  }\n\n  _resetView() {\n    this._pages = [];\n    this._currentPageNumber = 1;\n    this._currentScale = UNKNOWN_SCALE;\n    this._currentScaleValue = null;\n    this._pageLabels = null;\n    this._buffer = new PDFPageViewBuffer(DEFAULT_CACHE_SIZE);\n    this._location = null;\n    this._pagesRotation = 0;\n    this._optionalContentConfigPromise = null;\n    this._pagesRequests = new WeakMap();\n    this._firstPageCapability = createPromiseCapability();\n    this._onePageRenderedCapability = createPromiseCapability();\n    this._pagesCapability = createPromiseCapability();\n    this._scrollMode = ScrollMode.VERTICAL;\n    this._spreadMode = SpreadMode.NONE;\n\n    if (this._onBeforeDraw) {\n      this.eventBus._off(\"pagerender\", this._onBeforeDraw);\n      this._onBeforeDraw = null;\n    }\n    if (this._onAfterDraw) {\n      this.eventBus._off(\"pagerendered\", this._onAfterDraw);\n      this._onAfterDraw = null;\n    }\n    // Remove the pages from the DOM...\n    this.viewer.textContent = \"\";\n    // ... and reset the Scroll mode CSS class(es) afterwards.\n    this._updateScrollMode();\n  }\n\n  _scrollUpdate() {\n    if (this.pagesCount === 0) {\n      return;\n    }\n    this.update();\n  }\n\n  _scrollIntoView({ pageDiv, pageSpot = null, pageNumber = null }) {\n    scrollIntoView(pageDiv, pageSpot);\n  }\n\n  _setScaleUpdatePages(newScale, newValue, noScroll = false, preset = false) {\n    this._currentScaleValue = newValue.toString();\n\n    if (isSameScale(this._currentScale, newScale)) {\n      if (preset) {\n        this.eventBus.dispatch(\"scalechanging\", {\n          source: this,\n          scale: newScale,\n          presetValue: newValue,\n        });\n      }\n      return;\n    }\n\n    for (let i = 0, ii = this._pages.length; i < ii; i++) {\n      this._pages[i].update(newScale);\n    }\n    this._currentScale = newScale;\n\n    if (!noScroll) {\n      let page = this._currentPageNumber,\n        dest;\n      if (\n        this._location &&\n        !(this.isInPresentationMode || this.isChangingPresentationMode)\n      ) {\n        page = this._location.pageNumber;\n        dest = [\n          null,\n          { name: \"XYZ\" },\n          this._location.left,\n          this._location.top,\n          null,\n        ];\n      }\n      this.scrollPageIntoView({\n        pageNumber: page,\n        destArray: dest,\n        allowNegativeOffset: true,\n      });\n    }\n\n    this.eventBus.dispatch(\"scalechanging\", {\n      source: this,\n      scale: newScale,\n      presetValue: preset ? newValue : undefined,\n    });\n\n    if (this.defaultRenderingQueue) {\n      this.update();\n    }\n  }\n\n  _setScale(value, noScroll = false) {\n    let scale = parseFloat(value);\n\n    if (scale > 0) {\n      this._setScaleUpdatePages(scale, value, noScroll, /* preset = */ false);\n    } else {\n      const currentPage = this._pages[this._currentPageNumber - 1];\n      if (!currentPage) {\n        return;\n      }\n      const noPadding = this.isInPresentationMode || this.removePageBorders;\n      let hPadding = noPadding ? 0 : SCROLLBAR_PADDING;\n      let vPadding = noPadding ? 0 : VERTICAL_PADDING;\n\n      if (!noPadding && this._isScrollModeHorizontal) {\n        [hPadding, vPadding] = [vPadding, hPadding]; // Swap the padding values.\n      }\n      const pageWidthScale =\n        ((this.container.clientWidth - hPadding) / currentPage.width) *\n        currentPage.scale;\n      const pageHeightScale =\n        ((this.container.clientHeight - vPadding) / currentPage.height) *\n        currentPage.scale;\n      switch (value) {\n        case \"page-actual\":\n          scale = 1;\n          break;\n        case \"page-width\":\n          scale = pageWidthScale;\n          break;\n        case \"page-height\":\n          scale = pageHeightScale;\n          break;\n        case \"page-fit\":\n          scale = Math.min(pageWidthScale, pageHeightScale);\n          break;\n        case \"auto\":\n          // For pages in landscape mode, fit the page height to the viewer\n          // *unless* the page would thus become too wide to fit horizontally.\n          const horizontalScale = isPortraitOrientation(currentPage)\n            ? pageWidthScale\n            : Math.min(pageHeightScale, pageWidthScale);\n          scale = Math.min(MAX_AUTO_SCALE, horizontalScale);\n          break;\n        default:\n          console.error(\n            `${this._name}._setScale: \"${value}\" is an unknown zoom value.`\n          );\n          return;\n      }\n      this._setScaleUpdatePages(scale, value, noScroll, /* preset = */ true);\n    }\n  }\n\n  /**\n   * Refreshes page view: scrolls to the current page and updates the scale.\n   * @private\n   */\n  _resetCurrentPageView() {\n    if (this.isInPresentationMode) {\n      // Fixes the case when PDF has different page sizes.\n      this._setScale(this._currentScaleValue, true);\n    }\n\n    const pageView = this._pages[this._currentPageNumber - 1];\n    this._scrollIntoView({ pageDiv: pageView.div });\n  }\n\n  /**\n   * @param {string} label - The page label.\n   * @returns {number|null} The page number corresponding to the page label,\n   *   or `null` when no page labels exist and/or the input is invalid.\n   */\n  pageLabelToPageNumber(label) {\n    if (!this._pageLabels) {\n      return null;\n    }\n    const i = this._pageLabels.indexOf(label);\n    if (i < 0) {\n      return null;\n    }\n    return i + 1;\n  }\n\n  /**\n   * @typedef ScrollPageIntoViewParameters\n   * @property {number} pageNumber - The page number.\n   * @property {Array} [destArray] - The original PDF destination array, in the\n   *   format: <page-ref> </XYZ|/FitXXX> <args..>\n   * @property {boolean} [allowNegativeOffset] - Allow negative page offsets.\n   *   The default value is `false`.\n   * @property {boolean} [ignoreDestinationZoom] - Ignore the zoom argument in\n   *   the destination array. The default value is `false`.\n   */\n\n  /**\n   * Scrolls page into view.\n   * @param {ScrollPageIntoViewParameters} params\n   */\n  scrollPageIntoView({\n    pageNumber,\n    destArray = null,\n    allowNegativeOffset = false,\n    ignoreDestinationZoom = false,\n  }) {\n    if (!this.pdfDocument) {\n      return;\n    }\n    const pageView =\n      Number.isInteger(pageNumber) && this._pages[pageNumber - 1];\n    if (!pageView) {\n      console.error(\n        `${this._name}.scrollPageIntoView: ` +\n          `\"${pageNumber}\" is not a valid pageNumber parameter.`\n      );\n      return;\n    }\n\n    if (this.isInPresentationMode || !destArray) {\n      this._setCurrentPageNumber(pageNumber, /* resetCurrentPageView = */ true);\n      return;\n    }\n    let x = 0,\n      y = 0;\n    let width = 0,\n      height = 0,\n      widthScale,\n      heightScale;\n    const changeOrientation = pageView.rotation % 180 !== 0;\n    const pageWidth =\n      (changeOrientation ? pageView.height : pageView.width) /\n      pageView.scale /\n      CSS_UNITS;\n    const pageHeight =\n      (changeOrientation ? pageView.width : pageView.height) /\n      pageView.scale /\n      CSS_UNITS;\n    let scale = 0;\n    switch (destArray[1].name) {\n      case \"XYZ\":\n        x = destArray[2];\n        y = destArray[3];\n        scale = destArray[4];\n        // If x and/or y coordinates are not supplied, default to\n        // _top_ left of the page (not the obvious bottom left,\n        // since aligning the bottom of the intended page with the\n        // top of the window is rarely helpful).\n        x = x !== null ? x : 0;\n        y = y !== null ? y : pageHeight;\n        break;\n      case \"Fit\":\n      case \"FitB\":\n        scale = \"page-fit\";\n        break;\n      case \"FitH\":\n      case \"FitBH\":\n        y = destArray[2];\n        scale = \"page-width\";\n        // According to the PDF spec, section 12.3.2.2, a `null` value in the\n        // parameter should maintain the position relative to the new page.\n        if (y === null && this._location) {\n          x = this._location.left;\n          y = this._location.top;\n        } else if (typeof y !== \"number\") {\n          // The \"top\" value isn't optional, according to the spec, however some\n          // bad PDF generators will pretend that it is (fixes bug 1663390).\n          y = pageHeight;\n        }\n        break;\n      case \"FitV\":\n      case \"FitBV\":\n        x = destArray[2];\n        width = pageWidth;\n        height = pageHeight;\n        scale = \"page-height\";\n        break;\n      case \"FitR\":\n        x = destArray[2];\n        y = destArray[3];\n        width = destArray[4] - x;\n        height = destArray[5] - y;\n        const hPadding = this.removePageBorders ? 0 : SCROLLBAR_PADDING;\n        const vPadding = this.removePageBorders ? 0 : VERTICAL_PADDING;\n\n        widthScale =\n          (this.container.clientWidth - hPadding) / width / CSS_UNITS;\n        heightScale =\n          (this.container.clientHeight - vPadding) / height / CSS_UNITS;\n        scale = Math.min(Math.abs(widthScale), Math.abs(heightScale));\n        break;\n      default:\n        console.error(\n          `${this._name}.scrollPageIntoView: ` +\n            `\"${destArray[1].name}\" is not a valid destination type.`\n        );\n        return;\n    }\n\n    if (!ignoreDestinationZoom) {\n      if (scale && scale !== this._currentScale) {\n        this.currentScaleValue = scale;\n      } else if (this._currentScale === UNKNOWN_SCALE) {\n        this.currentScaleValue = DEFAULT_SCALE_VALUE;\n      }\n    }\n\n    if (scale === \"page-fit\" && !destArray[4]) {\n      this._scrollIntoView({\n        pageDiv: pageView.div,\n        pageNumber,\n      });\n      return;\n    }\n\n    const boundingRect = [\n      pageView.viewport.convertToViewportPoint(x, y),\n      pageView.viewport.convertToViewportPoint(x + width, y + height),\n    ];\n    let left = Math.min(boundingRect[0][0], boundingRect[1][0]);\n    let top = Math.min(boundingRect[0][1], boundingRect[1][1]);\n\n    if (!allowNegativeOffset) {\n      // Some bad PDF generators will create destinations with e.g. top values\n      // that exceeds the page height. Ensure that offsets are not negative,\n      // to prevent a previous page from becoming visible (fixes bug 874482).\n      left = Math.max(left, 0);\n      top = Math.max(top, 0);\n    }\n    this._scrollIntoView({\n      pageDiv: pageView.div,\n      pageSpot: { left, top },\n      pageNumber,\n    });\n  }\n\n  _updateLocation(firstPage) {\n    const currentScale = this._currentScale;\n    const currentScaleValue = this._currentScaleValue;\n    const normalizedScaleValue =\n      parseFloat(currentScaleValue) === currentScale\n        ? Math.round(currentScale * 10000) / 100\n        : currentScaleValue;\n\n    const pageNumber = firstPage.id;\n    let pdfOpenParams = \"#page=\" + pageNumber;\n    pdfOpenParams += \"&zoom=\" + normalizedScaleValue;\n    const currentPageView = this._pages[pageNumber - 1];\n    const container = this.container;\n    const topLeft = currentPageView.getPagePoint(\n      container.scrollLeft - firstPage.x,\n      container.scrollTop - firstPage.y\n    );\n    const intLeft = Math.round(topLeft[0]);\n    const intTop = Math.round(topLeft[1]);\n    pdfOpenParams += \",\" + intLeft + \",\" + intTop;\n\n    this._location = {\n      pageNumber,\n      scale: normalizedScaleValue,\n      top: intTop,\n      left: intLeft,\n      rotation: this._pagesRotation,\n      pdfOpenParams,\n    };\n  }\n\n  _updateHelper(visiblePages) {\n    throw new Error(\"Not implemented: _updateHelper\");\n  }\n\n  update() {\n    const visible = this._getVisiblePages();\n    const visiblePages = visible.views,\n      numVisiblePages = visiblePages.length;\n\n    if (numVisiblePages === 0) {\n      return;\n    }\n    const newCacheSize = Math.max(DEFAULT_CACHE_SIZE, 2 * numVisiblePages + 1);\n    this._buffer.resize(newCacheSize, visiblePages);\n\n    this.renderingQueue.renderHighestPriority(visible);\n\n    this._updateHelper(visiblePages); // Run any class-specific update code.\n\n    this._updateLocation(visible.first);\n    this.eventBus.dispatch(\"updateviewarea\", {\n      source: this,\n      location: this._location,\n    });\n  }\n\n  containsElement(element) {\n    return this.container.contains(element);\n  }\n\n  focus() {\n    this.container.focus();\n  }\n\n  get _isScrollModeHorizontal() {\n    // Used to ensure that pre-rendering of the next/previous page works\n    // correctly, since Scroll/Spread modes are ignored in Presentation Mode.\n    return this.isInPresentationMode\n      ? false\n      : this._scrollMode === ScrollMode.HORIZONTAL;\n  }\n\n  get _isContainerRtl() {\n    return getComputedStyle(this.container).direction === \"rtl\";\n  }\n\n  get isInPresentationMode() {\n    return this.presentationModeState === PresentationModeState.FULLSCREEN;\n  }\n\n  get isChangingPresentationMode() {\n    return this.presentationModeState === PresentationModeState.CHANGING;\n  }\n\n  get isHorizontalScrollbarEnabled() {\n    return this.isInPresentationMode\n      ? false\n      : this.container.scrollWidth > this.container.clientWidth;\n  }\n\n  get isVerticalScrollbarEnabled() {\n    return this.isInPresentationMode\n      ? false\n      : this.container.scrollHeight > this.container.clientHeight;\n  }\n\n  /**\n   * Helper method for `this._getVisiblePages`. Should only ever be used when\n   * the viewer can only display a single page at a time, for example in:\n   *  - `PDFSinglePageViewer`.\n   *  - `PDFViewer` with Presentation Mode active.\n   */\n  _getCurrentVisiblePage() {\n    if (!this.pagesCount) {\n      return { views: [] };\n    }\n    const pageView = this._pages[this._currentPageNumber - 1];\n    // NOTE: Compute the `x` and `y` properties of the current view,\n    // since `this._updateLocation` depends of them being available.\n    const element = pageView.div;\n\n    const view = {\n      id: pageView.id,\n      x: element.offsetLeft + element.clientLeft,\n      y: element.offsetTop + element.clientTop,\n      view: pageView,\n    };\n    return { first: view, last: view, views: [view] };\n  }\n\n  _getVisiblePages() {\n    return getVisibleElements({\n      scrollEl: this.container,\n      views: this._pages,\n      sortByVisibility: true,\n      horizontal: this._isScrollModeHorizontal,\n      rtl: this._isScrollModeHorizontal && this._isContainerRtl,\n    });\n  }\n\n  /**\n   * @param {number} pageNumber\n   */\n  isPageVisible(pageNumber) {\n    if (!this.pdfDocument) {\n      return false;\n    }\n    if (\n      !(\n        Number.isInteger(pageNumber) &&\n        pageNumber > 0 &&\n        pageNumber <= this.pagesCount\n      )\n    ) {\n      console.error(\n        `${this._name}.isPageVisible: \"${pageNumber}\" is not a valid page.`\n      );\n      return false;\n    }\n    return this._getVisiblePages().views.some(function (view) {\n      return view.id === pageNumber;\n    });\n  }\n\n  /**\n   * @param {number} pageNumber\n   */\n  isPageCached(pageNumber) {\n    if (!this.pdfDocument || !this._buffer) {\n      return false;\n    }\n    if (\n      !(\n        Number.isInteger(pageNumber) &&\n        pageNumber > 0 &&\n        pageNumber <= this.pagesCount\n      )\n    ) {\n      console.error(\n        `${this._name}.isPageCached: \"${pageNumber}\" is not a valid page.`\n      );\n      return false;\n    }\n    const pageView = this._pages[pageNumber - 1];\n    if (!pageView) {\n      return false;\n    }\n    return this._buffer.has(pageView);\n  }\n\n  cleanup() {\n    for (let i = 0, ii = this._pages.length; i < ii; i++) {\n      if (\n        this._pages[i] &&\n        this._pages[i].renderingState !== RenderingStates.FINISHED\n      ) {\n        this._pages[i].reset();\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  _cancelRendering() {\n    for (let i = 0, ii = this._pages.length; i < ii; i++) {\n      if (this._pages[i]) {\n        this._pages[i].cancelRendering();\n      }\n    }\n  }\n\n  /**\n   * @param {PDFPageView} pageView\n   * @returns {Promise} Returns a promise containing a {PDFPageProxy} object.\n   * @private\n   */\n  _ensurePdfPageLoaded(pageView) {\n    if (pageView.pdfPage) {\n      return Promise.resolve(pageView.pdfPage);\n    }\n    if (this._pagesRequests.has(pageView)) {\n      return this._pagesRequests.get(pageView);\n    }\n    const promise = this.pdfDocument\n      .getPage(pageView.id)\n      .then(pdfPage => {\n        if (!pageView.pdfPage) {\n          pageView.setPdfPage(pdfPage);\n        }\n        this._pagesRequests.delete(pageView);\n        return pdfPage;\n      })\n      .catch(reason => {\n        console.error(\"Unable to get page for page view\", reason);\n        // Page error -- there is nothing that can be done.\n        this._pagesRequests.delete(pageView);\n      });\n    this._pagesRequests.set(pageView, promise);\n    return promise;\n  }\n\n  forceRendering(currentlyVisiblePages) {\n    const visiblePages = currentlyVisiblePages || this._getVisiblePages();\n    const scrollAhead = this._isScrollModeHorizontal\n      ? this.scroll.right\n      : this.scroll.down;\n    const pageView = this.renderingQueue.getHighestPriority(\n      visiblePages,\n      this._pages,\n      scrollAhead\n    );\n    if (pageView) {\n      this._ensurePdfPageLoaded(pageView).then(() => {\n        this.renderingQueue.renderView(pageView);\n      });\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @param {HTMLDivElement} textLayerDiv\n   * @param {number} pageIndex\n   * @param {PageViewport} viewport\n   * @param {boolean} enhanceTextSelection\n   * @param {EventBus} eventBus\n   * @returns {TextLayerBuilder}\n   */\n  createTextLayerBuilder(\n    textLayerDiv,\n    pageIndex,\n    viewport,\n    enhanceTextSelection = false,\n    eventBus\n  ) {\n    return new TextLayerBuilder({\n      textLayerDiv,\n      eventBus,\n      pageIndex,\n      viewport,\n      findController: this.isInPresentationMode ? null : this.findController,\n      enhanceTextSelection: this.isInPresentationMode\n        ? false\n        : enhanceTextSelection,\n    });\n  }\n\n  /**\n   * @param {HTMLDivElement} pageDiv\n   * @param {PDFPage} pdfPage\n   * @param {AnnotationStorage} [annotationStorage] - Storage for annotation\n   *   data in forms.\n   * @param {string} [imageResourcesPath] - Path for image resources, mainly\n   *   for annotation icons. Include trailing slash.\n   * @param {boolean} renderInteractiveForms\n   * @param {IL10n} l10n\n   * @param {boolean} [enableScripting]\n   * @param {Promise<boolean>} [hasJSActionsPromise]\n   * @returns {AnnotationLayerBuilder}\n   */\n  createAnnotationLayerBuilder(\n    pageDiv,\n    pdfPage,\n    annotationStorage = null,\n    imageResourcesPath = \"\",\n    renderInteractiveForms = false,\n    l10n = NullL10n,\n    enableScripting = false,\n    hasJSActionsPromise = null\n  ) {\n    return new AnnotationLayerBuilder({\n      pageDiv,\n      pdfPage,\n      annotationStorage:\n        annotationStorage || this.pdfDocument?.annotationStorage,\n      imageResourcesPath,\n      renderInteractiveForms,\n      linkService: this.linkService,\n      downloadManager: this.downloadManager,\n      l10n,\n      enableScripting,\n      hasJSActionsPromise:\n        hasJSActionsPromise || this.pdfDocument?.hasJSActions(),\n    });\n  }\n\n  /**\n   * @type {boolean} Whether all pages of the PDF document have identical\n   *   widths and heights.\n   */\n  get hasEqualPageSizes() {\n    const firstPageView = this._pages[0];\n    for (let i = 1, ii = this._pages.length; i < ii; ++i) {\n      const pageView = this._pages[i];\n      if (\n        pageView.width !== firstPageView.width ||\n        pageView.height !== firstPageView.height\n      ) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Returns sizes of the pages.\n   * @returns {Array} Array of objects with width/height/rotation fields.\n   */\n  getPagesOverview() {\n    const pagesOverview = this._pages.map(function (pageView) {\n      const viewport = pageView.pdfPage.getViewport({ scale: 1 });\n      return {\n        width: viewport.width,\n        height: viewport.height,\n        rotation: viewport.rotation,\n      };\n    });\n    if (!this.enablePrintAutoRotate) {\n      return pagesOverview;\n    }\n    return pagesOverview.map(function (size) {\n      if (isPortraitOrientation(size)) {\n        return size;\n      }\n      return {\n        width: size.height,\n        height: size.width,\n        rotation: (size.rotation + 90) % 360,\n      };\n    });\n  }\n\n  /**\n   * @type {Promise<OptionalContentConfig | null>}\n   */\n  get optionalContentConfigPromise() {\n    if (!this.pdfDocument) {\n      return Promise.resolve(null);\n    }\n    if (!this._optionalContentConfigPromise) {\n      // Prevent issues if the getter is accessed *before* the `onePageRendered`\n      // promise has resolved; won't (normally) happen in the default viewer.\n      return this.pdfDocument.getOptionalContentConfig();\n    }\n    return this._optionalContentConfigPromise;\n  }\n\n  /**\n   * @param {Promise<OptionalContentConfig>} promise - A promise that is\n   *   resolved with an {@link OptionalContentConfig} instance.\n   */\n  set optionalContentConfigPromise(promise) {\n    if (!(promise instanceof Promise)) {\n      throw new Error(`Invalid optionalContentConfigPromise: ${promise}`);\n    }\n    if (!this.pdfDocument) {\n      return;\n    }\n    if (!this._optionalContentConfigPromise) {\n      // Ignore the setter *before* the `onePageRendered` promise has resolved,\n      // since it'll be overwritten anyway; won't happen in the default viewer.\n      return;\n    }\n    this._optionalContentConfigPromise = promise;\n\n    for (const pageView of this._pages) {\n      pageView.update(pageView.scale, pageView.rotation, promise);\n    }\n    this.update();\n\n    this.eventBus.dispatch(\"optionalcontentconfigchanged\", {\n      source: this,\n      promise,\n    });\n  }\n\n  /**\n   * @type {number} One of the values in {ScrollMode}.\n   */\n  get scrollMode() {\n    return this._scrollMode;\n  }\n\n  /**\n   * @param {number} mode - The direction in which the document pages should be\n   *   laid out within the scrolling container.\n   *   The constants from {ScrollMode} should be used.\n   */\n  set scrollMode(mode) {\n    if (this._scrollMode === mode) {\n      return; // The Scroll mode didn't change.\n    }\n    if (!isValidScrollMode(mode)) {\n      throw new Error(`Invalid scroll mode: ${mode}`);\n    }\n    this._scrollMode = mode;\n    this.eventBus.dispatch(\"scrollmodechanged\", { source: this, mode });\n\n    this._updateScrollMode(/* pageNumber = */ this._currentPageNumber);\n  }\n\n  _updateScrollMode(pageNumber = null) {\n    const scrollMode = this._scrollMode,\n      viewer = this.viewer;\n\n    viewer.classList.toggle(\n      \"scrollHorizontal\",\n      scrollMode === ScrollMode.HORIZONTAL\n    );\n    viewer.classList.toggle(\"scrollWrapped\", scrollMode === ScrollMode.WRAPPED);\n\n    if (!this.pdfDocument || !pageNumber) {\n      return;\n    }\n    // Non-numeric scale values can be sensitive to the scroll orientation.\n    // Call this before re-scrolling to the current page, to ensure that any\n    // changes in scale don't move the current page.\n    if (this._currentScaleValue && isNaN(this._currentScaleValue)) {\n      this._setScale(this._currentScaleValue, true);\n    }\n    this._setCurrentPageNumber(pageNumber, /* resetCurrentPageView = */ true);\n    this.update();\n  }\n\n  /**\n   * @type {number} One of the values in {SpreadMode}.\n   */\n  get spreadMode() {\n    return this._spreadMode;\n  }\n\n  /**\n   * @param {number} mode - Group the pages in spreads, starting with odd- or\n   *   even-number pages (unless `SpreadMode.NONE` is used).\n   *   The constants from {SpreadMode} should be used.\n   */\n  set spreadMode(mode) {\n    if (this._spreadMode === mode) {\n      return; // The Spread mode didn't change.\n    }\n    if (!isValidSpreadMode(mode)) {\n      throw new Error(`Invalid spread mode: ${mode}`);\n    }\n    this._spreadMode = mode;\n    this.eventBus.dispatch(\"spreadmodechanged\", { source: this, mode });\n\n    this._updateSpreadMode(/* pageNumber = */ this._currentPageNumber);\n  }\n\n  _updateSpreadMode(pageNumber = null) {\n    if (!this.pdfDocument) {\n      return;\n    }\n    const viewer = this.viewer,\n      pages = this._pages;\n    // Temporarily remove all the pages from the DOM.\n    viewer.textContent = \"\";\n\n    if (this._spreadMode === SpreadMode.NONE) {\n      for (let i = 0, iMax = pages.length; i < iMax; ++i) {\n        viewer.appendChild(pages[i].div);\n      }\n    } else {\n      const parity = this._spreadMode - 1;\n      let spread = null;\n      for (let i = 0, iMax = pages.length; i < iMax; ++i) {\n        if (spread === null) {\n          spread = document.createElement(\"div\");\n          spread.className = \"spread\";\n          viewer.appendChild(spread);\n        } else if (i % 2 === parity) {\n          spread = spread.cloneNode(false);\n          viewer.appendChild(spread);\n        }\n        spread.appendChild(pages[i].div);\n      }\n    }\n\n    if (!pageNumber) {\n      return;\n    }\n    this._setCurrentPageNumber(pageNumber, /* resetCurrentPageView = */ true);\n    this.update();\n  }\n}\n\nexport { BaseViewer };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AnnotationLayer } from \"pdfjs-lib\";\nimport { NullL10n } from \"./ui_utils.js\";\nimport { SimpleLinkService } from \"./pdf_link_service.js\";\n\n/**\n * @typedef {Object} AnnotationLayerBuilderOptions\n * @property {HTMLDivElement} pageDiv\n * @property {PDFPage} pdfPage\n * @property {AnnotationStorage} [annotationStorage]\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderInteractiveForms\n * @property {IPDFLinkService} linkService\n * @property {DownloadManager} downloadManager\n * @property {IL10n} l10n - Localization service.\n * @property {boolean} [enableScripting]\n * @property {Promise<boolean>} [hasJSActionsPromise]\n */\n\nclass AnnotationLayerBuilder {\n  /**\n   * @param {AnnotationLayerBuilderOptions} options\n   */\n  constructor({\n    pageDiv,\n    pdfPage,\n    linkService,\n    downloadManager,\n    annotationStorage = null,\n    imageResourcesPath = \"\",\n    renderInteractiveForms = true,\n    l10n = NullL10n,\n    enableScripting = false,\n    hasJSActionsPromise = null,\n  }) {\n    this.pageDiv = pageDiv;\n    this.pdfPage = pdfPage;\n    this.linkService = linkService;\n    this.downloadManager = downloadManager;\n    this.imageResourcesPath = imageResourcesPath;\n    this.renderInteractiveForms = renderInteractiveForms;\n    this.l10n = l10n;\n    this.annotationStorage = annotationStorage;\n    this.enableScripting = enableScripting;\n    this._hasJSActionsPromise = hasJSActionsPromise;\n\n    this.div = null;\n    this._cancelled = false;\n  }\n\n  /**\n   * @param {PageViewport} viewport\n   * @param {string} intent (default value is 'display')\n   * @returns {Promise<void>} A promise that is resolved when rendering of the\n   *   annotations is complete.\n   */\n  render(viewport, intent = \"display\") {\n    return Promise.all([\n      this.pdfPage.getAnnotations({ intent }),\n      this._hasJSActionsPromise,\n    ]).then(([annotations, hasJSActions = false]) => {\n      if (this._cancelled) {\n        return;\n      }\n      if (annotations.length === 0) {\n        return;\n      }\n\n      const parameters = {\n        viewport: viewport.clone({ dontFlip: true }),\n        div: this.div,\n        annotations,\n        page: this.pdfPage,\n        imageResourcesPath: this.imageResourcesPath,\n        renderInteractiveForms: this.renderInteractiveForms,\n        linkService: this.linkService,\n        downloadManager: this.downloadManager,\n        annotationStorage: this.annotationStorage,\n        enableScripting: this.enableScripting,\n        hasJSActions,\n      };\n\n      if (this.div) {\n        // If an annotationLayer already exists, refresh its children's\n        // transformation matrices.\n        AnnotationLayer.update(parameters);\n      } else {\n        // Create an annotation layer div and render the annotations\n        // if there is at least one annotation.\n        this.div = document.createElement(\"div\");\n        this.div.className = \"annotationLayer\";\n        this.pageDiv.appendChild(this.div);\n        parameters.div = this.div;\n\n        AnnotationLayer.render(parameters);\n        this.l10n.translate(this.div);\n      }\n    });\n  }\n\n  cancel() {\n    this._cancelled = true;\n  }\n\n  hide() {\n    if (!this.div) {\n      return;\n    }\n    this.div.setAttribute(\"hidden\", \"true\");\n  }\n}\n\n/**\n * @implements IPDFAnnotationLayerFactory\n */\nclass DefaultAnnotationLayerFactory {\n  /**\n   * @param {HTMLDivElement} pageDiv\n   * @param {PDFPage} pdfPage\n   * @param {AnnotationStorage} [annotationStorage]\n   * @param {string} [imageResourcesPath] - Path for image resources, mainly\n   *   for annotation icons. Include trailing slash.\n   * @param {boolean} renderInteractiveForms\n   * @param {IL10n} l10n\n   * @param {boolean} [enableScripting]\n   * @param {Promise<boolean>} [hasJSActionsPromise]\n   * @returns {AnnotationLayerBuilder}\n   */\n  createAnnotationLayerBuilder(\n    pageDiv,\n    pdfPage,\n    annotationStorage = null,\n    imageResourcesPath = \"\",\n    renderInteractiveForms = true,\n    l10n = NullL10n,\n    enableScripting = false,\n    hasJSActionsPromise = null\n  ) {\n    return new AnnotationLayerBuilder({\n      pageDiv,\n      pdfPage,\n      imageResourcesPath,\n      renderInteractiveForms,\n      linkService: new SimpleLinkService(),\n      l10n,\n      annotationStorage,\n      enableScripting,\n      hasJSActionsPromise,\n    });\n  }\n}\n\nexport { AnnotationLayerBuilder, DefaultAnnotationLayerFactory };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  approximateFraction,\n  CSS_UNITS,\n  DEFAULT_SCALE,\n  getOutputScale,\n  NullL10n,\n  RendererType,\n  roundToDivide,\n  TextLayerMode,\n} from \"./ui_utils.js\";\nimport {\n  createPromiseCapability,\n  RenderingCancelledException,\n  SVGGraphics,\n} from \"pdfjs-lib\";\nimport { RenderingStates } from \"./pdf_rendering_queue.js\";\nimport { viewerCompatibilityParams } from \"./viewer_compatibility.js\";\n\n/**\n * @typedef {Object} PDFPageViewOptions\n * @property {HTMLDivElement} container - The viewer element.\n * @property {EventBus} eventBus - The application event bus.\n * @property {number} id - The page unique ID (normally its number).\n * @property {number} scale - The page scale display.\n * @property {PageViewport} defaultViewport - The page viewport.\n * @property {Promise<OptionalContentConfig>} [optionalContentConfigPromise] -\n *   A promise that is resolved with an {@link OptionalContentConfig} instance.\n *   The default value is `null`.\n * @property {PDFRenderingQueue} renderingQueue - The rendering queue object.\n * @property {IPDFTextLayerFactory} textLayerFactory\n * @property {number} [textLayerMode] - Controls if the text layer used for\n *   selection and searching is created, and if the improved text selection\n *   behaviour is enabled. The constants from {TextLayerMode} should be used.\n *   The default value is `TextLayerMode.ENABLE`.\n * @property {IPDFAnnotationLayerFactory} annotationLayerFactory\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderInteractiveForms - Turns on rendering of\n *   interactive form elements. The default value is `true`.\n * @property {string} renderer - 'canvas' or 'svg'. The default is 'canvas'.\n * @property {boolean} [enableWebGL] - Enables WebGL accelerated rendering for\n *   some operations. The default value is `false`.\n * @property {boolean} [useOnlyCssZoom] - Enables CSS only zooming. The default\n *   value is `false`.\n * @property {number} [maxCanvasPixels] - The maximum supported canvas size in\n *   total pixels, i.e. width * height. Use -1 for no limit. The default value\n *   is 4096 * 4096 (16 mega-pixels).\n * @property {IL10n} l10n - Localization service.\n * @property {boolean} [enableScripting] - Enable embedded script execution.\n *   The default value is `false`.\n */\n\nconst MAX_CANVAS_PIXELS = viewerCompatibilityParams.maxCanvasPixels || 16777216;\n\n/**\n * @implements {IRenderableView}\n */\nclass PDFPageView {\n  /**\n   * @param {PDFPageViewOptions} options\n   */\n  constructor(options) {\n    const container = options.container;\n    const defaultViewport = options.defaultViewport;\n\n    this.id = options.id;\n    this.renderingId = \"page\" + this.id;\n\n    this.pdfPage = null;\n    this.pageLabel = null;\n    this.rotation = 0;\n    this.scale = options.scale || DEFAULT_SCALE;\n    this.viewport = defaultViewport;\n    this.pdfPageRotate = defaultViewport.rotation;\n    this._optionalContentConfigPromise =\n      options.optionalContentConfigPromise || null;\n    this.hasRestrictedScaling = false;\n    this.textLayerMode = Number.isInteger(options.textLayerMode)\n      ? options.textLayerMode\n      : TextLayerMode.ENABLE;\n    this.imageResourcesPath = options.imageResourcesPath || \"\";\n    this.renderInteractiveForms =\n      typeof options.renderInteractiveForms === \"boolean\"\n        ? options.renderInteractiveForms\n        : true;\n    this.useOnlyCssZoom = options.useOnlyCssZoom || false;\n    this.maxCanvasPixels = options.maxCanvasPixels || MAX_CANVAS_PIXELS;\n\n    this.eventBus = options.eventBus;\n    this.renderingQueue = options.renderingQueue;\n    this.textLayerFactory = options.textLayerFactory;\n    this.annotationLayerFactory = options.annotationLayerFactory;\n    this.renderer = options.renderer || RendererType.CANVAS;\n    this.enableWebGL = options.enableWebGL || false;\n    this.l10n = options.l10n || NullL10n;\n    this.enableScripting = options.enableScripting || false;\n\n    this.paintTask = null;\n    this.paintedViewportMap = new WeakMap();\n    this.renderingState = RenderingStates.INITIAL;\n    this.resume = null;\n    this._renderError = null;\n\n    this.annotationLayer = null;\n    this.textLayer = null;\n    this.zoomLayer = null;\n\n    const div = document.createElement(\"div\");\n    div.className = \"page\";\n    div.style.width = Math.floor(this.viewport.width) + \"px\";\n    div.style.height = Math.floor(this.viewport.height) + \"px\";\n    div.setAttribute(\"data-page-number\", this.id);\n    this.div = div;\n\n    container.appendChild(div);\n  }\n\n  setPdfPage(pdfPage) {\n    this.pdfPage = pdfPage;\n    this.pdfPageRotate = pdfPage.rotate;\n\n    const totalRotation = (this.rotation + this.pdfPageRotate) % 360;\n    this.viewport = pdfPage.getViewport({\n      scale: this.scale * CSS_UNITS,\n      rotation: totalRotation,\n    });\n    this.reset();\n  }\n\n  destroy() {\n    this.reset();\n    if (this.pdfPage) {\n      this.pdfPage.cleanup();\n    }\n  }\n\n  /**\n   * @private\n   */\n  async _renderAnnotationLayer() {\n    let error = null;\n    try {\n      await this.annotationLayer.render(this.viewport, \"display\");\n    } catch (ex) {\n      error = ex;\n    } finally {\n      this.eventBus.dispatch(\"annotationlayerrendered\", {\n        source: this,\n        pageNumber: this.id,\n        error,\n      });\n    }\n  }\n\n  /**\n   * @private\n   */\n  _resetZoomLayer(removeFromDOM = false) {\n    if (!this.zoomLayer) {\n      return;\n    }\n    const zoomLayerCanvas = this.zoomLayer.firstChild;\n    this.paintedViewportMap.delete(zoomLayerCanvas);\n    // Zeroing the width and height causes Firefox to release graphics\n    // resources immediately, which can greatly reduce memory consumption.\n    zoomLayerCanvas.width = 0;\n    zoomLayerCanvas.height = 0;\n\n    if (removeFromDOM) {\n      // Note: `ChildNode.remove` doesn't throw if the parent node is undefined.\n      this.zoomLayer.remove();\n    }\n    this.zoomLayer = null;\n  }\n\n  reset(keepZoomLayer = false, keepAnnotations = false) {\n    this.cancelRendering(keepAnnotations);\n    this.renderingState = RenderingStates.INITIAL;\n\n    const div = this.div;\n    div.style.width = Math.floor(this.viewport.width) + \"px\";\n    div.style.height = Math.floor(this.viewport.height) + \"px\";\n\n    const childNodes = div.childNodes;\n    const currentZoomLayerNode = (keepZoomLayer && this.zoomLayer) || null;\n    const currentAnnotationNode =\n      (keepAnnotations && this.annotationLayer && this.annotationLayer.div) ||\n      null;\n    for (let i = childNodes.length - 1; i >= 0; i--) {\n      const node = childNodes[i];\n      if (currentZoomLayerNode === node || currentAnnotationNode === node) {\n        continue;\n      }\n      div.removeChild(node);\n    }\n    div.removeAttribute(\"data-loaded\");\n\n    if (currentAnnotationNode) {\n      // Hide the annotation layer until all elements are resized\n      // so they are not displayed on the already resized page.\n      this.annotationLayer.hide();\n    } else if (this.annotationLayer) {\n      this.annotationLayer.cancel();\n      this.annotationLayer = null;\n    }\n\n    if (!currentZoomLayerNode) {\n      if (this.canvas) {\n        this.paintedViewportMap.delete(this.canvas);\n        // Zeroing the width and height causes Firefox to release graphics\n        // resources immediately, which can greatly reduce memory consumption.\n        this.canvas.width = 0;\n        this.canvas.height = 0;\n        delete this.canvas;\n      }\n      this._resetZoomLayer();\n    }\n    if (this.svg) {\n      this.paintedViewportMap.delete(this.svg);\n      delete this.svg;\n    }\n\n    this.loadingIconDiv = document.createElement(\"div\");\n    this.loadingIconDiv.className = \"loadingIcon\";\n    div.appendChild(this.loadingIconDiv);\n  }\n\n  update(scale, rotation, optionalContentConfigPromise = null) {\n    this.scale = scale || this.scale;\n    // The rotation may be zero.\n    if (typeof rotation !== \"undefined\") {\n      this.rotation = rotation;\n    }\n    if (optionalContentConfigPromise instanceof Promise) {\n      this._optionalContentConfigPromise = optionalContentConfigPromise;\n    }\n\n    const totalRotation = (this.rotation + this.pdfPageRotate) % 360;\n    this.viewport = this.viewport.clone({\n      scale: this.scale * CSS_UNITS,\n      rotation: totalRotation,\n    });\n\n    if (this.svg) {\n      this.cssTransform(this.svg, true);\n\n      this.eventBus.dispatch(\"pagerendered\", {\n        source: this,\n        pageNumber: this.id,\n        cssTransform: true,\n        timestamp: performance.now(),\n        error: this._renderError,\n      });\n      return;\n    }\n\n    let isScalingRestricted = false;\n    if (this.canvas && this.maxCanvasPixels > 0) {\n      const outputScale = this.outputScale;\n      if (\n        ((Math.floor(this.viewport.width) * outputScale.sx) | 0) *\n          ((Math.floor(this.viewport.height) * outputScale.sy) | 0) >\n        this.maxCanvasPixels\n      ) {\n        isScalingRestricted = true;\n      }\n    }\n\n    if (this.canvas) {\n      if (\n        this.useOnlyCssZoom ||\n        (this.hasRestrictedScaling && isScalingRestricted)\n      ) {\n        this.cssTransform(this.canvas, true);\n\n        this.eventBus.dispatch(\"pagerendered\", {\n          source: this,\n          pageNumber: this.id,\n          cssTransform: true,\n          timestamp: performance.now(),\n          error: this._renderError,\n        });\n        return;\n      }\n      if (!this.zoomLayer && !this.canvas.hasAttribute(\"hidden\")) {\n        this.zoomLayer = this.canvas.parentNode;\n        this.zoomLayer.style.position = \"absolute\";\n      }\n    }\n    if (this.zoomLayer) {\n      this.cssTransform(this.zoomLayer.firstChild);\n    }\n    this.reset(/* keepZoomLayer = */ true, /* keepAnnotations = */ true);\n  }\n\n  /**\n   * PLEASE NOTE: Most likely you want to use the `this.reset()` method,\n   *              rather than calling this one directly.\n   */\n  cancelRendering(keepAnnotations = false) {\n    if (this.paintTask) {\n      this.paintTask.cancel();\n      this.paintTask = null;\n    }\n    this.resume = null;\n\n    if (this.textLayer) {\n      this.textLayer.cancel();\n      this.textLayer = null;\n    }\n    if (!keepAnnotations && this.annotationLayer) {\n      this.annotationLayer.cancel();\n      this.annotationLayer = null;\n    }\n  }\n\n  cssTransform(target, redrawAnnotations = false) {\n    // Scale target (canvas or svg), its wrapper and page container.\n    const width = this.viewport.width;\n    const height = this.viewport.height;\n    const div = this.div;\n    target.style.width = target.parentNode.style.width = div.style.width =\n      Math.floor(width) + \"px\";\n    target.style.height = target.parentNode.style.height = div.style.height =\n      Math.floor(height) + \"px\";\n    // The canvas may have been originally rotated; rotate relative to that.\n    const relativeRotation =\n      this.viewport.rotation - this.paintedViewportMap.get(target).rotation;\n    const absRotation = Math.abs(relativeRotation);\n    let scaleX = 1,\n      scaleY = 1;\n    if (absRotation === 90 || absRotation === 270) {\n      // Scale x and y because of the rotation.\n      scaleX = height / width;\n      scaleY = width / height;\n    }\n    target.style.transform = `rotate(${relativeRotation}deg) scale(${scaleX}, ${scaleY})`;\n\n    if (this.textLayer) {\n      // Rotating the text layer is more complicated since the divs inside the\n      // the text layer are rotated.\n      // TODO: This could probably be simplified by drawing the text layer in\n      // one orientation and then rotating overall.\n      const textLayerViewport = this.textLayer.viewport;\n      const textRelativeRotation =\n        this.viewport.rotation - textLayerViewport.rotation;\n      const textAbsRotation = Math.abs(textRelativeRotation);\n      let scale = width / textLayerViewport.width;\n      if (textAbsRotation === 90 || textAbsRotation === 270) {\n        scale = width / textLayerViewport.height;\n      }\n      const textLayerDiv = this.textLayer.textLayerDiv;\n      let transX, transY;\n      switch (textAbsRotation) {\n        case 0:\n          transX = transY = 0;\n          break;\n        case 90:\n          transX = 0;\n          transY = \"-\" + textLayerDiv.style.height;\n          break;\n        case 180:\n          transX = \"-\" + textLayerDiv.style.width;\n          transY = \"-\" + textLayerDiv.style.height;\n          break;\n        case 270:\n          transX = \"-\" + textLayerDiv.style.width;\n          transY = 0;\n          break;\n        default:\n          console.error(\"Bad rotation value.\");\n          break;\n      }\n\n      textLayerDiv.style.transform =\n        `rotate(${textAbsRotation}deg) ` +\n        `scale(${scale}) ` +\n        `translate(${transX}, ${transY})`;\n      textLayerDiv.style.transformOrigin = \"0% 0%\";\n    }\n\n    if (redrawAnnotations && this.annotationLayer) {\n      this._renderAnnotationLayer();\n    }\n  }\n\n  get width() {\n    return this.viewport.width;\n  }\n\n  get height() {\n    return this.viewport.height;\n  }\n\n  getPagePoint(x, y) {\n    return this.viewport.convertToPdfPoint(x, y);\n  }\n\n  draw() {\n    if (this.renderingState !== RenderingStates.INITIAL) {\n      console.error(\"Must be in new state before drawing\");\n      this.reset(); // Ensure that we reset all state to prevent issues.\n    }\n    const { div, pdfPage } = this;\n\n    if (!pdfPage) {\n      this.renderingState = RenderingStates.FINISHED;\n\n      if (this.loadingIconDiv) {\n        div.removeChild(this.loadingIconDiv);\n        delete this.loadingIconDiv;\n      }\n      return Promise.reject(new Error(\"pdfPage is not loaded\"));\n    }\n\n    this.renderingState = RenderingStates.RUNNING;\n\n    // Wrap the canvas so that if it has a CSS transform for high DPI the\n    // overflow will be hidden in Firefox.\n    const canvasWrapper = document.createElement(\"div\");\n    canvasWrapper.style.width = div.style.width;\n    canvasWrapper.style.height = div.style.height;\n    canvasWrapper.classList.add(\"canvasWrapper\");\n\n    if (this.annotationLayer && this.annotationLayer.div) {\n      // The annotation layer needs to stay on top.\n      div.insertBefore(canvasWrapper, this.annotationLayer.div);\n    } else {\n      div.appendChild(canvasWrapper);\n    }\n\n    let textLayer = null;\n    if (this.textLayerMode !== TextLayerMode.DISABLE && this.textLayerFactory) {\n      const textLayerDiv = document.createElement(\"div\");\n      textLayerDiv.className = \"textLayer\";\n      textLayerDiv.style.width = canvasWrapper.style.width;\n      textLayerDiv.style.height = canvasWrapper.style.height;\n      if (this.annotationLayer && this.annotationLayer.div) {\n        // The annotation layer needs to stay on top.\n        div.insertBefore(textLayerDiv, this.annotationLayer.div);\n      } else {\n        div.appendChild(textLayerDiv);\n      }\n\n      textLayer = this.textLayerFactory.createTextLayerBuilder(\n        textLayerDiv,\n        this.id - 1,\n        this.viewport,\n        this.textLayerMode === TextLayerMode.ENABLE_ENHANCE,\n        this.eventBus\n      );\n    }\n    this.textLayer = textLayer;\n\n    let renderContinueCallback = null;\n    if (this.renderingQueue) {\n      renderContinueCallback = cont => {\n        if (!this.renderingQueue.isHighestPriority(this)) {\n          this.renderingState = RenderingStates.PAUSED;\n          this.resume = () => {\n            this.renderingState = RenderingStates.RUNNING;\n            cont();\n          };\n          return;\n        }\n        cont();\n      };\n    }\n\n    const finishPaintTask = async (error = null) => {\n      // The paintTask may have been replaced by a new one, so only remove\n      // the reference to the paintTask if it matches the one that is\n      // triggering this callback.\n      if (paintTask === this.paintTask) {\n        this.paintTask = null;\n      }\n\n      if (error instanceof RenderingCancelledException) {\n        this._renderError = null;\n        return;\n      }\n      this._renderError = error;\n\n      this.renderingState = RenderingStates.FINISHED;\n\n      if (this.loadingIconDiv) {\n        div.removeChild(this.loadingIconDiv);\n        delete this.loadingIconDiv;\n      }\n      this._resetZoomLayer(/* removeFromDOM = */ true);\n\n      this.eventBus.dispatch(\"pagerendered\", {\n        source: this,\n        pageNumber: this.id,\n        cssTransform: false,\n        timestamp: performance.now(),\n        error: this._renderError,\n      });\n\n      if (error) {\n        throw error;\n      }\n    };\n\n    const paintTask =\n      this.renderer === RendererType.SVG\n        ? this.paintOnSvg(canvasWrapper)\n        : this.paintOnCanvas(canvasWrapper);\n    paintTask.onRenderContinue = renderContinueCallback;\n    this.paintTask = paintTask;\n\n    const resultPromise = paintTask.promise.then(\n      function () {\n        return finishPaintTask(null).then(function () {\n          if (textLayer) {\n            const readableStream = pdfPage.streamTextContent({\n              normalizeWhitespace: true,\n            });\n            textLayer.setTextContentStream(readableStream);\n            textLayer.render();\n          }\n        });\n      },\n      function (reason) {\n        return finishPaintTask(reason);\n      }\n    );\n\n    if (this.annotationLayerFactory) {\n      if (!this.annotationLayer) {\n        this.annotationLayer = this.annotationLayerFactory.createAnnotationLayerBuilder(\n          div,\n          pdfPage,\n          /* annotationStorage = */ null,\n          this.imageResourcesPath,\n          this.renderInteractiveForms,\n          this.l10n,\n          this.enableScripting,\n          /* hasJSActionsPromise = */ null\n        );\n      }\n      this._renderAnnotationLayer();\n    }\n    div.setAttribute(\"data-loaded\", true);\n\n    this.eventBus.dispatch(\"pagerender\", {\n      source: this,\n      pageNumber: this.id,\n    });\n    return resultPromise;\n  }\n\n  paintOnCanvas(canvasWrapper) {\n    const renderCapability = createPromiseCapability();\n    const result = {\n      promise: renderCapability.promise,\n      onRenderContinue(cont) {\n        cont();\n      },\n      cancel() {\n        renderTask.cancel();\n      },\n    };\n\n    const viewport = this.viewport;\n    const canvas = document.createElement(\"canvas\");\n    this.l10n\n      .get(\"page_canvas\", { page: this.id }, \"Page {{page}}\")\n      .then(msg => {\n        canvas.setAttribute(\"aria-label\", msg);\n      });\n\n    // Keep the canvas hidden until the first draw callback, or until drawing\n    // is complete when `!this.renderingQueue`, to prevent black flickering.\n    canvas.setAttribute(\"hidden\", \"hidden\");\n    let isCanvasHidden = true;\n    const showCanvas = function () {\n      if (isCanvasHidden) {\n        canvas.removeAttribute(\"hidden\");\n        isCanvasHidden = false;\n      }\n    };\n\n    canvasWrapper.appendChild(canvas);\n    this.canvas = canvas;\n\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"MOZCENTRAL || GENERIC\")\n    ) {\n      canvas.mozOpaque = true;\n    }\n\n    const ctx = canvas.getContext(\"2d\", { alpha: false });\n    const outputScale = getOutputScale(ctx);\n    this.outputScale = outputScale;\n\n    if (this.useOnlyCssZoom) {\n      const actualSizeViewport = viewport.clone({ scale: CSS_UNITS });\n      // Use a scale that makes the canvas have the originally intended size\n      // of the page.\n      outputScale.sx *= actualSizeViewport.width / viewport.width;\n      outputScale.sy *= actualSizeViewport.height / viewport.height;\n      outputScale.scaled = true;\n    }\n\n    if (this.maxCanvasPixels > 0) {\n      const pixelsInViewport = viewport.width * viewport.height;\n      const maxScale = Math.sqrt(this.maxCanvasPixels / pixelsInViewport);\n      if (outputScale.sx > maxScale || outputScale.sy > maxScale) {\n        outputScale.sx = maxScale;\n        outputScale.sy = maxScale;\n        outputScale.scaled = true;\n        this.hasRestrictedScaling = true;\n      } else {\n        this.hasRestrictedScaling = false;\n      }\n    }\n\n    const sfx = approximateFraction(outputScale.sx);\n    const sfy = approximateFraction(outputScale.sy);\n    canvas.width = roundToDivide(viewport.width * outputScale.sx, sfx[0]);\n    canvas.height = roundToDivide(viewport.height * outputScale.sy, sfy[0]);\n    canvas.style.width = roundToDivide(viewport.width, sfx[1]) + \"px\";\n    canvas.style.height = roundToDivide(viewport.height, sfy[1]) + \"px\";\n    // Add the viewport so it's known what it was originally drawn with.\n    this.paintedViewportMap.set(canvas, viewport);\n\n    // Rendering area\n    const transform = !outputScale.scaled\n      ? null\n      : [outputScale.sx, 0, 0, outputScale.sy, 0, 0];\n    const renderContext = {\n      canvasContext: ctx,\n      transform,\n      viewport: this.viewport,\n      enableWebGL: this.enableWebGL,\n      renderInteractiveForms: this.renderInteractiveForms,\n      optionalContentConfigPromise: this._optionalContentConfigPromise,\n    };\n    const renderTask = this.pdfPage.render(renderContext);\n    renderTask.onContinue = function (cont) {\n      showCanvas();\n      if (result.onRenderContinue) {\n        result.onRenderContinue(cont);\n      } else {\n        cont();\n      }\n    };\n\n    renderTask.promise.then(\n      function () {\n        showCanvas();\n        renderCapability.resolve(undefined);\n      },\n      function (error) {\n        showCanvas();\n        renderCapability.reject(error);\n      }\n    );\n    return result;\n  }\n\n  paintOnSvg(wrapper) {\n    if (\n      typeof PDFJSDev !== \"undefined\" &&\n      PDFJSDev.test(\"MOZCENTRAL || CHROME\")\n    ) {\n      // Return a mock object, to prevent errors such as e.g.\n      // \"TypeError: paintTask.promise is undefined\".\n      return {\n        promise: Promise.reject(new Error(\"SVG rendering is not supported.\")),\n        onRenderContinue(cont) {},\n        cancel() {},\n      };\n    }\n\n    let cancelled = false;\n    const ensureNotCancelled = () => {\n      if (cancelled) {\n        throw new RenderingCancelledException(\n          `Rendering cancelled, page ${this.id}`,\n          \"svg\"\n        );\n      }\n    };\n\n    const pdfPage = this.pdfPage;\n    const actualSizeViewport = this.viewport.clone({ scale: CSS_UNITS });\n    const promise = pdfPage.getOperatorList().then(opList => {\n      ensureNotCancelled();\n      const svgGfx = new SVGGraphics(pdfPage.commonObjs, pdfPage.objs);\n      return svgGfx.getSVG(opList, actualSizeViewport).then(svg => {\n        ensureNotCancelled();\n        this.svg = svg;\n        this.paintedViewportMap.set(svg, actualSizeViewport);\n\n        svg.style.width = wrapper.style.width;\n        svg.style.height = wrapper.style.height;\n        this.renderingState = RenderingStates.FINISHED;\n        wrapper.appendChild(svg);\n      });\n    });\n\n    return {\n      promise,\n      onRenderContinue(cont) {\n        cont();\n      },\n      cancel() {\n        cancelled = true;\n      },\n    };\n  }\n\n  /**\n   * @param {string|null} label\n   */\n  setPageLabel(label) {\n    this.pageLabel = typeof label === \"string\" ? label : null;\n\n    if (this.pageLabel !== null) {\n      this.div.setAttribute(\"data-page-label\", this.pageLabel);\n    } else {\n      this.div.removeAttribute(\"data-page-label\");\n    }\n  }\n}\n\nexport { PDFPageView };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { renderTextLayer } from \"pdfjs-lib\";\n\nconst EXPAND_DIVS_TIMEOUT = 300; // ms\n\n/**\n * @typedef {Object} TextLayerBuilderOptions\n * @property {HTMLDivElement} textLayerDiv - The text layer container.\n * @property {EventBus} eventBus - The application event bus.\n * @property {number} pageIndex - The page index.\n * @property {PageViewport} viewport - The viewport of the text layer.\n * @property {PDFFindController} findController\n * @property {boolean} enhanceTextSelection - Option to turn on improved\n *   text selection.\n */\n\n/**\n * The text layer builder provides text selection functionality for the PDF.\n * It does this by creating overlay divs over the PDF's text. These divs\n * contain text that matches the PDF text they are overlaying. This object\n * also provides a way to highlight text that is being searched for.\n */\nclass TextLayerBuilder {\n  constructor({\n    textLayerDiv,\n    eventBus,\n    pageIndex,\n    viewport,\n    findController = null,\n    enhanceTextSelection = false,\n  }) {\n    this.textLayerDiv = textLayerDiv;\n    this.eventBus = eventBus;\n    this.textContent = null;\n    this.textContentItemsStr = [];\n    this.textContentStream = null;\n    this.renderingDone = false;\n    this.pageIdx = pageIndex;\n    this.pageNumber = this.pageIdx + 1;\n    this.matches = [];\n    this.viewport = viewport;\n    this.textDivs = [];\n    this.findController = findController;\n    this.textLayerRenderTask = null;\n    this.enhanceTextSelection = enhanceTextSelection;\n\n    this._onUpdateTextLayerMatches = null;\n    this._bindMouse();\n  }\n\n  /**\n   * @private\n   */\n  _finishRendering() {\n    this.renderingDone = true;\n\n    if (!this.enhanceTextSelection) {\n      const endOfContent = document.createElement(\"div\");\n      endOfContent.className = \"endOfContent\";\n      this.textLayerDiv.appendChild(endOfContent);\n    }\n\n    this.eventBus.dispatch(\"textlayerrendered\", {\n      source: this,\n      pageNumber: this.pageNumber,\n      numTextDivs: this.textDivs.length,\n    });\n  }\n\n  /**\n   * Renders the text layer.\n   *\n   * @param {number} [timeout] - Wait for a specified amount of milliseconds\n   *                             before rendering.\n   */\n  render(timeout = 0) {\n    if (!(this.textContent || this.textContentStream) || this.renderingDone) {\n      return;\n    }\n    this.cancel();\n\n    this.textDivs = [];\n    const textLayerFrag = document.createDocumentFragment();\n    this.textLayerRenderTask = renderTextLayer({\n      textContent: this.textContent,\n      textContentStream: this.textContentStream,\n      container: textLayerFrag,\n      viewport: this.viewport,\n      textDivs: this.textDivs,\n      textContentItemsStr: this.textContentItemsStr,\n      timeout,\n      enhanceTextSelection: this.enhanceTextSelection,\n    });\n    this.textLayerRenderTask.promise.then(\n      () => {\n        this.textLayerDiv.appendChild(textLayerFrag);\n        this._finishRendering();\n        this._updateMatches();\n      },\n      function (reason) {\n        // Cancelled or failed to render text layer; skipping errors.\n      }\n    );\n\n    if (!this._onUpdateTextLayerMatches) {\n      this._onUpdateTextLayerMatches = evt => {\n        if (evt.pageIndex === this.pageIdx || evt.pageIndex === -1) {\n          this._updateMatches();\n        }\n      };\n      this.eventBus._on(\n        \"updatetextlayermatches\",\n        this._onUpdateTextLayerMatches\n      );\n    }\n  }\n\n  /**\n   * Cancel rendering of the text layer.\n   */\n  cancel() {\n    if (this.textLayerRenderTask) {\n      this.textLayerRenderTask.cancel();\n      this.textLayerRenderTask = null;\n    }\n    if (this._onUpdateTextLayerMatches) {\n      this.eventBus._off(\n        \"updatetextlayermatches\",\n        this._onUpdateTextLayerMatches\n      );\n      this._onUpdateTextLayerMatches = null;\n    }\n  }\n\n  setTextContentStream(readableStream) {\n    this.cancel();\n    this.textContentStream = readableStream;\n  }\n\n  setTextContent(textContent) {\n    this.cancel();\n    this.textContent = textContent;\n  }\n\n  _convertMatches(matches, matchesLength) {\n    // Early exit if there is nothing to convert.\n    if (!matches) {\n      return [];\n    }\n    const { findController, textContentItemsStr } = this;\n\n    let i = 0,\n      iIndex = 0;\n    const end = textContentItemsStr.length - 1;\n    const queryLen = findController.state.query.length;\n    const result = [];\n\n    for (let m = 0, mm = matches.length; m < mm; m++) {\n      // Calculate the start position.\n      let matchIdx = matches[m];\n\n      // Loop over the divIdxs.\n      while (i !== end && matchIdx >= iIndex + textContentItemsStr[i].length) {\n        iIndex += textContentItemsStr[i].length;\n        i++;\n      }\n\n      if (i === textContentItemsStr.length) {\n        console.error(\"Could not find a matching mapping\");\n      }\n\n      const match = {\n        begin: {\n          divIdx: i,\n          offset: matchIdx - iIndex,\n        },\n      };\n\n      // Calculate the end position.\n      if (matchesLength) {\n        // Multiterm search.\n        matchIdx += matchesLength[m];\n      } else {\n        // Phrase search.\n        matchIdx += queryLen;\n      }\n\n      // Somewhat the same array as above, but use > instead of >= to get\n      // the end position right.\n      while (i !== end && matchIdx > iIndex + textContentItemsStr[i].length) {\n        iIndex += textContentItemsStr[i].length;\n        i++;\n      }\n\n      match.end = {\n        divIdx: i,\n        offset: matchIdx - iIndex,\n      };\n      result.push(match);\n    }\n    return result;\n  }\n\n  _renderMatches(matches) {\n    // Early exit if there is nothing to render.\n    if (matches.length === 0) {\n      return;\n    }\n    const { findController, pageIdx, textContentItemsStr, textDivs } = this;\n\n    const isSelectedPage = pageIdx === findController.selected.pageIdx;\n    const selectedMatchIdx = findController.selected.matchIdx;\n    const highlightAll = findController.state.highlightAll;\n    let prevEnd = null;\n    const infinity = {\n      divIdx: -1,\n      offset: undefined,\n    };\n\n    function beginText(begin, className) {\n      const divIdx = begin.divIdx;\n      textDivs[divIdx].textContent = \"\";\n      appendTextToDiv(divIdx, 0, begin.offset, className);\n    }\n\n    function appendTextToDiv(divIdx, fromOffset, toOffset, className) {\n      const div = textDivs[divIdx];\n      const content = textContentItemsStr[divIdx].substring(\n        fromOffset,\n        toOffset\n      );\n      const node = document.createTextNode(content);\n      if (className) {\n        const span = document.createElement(\"span\");\n        span.className = className;\n        span.appendChild(node);\n        div.appendChild(span);\n        return;\n      }\n      div.appendChild(node);\n    }\n\n    let i0 = selectedMatchIdx,\n      i1 = i0 + 1;\n    if (highlightAll) {\n      i0 = 0;\n      i1 = matches.length;\n    } else if (!isSelectedPage) {\n      // Not highlighting all and this isn't the selected page, so do nothing.\n      return;\n    }\n\n    for (let i = i0; i < i1; i++) {\n      const match = matches[i];\n      const begin = match.begin;\n      const end = match.end;\n      const isSelected = isSelectedPage && i === selectedMatchIdx;\n      const highlightSuffix = isSelected ? \" selected\" : \"\";\n\n      if (isSelected) {\n        // Attempt to scroll the selected match into view.\n        findController.scrollMatchIntoView({\n          element: textDivs[begin.divIdx],\n          pageIndex: pageIdx,\n          matchIndex: selectedMatchIdx,\n        });\n      }\n\n      // Match inside new div.\n      if (!prevEnd || begin.divIdx !== prevEnd.divIdx) {\n        // If there was a previous div, then add the text at the end.\n        if (prevEnd !== null) {\n          appendTextToDiv(prevEnd.divIdx, prevEnd.offset, infinity.offset);\n        }\n        // Clear the divs and set the content until the starting point.\n        beginText(begin);\n      } else {\n        appendTextToDiv(prevEnd.divIdx, prevEnd.offset, begin.offset);\n      }\n\n      if (begin.divIdx === end.divIdx) {\n        appendTextToDiv(\n          begin.divIdx,\n          begin.offset,\n          end.offset,\n          \"highlight\" + highlightSuffix\n        );\n      } else {\n        appendTextToDiv(\n          begin.divIdx,\n          begin.offset,\n          infinity.offset,\n          \"highlight begin\" + highlightSuffix\n        );\n        for (let n0 = begin.divIdx + 1, n1 = end.divIdx; n0 < n1; n0++) {\n          textDivs[n0].className = \"highlight middle\" + highlightSuffix;\n        }\n        beginText(end, \"highlight end\" + highlightSuffix);\n      }\n      prevEnd = end;\n    }\n\n    if (prevEnd) {\n      appendTextToDiv(prevEnd.divIdx, prevEnd.offset, infinity.offset);\n    }\n  }\n\n  _updateMatches() {\n    // Only show matches when all rendering is done.\n    if (!this.renderingDone) {\n      return;\n    }\n    const {\n      findController,\n      matches,\n      pageIdx,\n      textContentItemsStr,\n      textDivs,\n    } = this;\n    let clearedUntilDivIdx = -1;\n\n    // Clear all current matches.\n    for (let i = 0, ii = matches.length; i < ii; i++) {\n      const match = matches[i];\n      const begin = Math.max(clearedUntilDivIdx, match.begin.divIdx);\n      for (let n = begin, end = match.end.divIdx; n <= end; n++) {\n        const div = textDivs[n];\n        div.textContent = textContentItemsStr[n];\n        div.className = \"\";\n      }\n      clearedUntilDivIdx = match.end.divIdx + 1;\n    }\n\n    if (!findController || !findController.highlightMatches) {\n      return;\n    }\n    // Convert the matches on the `findController` into the match format\n    // used for the textLayer.\n    const pageMatches = findController.pageMatches[pageIdx] || null;\n    const pageMatchesLength = findController.pageMatchesLength[pageIdx] || null;\n\n    this.matches = this._convertMatches(pageMatches, pageMatchesLength);\n    this._renderMatches(this.matches);\n  }\n\n  /**\n   * Improves text selection by adding an additional div where the mouse was\n   * clicked. This reduces flickering of the content if the mouse is slowly\n   * dragged up or down.\n   *\n   * @private\n   */\n  _bindMouse() {\n    const div = this.textLayerDiv;\n    let expandDivsTimer = null;\n\n    div.addEventListener(\"mousedown\", evt => {\n      if (this.enhanceTextSelection && this.textLayerRenderTask) {\n        this.textLayerRenderTask.expandTextDivs(true);\n        if (\n          (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) &&\n          expandDivsTimer\n        ) {\n          clearTimeout(expandDivsTimer);\n          expandDivsTimer = null;\n        }\n        return;\n      }\n\n      const end = div.querySelector(\".endOfContent\");\n      if (!end) {\n        return;\n      }\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) {\n        // On non-Firefox browsers, the selection will feel better if the height\n        // of the `endOfContent` div is adjusted to start at mouse click\n        // location. This avoids flickering when the selection moves up.\n        // However it does not work when selection is started on empty space.\n        let adjustTop = evt.target !== div;\n        if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n          adjustTop =\n            adjustTop &&\n            window\n              .getComputedStyle(end)\n              .getPropertyValue(\"-moz-user-select\") !== \"none\";\n        }\n        if (adjustTop) {\n          const divBounds = div.getBoundingClientRect();\n          const r = Math.max(0, (evt.pageY - divBounds.top) / divBounds.height);\n          end.style.top = (r * 100).toFixed(2) + \"%\";\n        }\n      }\n      end.classList.add(\"active\");\n    });\n\n    div.addEventListener(\"mouseup\", () => {\n      if (this.enhanceTextSelection && this.textLayerRenderTask) {\n        if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) {\n          expandDivsTimer = setTimeout(() => {\n            if (this.textLayerRenderTask) {\n              this.textLayerRenderTask.expandTextDivs(false);\n            }\n            expandDivsTimer = null;\n          }, EXPAND_DIVS_TIMEOUT);\n        } else {\n          this.textLayerRenderTask.expandTextDivs(false);\n        }\n        return;\n      }\n\n      const end = div.querySelector(\".endOfContent\");\n      if (!end) {\n        return;\n      }\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) {\n        end.style.top = \"\";\n      }\n      end.classList.remove(\"active\");\n    });\n  }\n}\n\n/**\n * @implements IPDFTextLayerFactory\n */\nclass DefaultTextLayerFactory {\n  /**\n   * @param {HTMLDivElement} textLayerDiv\n   * @param {number} pageIndex\n   * @param {PageViewport} viewport\n   * @param {boolean} enhanceTextSelection\n   * @param {EventBus} eventBus\n   * @returns {TextLayerBuilder}\n   */\n  createTextLayerBuilder(\n    textLayerDiv,\n    pageIndex,\n    viewport,\n    enhanceTextSelection = false,\n    eventBus\n  ) {\n    return new TextLayerBuilder({\n      textLayerDiv,\n      pageIndex,\n      viewport,\n      enhanceTextSelection,\n      eventBus,\n    });\n  }\n}\n\nexport { TextLayerBuilder, DefaultTextLayerFactory };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SCROLLBAR_PADDING, ScrollMode, SpreadMode } from \"./ui_utils.js\";\nimport { CursorTool } from \"./pdf_cursor_tools.js\";\nimport { PDFSinglePageViewer } from \"./pdf_single_page_viewer.js\";\n\n/**\n * @typedef {Object} SecondaryToolbarOptions\n * @property {HTMLDivElement} toolbar - Container for the secondary toolbar.\n * @property {HTMLButtonElement} toggleButton - Button to toggle the visibility\n *   of the secondary toolbar.\n * @property {HTMLDivElement} toolbarButtonContainer - Container where all the\n *   toolbar buttons are placed. The maximum height of the toolbar is controlled\n *   dynamically by adjusting the 'max-height' CSS property of this DOM element.\n * @property {HTMLButtonElement} presentationModeButton - Button for entering\n *   presentation mode.\n * @property {HTMLButtonElement} openFileButton - Button to open a file.\n * @property {HTMLButtonElement} printButton - Button to print the document.\n * @property {HTMLButtonElement} downloadButton - Button to download the\n *   document.\n * @property {HTMLLinkElement} viewBookmarkButton - Button to obtain a bookmark\n *   link to the current location in the document.\n * @property {HTMLButtonElement} firstPageButton - Button to go to the first\n *   page in the document.\n * @property {HTMLButtonElement} lastPageButton - Button to go to the last page\n *   in the document.\n * @property {HTMLButtonElement} pageRotateCwButton - Button to rotate the pages\n *   clockwise.\n * @property {HTMLButtonElement} pageRotateCcwButton - Button to rotate the\n *   pages counterclockwise.\n * @property {HTMLButtonElement} cursorSelectToolButton - Button to enable the\n *   select tool.\n * @property {HTMLButtonElement} cursorHandToolButton - Button to enable the\n *   hand tool.\n * @property {HTMLButtonElement} documentPropertiesButton - Button for opening\n *   the document properties dialog.\n */\n\nclass SecondaryToolbar {\n  /**\n   * @param {SecondaryToolbarOptions} options\n   * @param {HTMLDivElement} mainContainer\n   * @param {EventBus} eventBus\n   */\n  constructor(options, mainContainer, eventBus) {\n    this.toolbar = options.toolbar;\n    this.toggleButton = options.toggleButton;\n    this.toolbarButtonContainer = options.toolbarButtonContainer;\n    this.buttons = [\n      {\n        element: options.presentationModeButton,\n        eventName: \"presentationmode\",\n        close: true,\n      },\n      { element: options.openFileButton, eventName: \"openfile\", close: true },\n      { element: options.printButton, eventName: \"print\", close: true },\n      { element: options.downloadButton, eventName: \"download\", close: true },\n      { element: options.viewBookmarkButton, eventName: null, close: true },\n      { element: options.firstPageButton, eventName: \"firstpage\", close: true },\n      { element: options.lastPageButton, eventName: \"lastpage\", close: true },\n      {\n        element: options.pageRotateCwButton,\n        eventName: \"rotatecw\",\n        close: false,\n      },\n      {\n        element: options.pageRotateCcwButton,\n        eventName: \"rotateccw\",\n        close: false,\n      },\n      {\n        element: options.cursorSelectToolButton,\n        eventName: \"switchcursortool\",\n        eventDetails: { tool: CursorTool.SELECT },\n        close: true,\n      },\n      {\n        element: options.cursorHandToolButton,\n        eventName: \"switchcursortool\",\n        eventDetails: { tool: CursorTool.HAND },\n        close: true,\n      },\n      {\n        element: options.scrollVerticalButton,\n        eventName: \"switchscrollmode\",\n        eventDetails: { mode: ScrollMode.VERTICAL },\n        close: true,\n      },\n      {\n        element: options.scrollHorizontalButton,\n        eventName: \"switchscrollmode\",\n        eventDetails: { mode: ScrollMode.HORIZONTAL },\n        close: true,\n      },\n      {\n        element: options.scrollWrappedButton,\n        eventName: \"switchscrollmode\",\n        eventDetails: { mode: ScrollMode.WRAPPED },\n        close: true,\n      },\n      {\n        element: options.spreadNoneButton,\n        eventName: \"switchspreadmode\",\n        eventDetails: { mode: SpreadMode.NONE },\n        close: true,\n      },\n      {\n        element: options.spreadOddButton,\n        eventName: \"switchspreadmode\",\n        eventDetails: { mode: SpreadMode.ODD },\n        close: true,\n      },\n      {\n        element: options.spreadEvenButton,\n        eventName: \"switchspreadmode\",\n        eventDetails: { mode: SpreadMode.EVEN },\n        close: true,\n      },\n      {\n        element: options.documentPropertiesButton,\n        eventName: \"documentproperties\",\n        close: true,\n      },\n    ];\n    this.items = {\n      firstPage: options.firstPageButton,\n      lastPage: options.lastPageButton,\n      pageRotateCw: options.pageRotateCwButton,\n      pageRotateCcw: options.pageRotateCcwButton,\n    };\n\n    this.mainContainer = mainContainer;\n    this.eventBus = eventBus;\n\n    this.opened = false;\n    this.containerHeight = null;\n    this.previousContainerHeight = null;\n\n    this.reset();\n\n    // Bind the event listeners for click, cursor tool, and scroll/spread mode\n    // actions.\n    this._bindClickListeners();\n    this._bindCursorToolsListener(options);\n    this._bindScrollModeListener(options);\n    this._bindSpreadModeListener(options);\n\n    // Bind the event listener for adjusting the 'max-height' of the toolbar.\n    this.eventBus._on(\"resize\", this._setMaxHeight.bind(this));\n\n    // Hide the Scroll/Spread mode buttons, when they're not applicable to the\n    // current `BaseViewer` instance (in particular `PDFSinglePageViewer`).\n    this.eventBus._on(\"baseviewerinit\", evt => {\n      if (evt.source instanceof PDFSinglePageViewer) {\n        this.toolbarButtonContainer.classList.add(\n          \"hiddenScrollModeButtons\",\n          \"hiddenSpreadModeButtons\"\n        );\n      } else {\n        this.toolbarButtonContainer.classList.remove(\n          \"hiddenScrollModeButtons\",\n          \"hiddenSpreadModeButtons\"\n        );\n      }\n    });\n  }\n\n  /**\n   * @type {boolean}\n   */\n  get isOpen() {\n    return this.opened;\n  }\n\n  setPageNumber(pageNumber) {\n    this.pageNumber = pageNumber;\n    this._updateUIState();\n  }\n\n  setPagesCount(pagesCount) {\n    this.pagesCount = pagesCount;\n    this._updateUIState();\n  }\n\n  reset() {\n    this.pageNumber = 0;\n    this.pagesCount = 0;\n    this._updateUIState();\n\n    // Reset the Scroll/Spread buttons too, since they're document specific.\n    this.eventBus.dispatch(\"secondarytoolbarreset\", { source: this });\n  }\n\n  _updateUIState() {\n    this.items.firstPage.disabled = this.pageNumber <= 1;\n    this.items.lastPage.disabled = this.pageNumber >= this.pagesCount;\n    this.items.pageRotateCw.disabled = this.pagesCount === 0;\n    this.items.pageRotateCcw.disabled = this.pagesCount === 0;\n  }\n\n  _bindClickListeners() {\n    // Button to toggle the visibility of the secondary toolbar.\n    this.toggleButton.addEventListener(\"click\", this.toggle.bind(this));\n\n    // All items within the secondary toolbar.\n    for (const { element, eventName, close, eventDetails } of this.buttons) {\n      element.addEventListener(\"click\", evt => {\n        if (eventName !== null) {\n          const details = { source: this };\n          for (const property in eventDetails) {\n            details[property] = eventDetails[property];\n          }\n          this.eventBus.dispatch(eventName, details);\n        }\n        if (close) {\n          this.close();\n        }\n      });\n    }\n  }\n\n  _bindCursorToolsListener(buttons) {\n    this.eventBus._on(\"cursortoolchanged\", function ({ tool }) {\n      buttons.cursorSelectToolButton.classList.toggle(\n        \"toggled\",\n        tool === CursorTool.SELECT\n      );\n      buttons.cursorHandToolButton.classList.toggle(\n        \"toggled\",\n        tool === CursorTool.HAND\n      );\n    });\n  }\n\n  _bindScrollModeListener(buttons) {\n    function scrollModeChanged({ mode }) {\n      buttons.scrollVerticalButton.classList.toggle(\n        \"toggled\",\n        mode === ScrollMode.VERTICAL\n      );\n      buttons.scrollHorizontalButton.classList.toggle(\n        \"toggled\",\n        mode === ScrollMode.HORIZONTAL\n      );\n      buttons.scrollWrappedButton.classList.toggle(\n        \"toggled\",\n        mode === ScrollMode.WRAPPED\n      );\n\n      // Temporarily *disable* the Spread buttons when horizontal scrolling is\n      // enabled, since the non-default Spread modes doesn't affect the layout.\n      const isScrollModeHorizontal = mode === ScrollMode.HORIZONTAL;\n      buttons.spreadNoneButton.disabled = isScrollModeHorizontal;\n      buttons.spreadOddButton.disabled = isScrollModeHorizontal;\n      buttons.spreadEvenButton.disabled = isScrollModeHorizontal;\n    }\n    this.eventBus._on(\"scrollmodechanged\", scrollModeChanged);\n\n    this.eventBus._on(\"secondarytoolbarreset\", evt => {\n      if (evt.source === this) {\n        scrollModeChanged({ mode: ScrollMode.VERTICAL });\n      }\n    });\n  }\n\n  _bindSpreadModeListener(buttons) {\n    function spreadModeChanged({ mode }) {\n      buttons.spreadNoneButton.classList.toggle(\n        \"toggled\",\n        mode === SpreadMode.NONE\n      );\n      buttons.spreadOddButton.classList.toggle(\n        \"toggled\",\n        mode === SpreadMode.ODD\n      );\n      buttons.spreadEvenButton.classList.toggle(\n        \"toggled\",\n        mode === SpreadMode.EVEN\n      );\n    }\n    this.eventBus._on(\"spreadmodechanged\", spreadModeChanged);\n\n    this.eventBus._on(\"secondarytoolbarreset\", evt => {\n      if (evt.source === this) {\n        spreadModeChanged({ mode: SpreadMode.NONE });\n      }\n    });\n  }\n\n  open() {\n    if (this.opened) {\n      return;\n    }\n    this.opened = true;\n    this._setMaxHeight();\n\n    this.toggleButton.classList.add(\"toggled\");\n    this.toolbar.classList.remove(\"hidden\");\n  }\n\n  close() {\n    if (!this.opened) {\n      return;\n    }\n    this.opened = false;\n    this.toolbar.classList.add(\"hidden\");\n    this.toggleButton.classList.remove(\"toggled\");\n  }\n\n  toggle() {\n    if (this.opened) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _setMaxHeight() {\n    if (!this.opened) {\n      return; // Only adjust the 'max-height' if the toolbar is visible.\n    }\n    this.containerHeight = this.mainContainer.clientHeight;\n\n    if (this.containerHeight === this.previousContainerHeight) {\n      return;\n    }\n    this.toolbarButtonContainer.style.maxHeight = `${\n      this.containerHeight - SCROLLBAR_PADDING\n    }px`;\n\n    this.previousContainerHeight = this.containerHeight;\n  }\n}\n\nexport { SecondaryToolbar };\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BaseViewer } from \"./base_viewer.js\";\nimport { shadow } from \"pdfjs-lib\";\n\nclass PDFSinglePageViewer extends BaseViewer {\n  constructor(options) {\n    super(options);\n\n    this.eventBus._on(\"pagesinit\", evt => {\n      // Since the pages are placed in a `DocumentFragment`, make sure that\n      // the current page becomes visible upon loading of the document.\n      this._ensurePageViewVisible();\n    });\n  }\n\n  get _viewerElement() {\n    // Since we only want to display *one* page at a time when using the\n    // `PDFSinglePageViewer`, we cannot append them to the `viewer` DOM element.\n    // Instead, they are placed in a `DocumentFragment`, and only the current\n    // page is displayed in the viewer (refer to `this._ensurePageViewVisible`).\n    return shadow(this, \"_viewerElement\", this._shadowViewer);\n  }\n\n  _resetView() {\n    super._resetView();\n    this._previousPageNumber = 1;\n    this._shadowViewer = document.createDocumentFragment();\n    this._updateScrollDown = null;\n  }\n\n  _ensurePageViewVisible() {\n    const pageView = this._pages[this._currentPageNumber - 1];\n    const previousPageView = this._pages[this._previousPageNumber - 1];\n\n    const viewerNodes = this.viewer.childNodes;\n    switch (viewerNodes.length) {\n      case 0: // Should *only* occur on initial loading.\n        this.viewer.appendChild(pageView.div);\n        break;\n      case 1: // The normal page-switching case.\n        if (viewerNodes[0] !== previousPageView.div) {\n          throw new Error(\n            \"_ensurePageViewVisible: Unexpected previously visible page.\"\n          );\n        }\n        if (pageView === previousPageView) {\n          break; // The correct page is already visible.\n        }\n        // Switch visible pages, and reset the viewerContainer scroll position.\n        this._shadowViewer.appendChild(previousPageView.div);\n        this.viewer.appendChild(pageView.div);\n\n        this.container.scrollTop = 0;\n        break;\n      default:\n        throw new Error(\n          \"_ensurePageViewVisible: Only one page should be visible at a time.\"\n        );\n    }\n    this._previousPageNumber = this._currentPageNumber;\n  }\n\n  _scrollUpdate() {\n    if (this._updateScrollDown) {\n      this._updateScrollDown();\n    }\n    super._scrollUpdate();\n  }\n\n  _scrollIntoView({ pageDiv, pageSpot = null, pageNumber = null }) {\n    if (pageNumber) {\n      // Ensure that `this._currentPageNumber` is correct.\n      this._setCurrentPageNumber(pageNumber);\n    }\n    const scrolledDown = this._currentPageNumber >= this._previousPageNumber;\n\n    this._ensurePageViewVisible();\n    // Ensure that rendering always occurs, to avoid showing a blank page,\n    // even if the current position doesn't change when the page is scrolled.\n    this.update();\n\n    super._scrollIntoView({ pageDiv, pageSpot, pageNumber });\n\n    // Since scrolling is tracked using `requestAnimationFrame`, update the\n    // scroll direction during the next `this._scrollUpdate` invocation.\n    this._updateScrollDown = () => {\n      this.scroll.down = scrolledDown;\n      this._updateScrollDown = null;\n    };\n  }\n\n  _getVisiblePages() {\n    return this._getCurrentVisiblePage();\n  }\n\n  _updateHelper(visiblePages) {}\n\n  get _isScrollModeHorizontal() {\n    // The Scroll/Spread modes are never used in `PDFSinglePageViewer`.\n    return shadow(this, \"_isScrollModeHorizontal\", false);\n  }\n\n  _updateScrollMode() {}\n\n  _updateSpreadMode() {}\n}\n\nexport { PDFSinglePageViewer };\n","/* Copyright 2016 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  animationStarted,\n  DEFAULT_SCALE,\n  DEFAULT_SCALE_VALUE,\n  MAX_SCALE,\n  MIN_SCALE,\n  noContextMenuHandler,\n  NullL10n,\n} from \"./ui_utils.js\";\n\nconst PAGE_NUMBER_LOADING_INDICATOR = \"visiblePageIsLoading\";\n// Keep the two values below up-to-date with the values in `web/viewer.css`:\nconst SCALE_SELECT_CONTAINER_WIDTH = 140; // px\nconst SCALE_SELECT_WIDTH = 162; // px\n\n/**\n * @typedef {Object} ToolbarOptions\n * @property {HTMLDivElement} container - Container for the secondary toolbar.\n * @property {HTMLSpanElement} numPages - Label that contains number of pages.\n * @property {HTMLInputElement} pageNumber - Control for display and user input\n *   of the current page number.\n * @property {HTMLSpanElement} scaleSelectContainer - Container where scale\n *   controls are placed. The width is adjusted on UI initialization.\n * @property {HTMLSelectElement} scaleSelect - Scale selection control.\n * @property {HTMLOptionElement} customScaleOption - The item used to display\n *   a non-predefined scale.\n * @property {HTMLButtonElement} previous - Button to go to the previous page.\n * @property {HTMLButtonElement} next - Button to go to the next page.\n * @property {HTMLButtonElement} zoomIn - Button to zoom in the pages.\n * @property {HTMLButtonElement} zoomOut - Button to zoom out the pages.\n * @property {HTMLButtonElement} viewFind - Button to open find bar.\n * @property {HTMLButtonElement} openFile - Button to open a new document.\n * @property {HTMLButtonElement} presentationModeButton - Button to switch to\n *   presentation mode.\n * @property {HTMLButtonElement} download - Button to download the document.\n * @property {HTMLAElement} viewBookmark - Element to link current url of\n *   the page view.\n */\n\nclass Toolbar {\n  /**\n   * @param {ToolbarOptions} options\n   * @param {EventBus} eventBus\n   * @param {IL10n} l10n - Localization service.\n   */\n  constructor(options, eventBus, l10n = NullL10n) {\n    this.toolbar = options.container;\n    this.eventBus = eventBus;\n    this.l10n = l10n;\n    this.buttons = [\n      { element: options.previous, eventName: \"previouspage\" },\n      { element: options.next, eventName: \"nextpage\" },\n      { element: options.zoomIn, eventName: \"zoomin\" },\n      { element: options.zoomOut, eventName: \"zoomout\" },\n      { element: options.openFile, eventName: \"openfile\" },\n      { element: options.print, eventName: \"print\" },\n      {\n        element: options.presentationModeButton,\n        eventName: \"presentationmode\",\n      },\n      { element: options.download, eventName: \"download\" },\n      { element: options.viewBookmark, eventName: null },\n    ];\n    this.items = {\n      numPages: options.numPages,\n      pageNumber: options.pageNumber,\n      scaleSelectContainer: options.scaleSelectContainer,\n      scaleSelect: options.scaleSelect,\n      customScaleOption: options.customScaleOption,\n      previous: options.previous,\n      next: options.next,\n      zoomIn: options.zoomIn,\n      zoomOut: options.zoomOut,\n    };\n\n    this._wasLocalized = false;\n    this.reset();\n\n    // Bind the event listeners for click and various other actions.\n    this._bindListeners();\n  }\n\n  setPageNumber(pageNumber, pageLabel) {\n    this.pageNumber = pageNumber;\n    this.pageLabel = pageLabel;\n    this._updateUIState(false);\n  }\n\n  setPagesCount(pagesCount, hasPageLabels) {\n    this.pagesCount = pagesCount;\n    this.hasPageLabels = hasPageLabels;\n    this._updateUIState(true);\n  }\n\n  setPageScale(pageScaleValue, pageScale) {\n    this.pageScaleValue = (pageScaleValue || pageScale).toString();\n    this.pageScale = pageScale;\n    this._updateUIState(false);\n  }\n\n  reset() {\n    this.pageNumber = 0;\n    this.pageLabel = null;\n    this.hasPageLabels = false;\n    this.pagesCount = 0;\n    this.pageScaleValue = DEFAULT_SCALE_VALUE;\n    this.pageScale = DEFAULT_SCALE;\n    this._updateUIState(true);\n    this.updateLoadingIndicatorState();\n  }\n\n  _bindListeners() {\n    const { pageNumber, scaleSelect } = this.items;\n    const self = this;\n\n    // The buttons within the toolbar.\n    for (const { element, eventName } of this.buttons) {\n      element.addEventListener(\"click\", evt => {\n        if (eventName !== null) {\n          this.eventBus.dispatch(eventName, { source: this });\n        }\n      });\n    }\n    // The non-button elements within the toolbar.\n    pageNumber.addEventListener(\"click\", function () {\n      this.select();\n    });\n    pageNumber.addEventListener(\"change\", function () {\n      self.eventBus.dispatch(\"pagenumberchanged\", {\n        source: self,\n        value: this.value,\n      });\n    });\n\n    scaleSelect.addEventListener(\"change\", function () {\n      if (this.value === \"custom\") {\n        return;\n      }\n      self.eventBus.dispatch(\"scalechanged\", {\n        source: self,\n        value: this.value,\n      });\n    });\n    // Suppress context menus for some controls.\n    scaleSelect.oncontextmenu = noContextMenuHandler;\n\n    this.eventBus._on(\"localized\", () => {\n      this._wasLocalized = true;\n      this._adjustScaleWidth();\n      this._updateUIState(true);\n    });\n  }\n\n  _updateUIState(resetNumPages = false) {\n    if (!this._wasLocalized) {\n      // Don't update the UI state until we localize the toolbar.\n      return;\n    }\n    const { pageNumber, pagesCount, pageScaleValue, pageScale, items } = this;\n\n    if (resetNumPages) {\n      if (this.hasPageLabels) {\n        items.pageNumber.type = \"text\";\n      } else {\n        items.pageNumber.type = \"number\";\n        this.l10n\n          .get(\"of_pages\", { pagesCount }, \"of {{pagesCount}}\")\n          .then(msg => {\n            items.numPages.textContent = msg;\n          });\n      }\n      items.pageNumber.max = pagesCount;\n    }\n\n    if (this.hasPageLabels) {\n      items.pageNumber.value = this.pageLabel;\n      this.l10n\n        .get(\n          \"page_of_pages\",\n          { pageNumber, pagesCount },\n          \"({{pageNumber}} of {{pagesCount}})\"\n        )\n        .then(msg => {\n          items.numPages.textContent = msg;\n        });\n    } else {\n      items.pageNumber.value = pageNumber;\n    }\n\n    items.previous.disabled = pageNumber <= 1;\n    items.next.disabled = pageNumber >= pagesCount;\n\n    items.zoomOut.disabled = pageScale <= MIN_SCALE;\n    items.zoomIn.disabled = pageScale >= MAX_SCALE;\n\n    const customScale = Math.round(pageScale * 10000) / 100;\n    this.l10n\n      .get(\"page_scale_percent\", { scale: customScale }, \"{{scale}}%\")\n      .then(msg => {\n        let predefinedValueFound = false;\n        for (const option of items.scaleSelect.options) {\n          if (option.value !== pageScaleValue) {\n            option.selected = false;\n            continue;\n          }\n          option.selected = true;\n          predefinedValueFound = true;\n        }\n        if (!predefinedValueFound) {\n          items.customScaleOption.textContent = msg;\n          items.customScaleOption.selected = true;\n        }\n      });\n  }\n\n  updateLoadingIndicatorState(loading = false) {\n    const pageNumberInput = this.items.pageNumber;\n\n    pageNumberInput.classList.toggle(PAGE_NUMBER_LOADING_INDICATOR, loading);\n  }\n\n  /**\n   * Increase the width of the zoom dropdown DOM element if, and only if, it's\n   * too narrow to fit the *longest* of the localized strings.\n   * @private\n   */\n  async _adjustScaleWidth() {\n    const { items, l10n } = this;\n\n    const predefinedValuesPromise = Promise.all([\n      l10n.get(\"page_scale_auto\", null, \"Automatic Zoom\"),\n      l10n.get(\"page_scale_actual\", null, \"Actual Size\"),\n      l10n.get(\"page_scale_fit\", null, \"Page Fit\"),\n      l10n.get(\"page_scale_width\", null, \"Page Width\"),\n    ]);\n\n    // The temporary canvas is used to measure text length in the DOM.\n    let canvas = document.createElement(\"canvas\");\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"MOZCENTRAL || GENERIC\")\n    ) {\n      canvas.mozOpaque = true;\n    }\n    let ctx = canvas.getContext(\"2d\", { alpha: false });\n\n    await animationStarted;\n    const { fontSize, fontFamily } = getComputedStyle(items.scaleSelect);\n    ctx.font = `${fontSize} ${fontFamily}`;\n\n    let maxWidth = 0;\n    for (const predefinedValue of await predefinedValuesPromise) {\n      const { width } = ctx.measureText(predefinedValue);\n      if (width > maxWidth) {\n        maxWidth = width;\n      }\n    }\n    const overflow = SCALE_SELECT_WIDTH - SCALE_SELECT_CONTAINER_WIDTH;\n    maxWidth += 2 * overflow;\n\n    if (maxWidth > SCALE_SELECT_CONTAINER_WIDTH) {\n      items.scaleSelect.style.width = `${maxWidth + overflow}px`;\n      items.scaleSelectContainer.style.width = `${maxWidth}px`;\n    }\n    // Zeroing the width and height cause Firefox to release graphics resources\n    // immediately, which can greatly reduce memory consumption.\n    canvas.width = 0;\n    canvas.height = 0;\n    canvas = ctx = null;\n  }\n}\n\nexport { Toolbar };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst DEFAULT_VIEW_HISTORY_CACHE_SIZE = 20;\n\n/**\n * View History - This is a utility for saving various view parameters for\n *                recently opened files.\n *\n * The way that the view parameters are stored depends on how PDF.js is built,\n * for 'gulp <flag>' the following cases exist:\n *  - MOZCENTRAL        - uses sessionStorage.\n *  - GENERIC or CHROME - uses localStorage, if it is available.\n */\nclass ViewHistory {\n  constructor(fingerprint, cacheSize = DEFAULT_VIEW_HISTORY_CACHE_SIZE) {\n    this.fingerprint = fingerprint;\n    this.cacheSize = cacheSize;\n\n    this._initializedPromise = this._readFromStorage().then(databaseStr => {\n      const database = JSON.parse(databaseStr || \"{}\");\n      let index = -1;\n      if (!Array.isArray(database.files)) {\n        database.files = [];\n      } else {\n        while (database.files.length >= this.cacheSize) {\n          database.files.shift();\n        }\n\n        for (let i = 0, ii = database.files.length; i < ii; i++) {\n          const branch = database.files[i];\n          if (branch.fingerprint === this.fingerprint) {\n            index = i;\n            break;\n          }\n        }\n      }\n      if (index === -1) {\n        index = database.files.push({ fingerprint: this.fingerprint }) - 1;\n      }\n      this.file = database.files[index];\n      this.database = database;\n    });\n  }\n\n  async _writeToStorage() {\n    const databaseStr = JSON.stringify(this.database);\n\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n      sessionStorage.setItem(\"pdfjs.history\", databaseStr);\n      return;\n    }\n    localStorage.setItem(\"pdfjs.history\", databaseStr);\n  }\n\n  async _readFromStorage() {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n      return sessionStorage.getItem(\"pdfjs.history\");\n    }\n    return localStorage.getItem(\"pdfjs.history\");\n  }\n\n  async set(name, val) {\n    await this._initializedPromise;\n    this.file[name] = val;\n    return this._writeToStorage();\n  }\n\n  async setMultiple(properties) {\n    await this._initializedPromise;\n    for (const name in properties) {\n      this.file[name] = properties[name];\n    }\n    return this._writeToStorage();\n  }\n\n  async get(name, defaultValue) {\n    await this._initializedPromise;\n    const val = this.file[name];\n    return val !== undefined ? val : defaultValue;\n  }\n\n  async getMultiple(properties) {\n    await this._initializedPromise;\n    const values = Object.create(null);\n\n    for (const name in properties) {\n      const val = this.file[name];\n      values[name] = val !== undefined ? val : properties[name];\n    }\n    return values;\n  }\n}\n\nexport { ViewHistory };\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DefaultExternalServices, PDFViewerApplication } from \"./app.js\";\nimport { BasePreferences } from \"./preferences.js\";\nimport { DownloadManager } from \"./download_manager.js\";\nimport { GenericL10n } from \"./genericl10n.js\";\nimport { GenericScripting } from \"./generic_scripting.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"GENERIC\")) {\n  throw new Error(\n    'Module \"pdfjs-web/genericcom\" shall not be used outside ' +\n      \"GENERIC build.\"\n  );\n}\n\nconst GenericCom = {};\n\nclass GenericPreferences extends BasePreferences {\n  async _writeToStorage(prefObj) {\n    localStorage.setItem(\"pdfjs.preferences\", JSON.stringify(prefObj));\n  }\n\n  async _readFromStorage(prefObj) {\n    return JSON.parse(localStorage.getItem(\"pdfjs.preferences\"));\n  }\n}\n\nclass GenericExternalServices extends DefaultExternalServices {\n  static createDownloadManager(options) {\n    return new DownloadManager();\n  }\n\n  static createPreferences() {\n    return new GenericPreferences();\n  }\n\n  static createL10n({ locale = \"en-US\" }) {\n    return new GenericL10n(locale);\n  }\n\n  static createScripting() {\n    return new GenericScripting();\n  }\n}\nPDFViewerApplication.externalServices = GenericExternalServices;\n\nexport { GenericCom };\n","/* Copyright 2013 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppOptions, OptionKind } from \"./app_options.js\";\n\n/**\n * BasePreferences - Abstract base class for storing persistent settings.\n *   Used for settings that should be applied to all opened documents,\n *   or every time the viewer is loaded.\n */\nclass BasePreferences {\n  constructor() {\n    if (this.constructor === BasePreferences) {\n      throw new Error(\"Cannot initialize BasePreferences.\");\n    }\n    Object.defineProperty(this, \"defaults\", {\n      value: Object.freeze(\n        typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")\n          ? AppOptions.getAll(OptionKind.PREFERENCE)\n          : PDFJSDev.json(\"$ROOT/build/default_preferences.json\")\n      ),\n      writable: false,\n      enumerable: true,\n      configurable: false,\n    });\n    this.prefs = Object.assign(Object.create(null), this.defaults);\n\n    this._initializedPromise = this._readFromStorage(this.defaults).then(\n      prefs => {\n        if (!prefs) {\n          return;\n        }\n        for (const name in prefs) {\n          const defaultValue = this.defaults[name],\n            prefValue = prefs[name];\n          // Ignore preferences not present in, or whose types don't match,\n          // the default values.\n          if (\n            defaultValue === undefined ||\n            typeof prefValue !== typeof defaultValue\n          ) {\n            continue;\n          }\n          this.prefs[name] = prefValue;\n        }\n      }\n    );\n  }\n\n  /**\n   * Stub function for writing preferences to storage.\n   * @param {Object} prefObj The preferences that should be written to storage.\n   * @returns {Promise} A promise that is resolved when the preference values\n   *                    have been written.\n   */\n  async _writeToStorage(prefObj) {\n    throw new Error(\"Not implemented: _writeToStorage\");\n  }\n\n  /**\n   * Stub function for reading preferences from storage.\n   * @param {Object} prefObj The preferences that should be read from storage.\n   * @returns {Promise} A promise that is resolved with an {Object} containing\n   *                    the preferences that have been read.\n   */\n  async _readFromStorage(prefObj) {\n    throw new Error(\"Not implemented: _readFromStorage\");\n  }\n\n  /**\n   * Reset the preferences to their default values and update storage.\n   * @returns {Promise} A promise that is resolved when the preference values\n   *                    have been reset.\n   */\n  async reset() {\n    await this._initializedPromise;\n    this.prefs = Object.assign(Object.create(null), this.defaults);\n    return this._writeToStorage(this.defaults);\n  }\n\n  /**\n   * Set the value of a preference.\n   * @param {string} name The name of the preference that should be changed.\n   * @param {boolean|number|string} value The new value of the preference.\n   * @returns {Promise} A promise that is resolved when the value has been set,\n   *                    provided that the preference exists and the types match.\n   */\n  async set(name, value) {\n    await this._initializedPromise;\n    const defaultValue = this.defaults[name];\n\n    if (defaultValue === undefined) {\n      throw new Error(`Set preference: \"${name}\" is undefined.`);\n    } else if (value === undefined) {\n      throw new Error(\"Set preference: no value is specified.\");\n    }\n    const valueType = typeof value;\n    const defaultType = typeof defaultValue;\n\n    if (valueType !== defaultType) {\n      if (valueType === \"number\" && defaultType === \"string\") {\n        value = value.toString();\n      } else {\n        throw new Error(\n          `Set preference: \"${value}\" is a ${valueType}, ` +\n            `expected a ${defaultType}.`\n        );\n      }\n    } else {\n      if (valueType === \"number\" && !Number.isInteger(value)) {\n        throw new Error(`Set preference: \"${value}\" must be an integer.`);\n      }\n    }\n    this.prefs[name] = value;\n    return this._writeToStorage(this.prefs);\n  }\n\n  /**\n   * Get the value of a preference.\n   * @param {string} name The name of the preference whose value is requested.\n   * @returns {Promise} A promise resolved with a {boolean|number|string}\n   *                    containing the value of the preference.\n   */\n  async get(name) {\n    await this._initializedPromise;\n    const defaultValue = this.defaults[name];\n\n    if (defaultValue === undefined) {\n      throw new Error(`Get preference: \"${name}\" is undefined.`);\n    } else {\n      const prefValue = this.prefs[name];\n\n      if (prefValue !== undefined) {\n        return prefValue;\n      }\n    }\n    return defaultValue;\n  }\n\n  /**\n   * Get the values of all preferences.\n   * @returns {Promise} A promise that is resolved with an {Object} containing\n   *                    the values of all preferences.\n   */\n  async getAll() {\n    await this._initializedPromise;\n    return Object.assign(Object.create(null), this.defaults, this.prefs);\n  }\n}\n\nexport { BasePreferences };\n","/* Copyright 2013 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createObjectURL, createValidAbsoluteUrl } from \"pdfjs-lib\";\nimport { viewerCompatibilityParams } from \"./viewer_compatibility.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"CHROME || GENERIC\")) {\n  throw new Error(\n    'Module \"pdfjs-web/download_manager\" shall not be used ' +\n      \"outside CHROME and GENERIC builds.\"\n  );\n}\n\nfunction download(blobUrl, filename) {\n  const a = document.createElement(\"a\");\n  if (!a.click) {\n    throw new Error('DownloadManager: \"a.click()\" is not supported.');\n  }\n  a.href = blobUrl;\n  a.target = \"_parent\";\n  // Use a.download if available. This increases the likelihood that\n  // the file is downloaded instead of opened by another PDF plugin.\n  if (\"download\" in a) {\n    a.download = filename;\n  }\n  // <a> must be in the document for recent Firefox versions,\n  // otherwise .click() is ignored.\n  (document.body || document.documentElement).appendChild(a);\n  a.click();\n  a.remove();\n}\n\nclass DownloadManager {\n  downloadUrl(url, filename) {\n    if (!createValidAbsoluteUrl(url, \"http://example.com\")) {\n      return; // restricted/invalid URL\n    }\n    download(url + \"#pdfjs.action=download\", filename);\n  }\n\n  downloadData(data, filename, contentType) {\n    const blobUrl = createObjectURL(\n      data,\n      contentType,\n      viewerCompatibilityParams.disableCreateObjectURL\n    );\n    download(blobUrl, filename);\n  }\n\n  /**\n   * @param sourceEventType {string} Used to signal what triggered the download.\n   *   The version of PDF.js integrated with Firefox uses this to to determine\n   *   which dialog to show. \"save\" triggers \"save as\" and \"download\" triggers\n   *   the \"open with\" dialog.\n   */\n  download(blob, url, filename, sourceEventType = \"download\") {\n    if (viewerCompatibilityParams.disableCreateObjectURL) {\n      // URL.createObjectURL is not supported\n      this.downloadUrl(url, filename);\n      return;\n    }\n\n    const blobUrl = URL.createObjectURL(blob);\n    download(blobUrl, filename);\n  }\n}\n\nexport { DownloadManager };\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"../external/webL10n/l10n.js\";\n\nconst webL10n = document.webL10n;\n\nclass GenericL10n {\n  constructor(lang) {\n    this._lang = lang;\n    this._ready = new Promise((resolve, reject) => {\n      webL10n.setLanguage(lang, () => {\n        resolve(webL10n);\n      });\n    });\n  }\n\n  async getLanguage() {\n    const l10n = await this._ready;\n    return l10n.getLanguage();\n  }\n\n  async getDirection() {\n    const l10n = await this._ready;\n    return l10n.getDirection();\n  }\n\n  async get(property, args, fallback) {\n    const l10n = await this._ready;\n    return l10n.get(property, args, fallback);\n  }\n\n  async translate(element) {\n    const l10n = await this._ready;\n    return l10n.translate(element);\n  }\n}\n\nexport { GenericL10n };\n","/**\n * Copyright (c) 2011-2013 Fabien Cazenave, Mozilla.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to\n * deal in the Software without restriction, including without limitation the\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n * sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n */\n/*\n  Additional modifications for PDF.js project:\n    - Disables language initialization on page loading.\n    - Disables document translation on page loading.\n    - Removes consoleWarn and consoleLog and use console.log/warn directly.\n    - Removes window._ assignment.\n    - Remove compatibility code for OldIE.\n    - Replaces `String.prototype.substr()` with `String.prototype.substring()`.\n    - Removes `fireL10nReadyEvent` since the \"localized\" event it dispatches\n      is unused and may clash with an identically named event in the viewer.\n*/\n\n/*jshint browser: true, devel: true, es5: true, globalstrict: true */\n'use strict';\n\ndocument.webL10n = (function(window, document, undefined) {\n  var gL10nData = {};\n  var gTextData = '';\n  var gTextProp = 'textContent';\n  var gLanguage = '';\n  var gMacros = {};\n  var gReadyState = 'loading';\n\n\n  /**\n   * Synchronously loading l10n resources significantly minimizes flickering\n   * from displaying the app with non-localized strings and then updating the\n   * strings. Although this will block all script execution on this page, we\n   * expect that the l10n resources are available locally on flash-storage.\n   *\n   * As synchronous XHR is generally considered as a bad idea, we're still\n   * loading l10n resources asynchronously -- but we keep this in a setting,\n   * just in case... and applications using this library should hide their\n   * content until the `localized' event happens.\n   */\n\n  var gAsyncResourceLoading = true; // read-only\n\n\n  /**\n   * DOM helpers for the so-called \"HTML API\".\n   *\n   * These functions are written for modern browsers. For old versions of IE,\n   * they're overridden in the 'startup' section at the end of this file.\n   */\n\n  function getL10nResourceLinks() {\n    return document.querySelectorAll('link[type=\"application/l10n\"]');\n  }\n\n  function getL10nDictionary() {\n    var script = document.querySelector('script[type=\"application/l10n\"]');\n    // TODO: support multiple and external JSON dictionaries\n    return script ? JSON.parse(script.innerHTML) : null;\n  }\n\n  function getTranslatableChildren(element) {\n    return element ? element.querySelectorAll('*[data-l10n-id]') : [];\n  }\n\n  function getL10nAttributes(element) {\n    if (!element)\n      return {};\n\n    var l10nId = element.getAttribute('data-l10n-id');\n    var l10nArgs = element.getAttribute('data-l10n-args');\n    var args = {};\n    if (l10nArgs) {\n      try {\n        args = JSON.parse(l10nArgs);\n      } catch (e) {\n        console.warn('could not parse arguments for #' + l10nId);\n      }\n    }\n    return { id: l10nId, args: args };\n  }\n\n  function xhrLoadText(url, onSuccess, onFailure) {\n    onSuccess = onSuccess || function _onSuccess(data) {};\n    onFailure = onFailure || function _onFailure() {};\n\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', url, gAsyncResourceLoading);\n    if (xhr.overrideMimeType) {\n      xhr.overrideMimeType('text/plain; charset=utf-8');\n    }\n    xhr.onreadystatechange = function() {\n      if (xhr.readyState == 4) {\n        if (xhr.status == 200 || xhr.status === 0) {\n          onSuccess(xhr.responseText);\n        } else {\n          onFailure();\n        }\n      }\n    };\n    xhr.onerror = onFailure;\n    xhr.ontimeout = onFailure;\n\n    // in Firefox OS with the app:// protocol, trying to XHR a non-existing\n    // URL will raise an exception here -- hence this ugly try...catch.\n    try {\n      xhr.send(null);\n    } catch (e) {\n      onFailure();\n    }\n  }\n\n\n  /**\n   * l10n resource parser:\n   *  - reads (async XHR) the l10n resource matching `lang';\n   *  - imports linked resources (synchronously) when specified;\n   *  - parses the text data (fills `gL10nData' and `gTextData');\n   *  - triggers success/failure callbacks when done.\n   *\n   * @param {string} href\n   *    URL of the l10n resource to parse.\n   *\n   * @param {string} lang\n   *    locale (language) to parse. Must be a lowercase string.\n   *\n   * @param {Function} successCallback\n   *    triggered when the l10n resource has been successfully parsed.\n   *\n   * @param {Function} failureCallback\n   *    triggered when the an error has occurred.\n   *\n   * @return {void}\n   *    uses the following global variables: gL10nData, gTextData, gTextProp.\n   */\n\n  function parseResource(href, lang, successCallback, failureCallback) {\n    var baseURL = href.replace(/[^\\/]*$/, '') || './';\n\n    // handle escaped characters (backslashes) in a string\n    function evalString(text) {\n      if (text.lastIndexOf('\\\\') < 0)\n        return text;\n      return text.replace(/\\\\\\\\/g, '\\\\')\n                 .replace(/\\\\n/g, '\\n')\n                 .replace(/\\\\r/g, '\\r')\n                 .replace(/\\\\t/g, '\\t')\n                 .replace(/\\\\b/g, '\\b')\n                 .replace(/\\\\f/g, '\\f')\n                 .replace(/\\\\{/g, '{')\n                 .replace(/\\\\}/g, '}')\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/\\\\'/g, \"'\");\n    }\n\n    // parse *.properties text data into an l10n dictionary\n    // If gAsyncResourceLoading is false, then the callback will be called\n    // synchronously. Otherwise it is called asynchronously.\n    function parseProperties(text, parsedPropertiesCallback) {\n      var dictionary = {};\n\n      // token expressions\n      var reBlank = /^\\s*|\\s*$/;\n      var reComment = /^\\s*#|^\\s*$/;\n      var reSection = /^\\s*\\[(.*)\\]\\s*$/;\n      var reImport = /^\\s*@import\\s+url\\((.*)\\)\\s*$/i;\n      var reSplit = /^([^=\\s]*)\\s*=\\s*(.+)$/; // TODO: escape EOLs with '\\'\n\n      // parse the *.properties file into an associative array\n      function parseRawLines(rawText, extendedSyntax, parsedRawLinesCallback) {\n        var entries = rawText.replace(reBlank, '').split(/[\\r\\n]+/);\n        var currentLang = '*';\n        var genericLang = lang.split('-', 1)[0];\n        var skipLang = false;\n        var match = '';\n\n        function nextEntry() {\n          // Use infinite loop instead of recursion to avoid reaching the\n          // maximum recursion limit for content with many lines.\n          while (true) {\n            if (!entries.length) {\n              parsedRawLinesCallback();\n              return;\n            }\n            var line = entries.shift();\n\n            // comment or blank line?\n            if (reComment.test(line))\n              continue;\n\n            // the extended syntax supports [lang] sections and @import rules\n            if (extendedSyntax) {\n              match = reSection.exec(line);\n              if (match) { // section start?\n                // RFC 4646, section 4.4, \"All comparisons MUST be performed\n                // in a case-insensitive manner.\"\n\n                currentLang = match[1].toLowerCase();\n                skipLang = (currentLang !== '*') &&\n                    (currentLang !== lang) && (currentLang !== genericLang);\n                continue;\n              } else if (skipLang) {\n                continue;\n              }\n              match = reImport.exec(line);\n              if (match) { // @import rule?\n                loadImport(baseURL + match[1], nextEntry);\n                return;\n              }\n            }\n\n            // key-value pair\n            var tmp = line.match(reSplit);\n            if (tmp && tmp.length == 3) {\n              dictionary[tmp[1]] = evalString(tmp[2]);\n            }\n          }\n        }\n        nextEntry();\n      }\n\n      // import another *.properties file\n      function loadImport(url, callback) {\n        xhrLoadText(url, function(content) {\n          parseRawLines(content, false, callback); // don't allow recursive imports\n        }, function () {\n          console.warn(url + ' not found.');\n          callback();\n        });\n      }\n\n      // fill the dictionary\n      parseRawLines(text, true, function() {\n        parsedPropertiesCallback(dictionary);\n      });\n    }\n\n    // load and parse l10n data (warning: global variables are used here)\n    xhrLoadText(href, function(response) {\n      gTextData += response; // mostly for debug\n\n      // parse *.properties text data into an l10n dictionary\n      parseProperties(response, function(data) {\n\n        // find attribute descriptions, if any\n        for (var key in data) {\n          var id, prop, index = key.lastIndexOf('.');\n          if (index > 0) { // an attribute has been specified\n            id = key.substring(0, index);\n            prop = key.substring(index + 1);\n          } else { // no attribute: assuming text content by default\n            id = key;\n            prop = gTextProp;\n          }\n          if (!gL10nData[id]) {\n            gL10nData[id] = {};\n          }\n          gL10nData[id][prop] = data[key];\n        }\n\n        // trigger callback\n        if (successCallback) {\n          successCallback();\n        }\n      });\n    }, failureCallback);\n  }\n\n  // load and parse all resources for the specified locale\n  function loadLocale(lang, callback) {\n    // RFC 4646, section 2.1 states that language tags have to be treated as\n    // case-insensitive. Convert to lowercase for case-insensitive comparisons.\n    if (lang) {\n      lang = lang.toLowerCase();\n    }\n\n    callback = callback || function _callback() {};\n\n    clear();\n    gLanguage = lang;\n\n    // check all <link type=\"application/l10n\" href=\"...\" /> nodes\n    // and load the resource files\n    var langLinks = getL10nResourceLinks();\n    var langCount = langLinks.length;\n    if (langCount === 0) {\n      // we might have a pre-compiled dictionary instead\n      var dict = getL10nDictionary();\n      if (dict && dict.locales && dict.default_locale) {\n        console.log('using the embedded JSON directory, early way out');\n        gL10nData = dict.locales[lang];\n        if (!gL10nData) {\n          var defaultLocale = dict.default_locale.toLowerCase();\n          for (var anyCaseLang in dict.locales) {\n            anyCaseLang = anyCaseLang.toLowerCase();\n            if (anyCaseLang === lang) {\n              gL10nData = dict.locales[lang];\n              break;\n            } else if (anyCaseLang === defaultLocale) {\n              gL10nData = dict.locales[defaultLocale];\n            }\n          }\n        }\n        callback();\n      } else {\n        console.log('no resource to load, early way out');\n      }\n      // early way out\n      gReadyState = 'complete';\n      return;\n    }\n\n    // start the callback when all resources are loaded\n    var onResourceLoaded = null;\n    var gResourceCount = 0;\n    onResourceLoaded = function() {\n      gResourceCount++;\n      if (gResourceCount >= langCount) {\n        callback();\n        gReadyState = 'complete';\n      }\n    };\n\n    // load all resource files\n    function L10nResourceLink(link) {\n      var href = link.href;\n      // Note: If |gAsyncResourceLoading| is false, then the following callbacks\n      // are synchronously called.\n      this.load = function(lang, callback) {\n        parseResource(href, lang, callback, function() {\n          console.warn(href + ' not found.');\n          // lang not found, used default resource instead\n          console.warn('\"' + lang + '\" resource not found');\n          gLanguage = '';\n          // Resource not loaded, but we still need to call the callback.\n          callback();\n        });\n      };\n    }\n\n    for (var i = 0; i < langCount; i++) {\n      var resource = new L10nResourceLink(langLinks[i]);\n      resource.load(lang, onResourceLoaded);\n    }\n  }\n\n  // clear all l10n data\n  function clear() {\n    gL10nData = {};\n    gTextData = '';\n    gLanguage = '';\n    // TODO: clear all non predefined macros.\n    // There's no such macro /yet/ but we're planning to have some...\n  }\n\n\n  /**\n   * Get rules for plural forms (shared with JetPack), see:\n   * http://unicode.org/repos/cldr-tmp/trunk/diff/supplemental/language_plural_rules.html\n   * https://github.com/mozilla/addon-sdk/blob/master/python-lib/plural-rules-generator.p\n   *\n   * @param {string} lang\n   *    locale (language) used.\n   *\n   * @return {Function}\n   *    returns a function that gives the plural form name for a given integer:\n   *       var fun = getPluralRules('en');\n   *       fun(1)    -> 'one'\n   *       fun(0)    -> 'other'\n   *       fun(1000) -> 'other'.\n   */\n\n  function getPluralRules(lang) {\n    var locales2rules = {\n      'af': 3,\n      'ak': 4,\n      'am': 4,\n      'ar': 1,\n      'asa': 3,\n      'az': 0,\n      'be': 11,\n      'bem': 3,\n      'bez': 3,\n      'bg': 3,\n      'bh': 4,\n      'bm': 0,\n      'bn': 3,\n      'bo': 0,\n      'br': 20,\n      'brx': 3,\n      'bs': 11,\n      'ca': 3,\n      'cgg': 3,\n      'chr': 3,\n      'cs': 12,\n      'cy': 17,\n      'da': 3,\n      'de': 3,\n      'dv': 3,\n      'dz': 0,\n      'ee': 3,\n      'el': 3,\n      'en': 3,\n      'eo': 3,\n      'es': 3,\n      'et': 3,\n      'eu': 3,\n      'fa': 0,\n      'ff': 5,\n      'fi': 3,\n      'fil': 4,\n      'fo': 3,\n      'fr': 5,\n      'fur': 3,\n      'fy': 3,\n      'ga': 8,\n      'gd': 24,\n      'gl': 3,\n      'gsw': 3,\n      'gu': 3,\n      'guw': 4,\n      'gv': 23,\n      'ha': 3,\n      'haw': 3,\n      'he': 2,\n      'hi': 4,\n      'hr': 11,\n      'hu': 0,\n      'id': 0,\n      'ig': 0,\n      'ii': 0,\n      'is': 3,\n      'it': 3,\n      'iu': 7,\n      'ja': 0,\n      'jmc': 3,\n      'jv': 0,\n      'ka': 0,\n      'kab': 5,\n      'kaj': 3,\n      'kcg': 3,\n      'kde': 0,\n      'kea': 0,\n      'kk': 3,\n      'kl': 3,\n      'km': 0,\n      'kn': 0,\n      'ko': 0,\n      'ksb': 3,\n      'ksh': 21,\n      'ku': 3,\n      'kw': 7,\n      'lag': 18,\n      'lb': 3,\n      'lg': 3,\n      'ln': 4,\n      'lo': 0,\n      'lt': 10,\n      'lv': 6,\n      'mas': 3,\n      'mg': 4,\n      'mk': 16,\n      'ml': 3,\n      'mn': 3,\n      'mo': 9,\n      'mr': 3,\n      'ms': 0,\n      'mt': 15,\n      'my': 0,\n      'nah': 3,\n      'naq': 7,\n      'nb': 3,\n      'nd': 3,\n      'ne': 3,\n      'nl': 3,\n      'nn': 3,\n      'no': 3,\n      'nr': 3,\n      'nso': 4,\n      'ny': 3,\n      'nyn': 3,\n      'om': 3,\n      'or': 3,\n      'pa': 3,\n      'pap': 3,\n      'pl': 13,\n      'ps': 3,\n      'pt': 3,\n      'rm': 3,\n      'ro': 9,\n      'rof': 3,\n      'ru': 11,\n      'rwk': 3,\n      'sah': 0,\n      'saq': 3,\n      'se': 7,\n      'seh': 3,\n      'ses': 0,\n      'sg': 0,\n      'sh': 11,\n      'shi': 19,\n      'sk': 12,\n      'sl': 14,\n      'sma': 7,\n      'smi': 7,\n      'smj': 7,\n      'smn': 7,\n      'sms': 7,\n      'sn': 3,\n      'so': 3,\n      'sq': 3,\n      'sr': 11,\n      'ss': 3,\n      'ssy': 3,\n      'st': 3,\n      'sv': 3,\n      'sw': 3,\n      'syr': 3,\n      'ta': 3,\n      'te': 3,\n      'teo': 3,\n      'th': 0,\n      'ti': 4,\n      'tig': 3,\n      'tk': 3,\n      'tl': 4,\n      'tn': 3,\n      'to': 0,\n      'tr': 0,\n      'ts': 3,\n      'tzm': 22,\n      'uk': 11,\n      'ur': 3,\n      've': 3,\n      'vi': 0,\n      'vun': 3,\n      'wa': 4,\n      'wae': 3,\n      'wo': 0,\n      'xh': 3,\n      'xog': 3,\n      'yo': 0,\n      'zh': 0,\n      'zu': 3\n    };\n\n    // utility functions for plural rules methods\n    function isIn(n, list) {\n      return list.indexOf(n) !== -1;\n    }\n    function isBetween(n, start, end) {\n      return start <= n && n <= end;\n    }\n\n    // list of all plural rules methods:\n    // map an integer to the plural form name to use\n    var pluralRules = {\n      '0': function(n) {\n        return 'other';\n      },\n      '1': function(n) {\n        if ((isBetween((n % 100), 3, 10)))\n          return 'few';\n        if (n === 0)\n          return 'zero';\n        if ((isBetween((n % 100), 11, 99)))\n          return 'many';\n        if (n == 2)\n          return 'two';\n        if (n == 1)\n          return 'one';\n        return 'other';\n      },\n      '2': function(n) {\n        if (n !== 0 && (n % 10) === 0)\n          return 'many';\n        if (n == 2)\n          return 'two';\n        if (n == 1)\n          return 'one';\n        return 'other';\n      },\n      '3': function(n) {\n        if (n == 1)\n          return 'one';\n        return 'other';\n      },\n      '4': function(n) {\n        if ((isBetween(n, 0, 1)))\n          return 'one';\n        return 'other';\n      },\n      '5': function(n) {\n        if ((isBetween(n, 0, 2)) && n != 2)\n          return 'one';\n        return 'other';\n      },\n      '6': function(n) {\n        if (n === 0)\n          return 'zero';\n        if ((n % 10) == 1 && (n % 100) != 11)\n          return 'one';\n        return 'other';\n      },\n      '7': function(n) {\n        if (n == 2)\n          return 'two';\n        if (n == 1)\n          return 'one';\n        return 'other';\n      },\n      '8': function(n) {\n        if ((isBetween(n, 3, 6)))\n          return 'few';\n        if ((isBetween(n, 7, 10)))\n          return 'many';\n        if (n == 2)\n          return 'two';\n        if (n == 1)\n          return 'one';\n        return 'other';\n      },\n      '9': function(n) {\n        if (n === 0 || n != 1 && (isBetween((n % 100), 1, 19)))\n          return 'few';\n        if (n == 1)\n          return 'one';\n        return 'other';\n      },\n      '10': function(n) {\n        if ((isBetween((n % 10), 2, 9)) && !(isBetween((n % 100), 11, 19)))\n          return 'few';\n        if ((n % 10) == 1 && !(isBetween((n % 100), 11, 19)))\n          return 'one';\n        return 'other';\n      },\n      '11': function(n) {\n        if ((isBetween((n % 10), 2, 4)) && !(isBetween((n % 100), 12, 14)))\n          return 'few';\n        if ((n % 10) === 0 ||\n            (isBetween((n % 10), 5, 9)) ||\n            (isBetween((n % 100), 11, 14)))\n          return 'many';\n        if ((n % 10) == 1 && (n % 100) != 11)\n          return 'one';\n        return 'other';\n      },\n      '12': function(n) {\n        if ((isBetween(n, 2, 4)))\n          return 'few';\n        if (n == 1)\n          return 'one';\n        return 'other';\n      },\n      '13': function(n) {\n        if ((isBetween((n % 10), 2, 4)) && !(isBetween((n % 100), 12, 14)))\n          return 'few';\n        if (n != 1 && (isBetween((n % 10), 0, 1)) ||\n            (isBetween((n % 10), 5, 9)) ||\n            (isBetween((n % 100), 12, 14)))\n          return 'many';\n        if (n == 1)\n          return 'one';\n        return 'other';\n      },\n      '14': function(n) {\n        if ((isBetween((n % 100), 3, 4)))\n          return 'few';\n        if ((n % 100) == 2)\n          return 'two';\n        if ((n % 100) == 1)\n          return 'one';\n        return 'other';\n      },\n      '15': function(n) {\n        if (n === 0 || (isBetween((n % 100), 2, 10)))\n          return 'few';\n        if ((isBetween((n % 100), 11, 19)))\n          return 'many';\n        if (n == 1)\n          return 'one';\n        return 'other';\n      },\n      '16': function(n) {\n        if ((n % 10) == 1 && n != 11)\n          return 'one';\n        return 'other';\n      },\n      '17': function(n) {\n        if (n == 3)\n          return 'few';\n        if (n === 0)\n          return 'zero';\n        if (n == 6)\n          return 'many';\n        if (n == 2)\n          return 'two';\n        if (n == 1)\n          return 'one';\n        return 'other';\n      },\n      '18': function(n) {\n        if (n === 0)\n          return 'zero';\n        if ((isBetween(n, 0, 2)) && n !== 0 && n != 2)\n          return 'one';\n        return 'other';\n      },\n      '19': function(n) {\n        if ((isBetween(n, 2, 10)))\n          return 'few';\n        if ((isBetween(n, 0, 1)))\n          return 'one';\n        return 'other';\n      },\n      '20': function(n) {\n        if ((isBetween((n % 10), 3, 4) || ((n % 10) == 9)) && !(\n            isBetween((n % 100), 10, 19) ||\n            isBetween((n % 100), 70, 79) ||\n            isBetween((n % 100), 90, 99)\n            ))\n          return 'few';\n        if ((n % 1000000) === 0 && n !== 0)\n          return 'many';\n        if ((n % 10) == 2 && !isIn((n % 100), [12, 72, 92]))\n          return 'two';\n        if ((n % 10) == 1 && !isIn((n % 100), [11, 71, 91]))\n          return 'one';\n        return 'other';\n      },\n      '21': function(n) {\n        if (n === 0)\n          return 'zero';\n        if (n == 1)\n          return 'one';\n        return 'other';\n      },\n      '22': function(n) {\n        if ((isBetween(n, 0, 1)) || (isBetween(n, 11, 99)))\n          return 'one';\n        return 'other';\n      },\n      '23': function(n) {\n        if ((isBetween((n % 10), 1, 2)) || (n % 20) === 0)\n          return 'one';\n        return 'other';\n      },\n      '24': function(n) {\n        if ((isBetween(n, 3, 10) || isBetween(n, 13, 19)))\n          return 'few';\n        if (isIn(n, [2, 12]))\n          return 'two';\n        if (isIn(n, [1, 11]))\n          return 'one';\n        return 'other';\n      }\n    };\n\n    // return a function that gives the plural form name for a given integer\n    var index = locales2rules[lang.replace(/-.*$/, '')];\n    if (!(index in pluralRules)) {\n      console.warn('plural form unknown for [' + lang + ']');\n      return function() { return 'other'; };\n    }\n    return pluralRules[index];\n  }\n\n  // pre-defined 'plural' macro\n  gMacros.plural = function(str, param, key, prop) {\n    var n = parseFloat(param);\n    if (isNaN(n))\n      return str;\n\n    // TODO: support other properties (l20n still doesn't...)\n    if (prop != gTextProp)\n      return str;\n\n    // initialize _pluralRules\n    if (!gMacros._pluralRules) {\n      gMacros._pluralRules = getPluralRules(gLanguage);\n    }\n    var index = '[' + gMacros._pluralRules(n) + ']';\n\n    // try to find a [zero|one|two] key if it's defined\n    if (n === 0 && (key + '[zero]') in gL10nData) {\n      str = gL10nData[key + '[zero]'][prop];\n    } else if (n == 1 && (key + '[one]') in gL10nData) {\n      str = gL10nData[key + '[one]'][prop];\n    } else if (n == 2 && (key + '[two]') in gL10nData) {\n      str = gL10nData[key + '[two]'][prop];\n    } else if ((key + index) in gL10nData) {\n      str = gL10nData[key + index][prop];\n    } else if ((key + '[other]') in gL10nData) {\n      str = gL10nData[key + '[other]'][prop];\n    }\n\n    return str;\n  };\n\n\n  /**\n   * l10n dictionary functions\n   */\n\n  // fetch an l10n object, warn if not found, apply `args' if possible\n  function getL10nData(key, args, fallback) {\n    var data = gL10nData[key];\n    if (!data) {\n      console.warn('#' + key + ' is undefined.');\n      if (!fallback) {\n        return null;\n      }\n      data = fallback;\n    }\n\n    /** This is where l10n expressions should be processed.\n      * The plan is to support C-style expressions from the l20n project;\n      * until then, only two kinds of simple expressions are supported:\n      *   {[ index ]} and {{ arguments }}.\n      */\n    var rv = {};\n    for (var prop in data) {\n      var str = data[prop];\n      str = substIndexes(str, args, key, prop);\n      str = substArguments(str, args, key);\n      rv[prop] = str;\n    }\n    return rv;\n  }\n\n  // replace {[macros]} with their values\n  function substIndexes(str, args, key, prop) {\n    var reIndex = /\\{\\[\\s*([a-zA-Z]+)\\(([a-zA-Z]+)\\)\\s*\\]\\}/;\n    var reMatch = reIndex.exec(str);\n    if (!reMatch || !reMatch.length)\n      return str;\n\n    // an index/macro has been found\n    // Note: at the moment, only one parameter is supported\n    var macroName = reMatch[1];\n    var paramName = reMatch[2];\n    var param;\n    if (args && paramName in args) {\n      param = args[paramName];\n    } else if (paramName in gL10nData) {\n      param = gL10nData[paramName];\n    }\n\n    // there's no macro parser yet: it has to be defined in gMacros\n    if (macroName in gMacros) {\n      var macro = gMacros[macroName];\n      str = macro(str, param, key, prop);\n    }\n    return str;\n  }\n\n  // replace {{arguments}} with their values\n  function substArguments(str, args, key) {\n    var reArgs = /\\{\\{\\s*(.+?)\\s*\\}\\}/g;\n    return str.replace(reArgs, function(matched_text, arg) {\n      if (args && arg in args) {\n        return args[arg];\n      }\n      if (arg in gL10nData) {\n        return gL10nData[arg];\n      }\n      console.log('argument {{' + arg + '}} for #' + key + ' is undefined.');\n      return matched_text;\n    });\n  }\n\n  // translate an HTML element\n  function translateElement(element) {\n    var l10n = getL10nAttributes(element);\n    if (!l10n.id)\n      return;\n\n    // get the related l10n object\n    var data = getL10nData(l10n.id, l10n.args);\n    if (!data) {\n      console.warn('#' + l10n.id + ' is undefined.');\n      return;\n    }\n\n    // translate element (TODO: security checks?)\n    if (data[gTextProp]) { // XXX\n      if (getChildElementCount(element) === 0) {\n        element[gTextProp] = data[gTextProp];\n      } else {\n        // this element has element children: replace the content of the first\n        // (non-empty) child textNode and clear other child textNodes\n        var children = element.childNodes;\n        var found = false;\n        for (var i = 0, l = children.length; i < l; i++) {\n          if (children[i].nodeType === 3 && /\\S/.test(children[i].nodeValue)) {\n            if (found) {\n              children[i].nodeValue = '';\n            } else {\n              children[i].nodeValue = data[gTextProp];\n              found = true;\n            }\n          }\n        }\n        // if no (non-empty) textNode is found, insert a textNode before the\n        // first element child.\n        if (!found) {\n          var textNode = document.createTextNode(data[gTextProp]);\n          element.insertBefore(textNode, element.firstChild);\n        }\n      }\n      delete data[gTextProp];\n    }\n\n    for (var k in data) {\n      element[k] = data[k];\n    }\n  }\n\n  // webkit browsers don't currently support 'children' on SVG elements...\n  function getChildElementCount(element) {\n    if (element.children) {\n      return element.children.length;\n    }\n    if (typeof element.childElementCount !== 'undefined') {\n      return element.childElementCount;\n    }\n    var count = 0;\n    for (var i = 0; i < element.childNodes.length; i++) {\n      count += element.nodeType === 1 ? 1 : 0;\n    }\n    return count;\n  }\n\n  // translate an HTML subtree\n  function translateFragment(element) {\n    element = element || document.documentElement;\n\n    // check all translatable children (= w/ a `data-l10n-id' attribute)\n    var children = getTranslatableChildren(element);\n    var elementCount = children.length;\n    for (var i = 0; i < elementCount; i++) {\n      translateElement(children[i]);\n    }\n\n    // translate element itself if necessary\n    translateElement(element);\n  }\n\n  return {\n    // get a localized string\n    get: function(key, args, fallbackString) {\n      var index = key.lastIndexOf('.');\n      var prop = gTextProp;\n      if (index > 0) { // An attribute has been specified\n        prop = key.substring(index + 1);\n        key = key.substring(0, index);\n      }\n      var fallback;\n      if (fallbackString) {\n        fallback = {};\n        fallback[prop] = fallbackString;\n      }\n      var data = getL10nData(key, args, fallback);\n      if (data && prop in data) {\n        return data[prop];\n      }\n      return '{{' + key + '}}';\n    },\n\n    // debug\n    getData: function() { return gL10nData; },\n    getText: function() { return gTextData; },\n\n    // get|set the document language\n    getLanguage: function() { return gLanguage; },\n    setLanguage: function(lang, callback) {\n      loadLocale(lang, function() {\n        if (callback)\n          callback();\n      });\n    },\n\n    // get the direction (ltr|rtl) of the current language\n    getDirection: function() {\n      // http://www.w3.org/International/questions/qa-scripts\n      // Arabic, Hebrew, Farsi, Pashto, Urdu\n      var rtlList = ['ar', 'he', 'fa', 'ps', 'ur'];\n      var shortCode = gLanguage.split('-', 1)[0];\n      return (rtlList.indexOf(shortCode) >= 0) ? 'rtl' : 'ltr';\n    },\n\n    // translate an element or document fragment\n    translate: translateFragment,\n\n    // this can be used to prevent race conditions\n    getReadyState: function() { return gReadyState; },\n    ready: function(callback) {\n      if (!callback) {\n        return;\n      } else if (gReadyState == 'complete' || gReadyState == 'interactive') {\n        window.setTimeout(function() {\n          callback();\n        });\n      } else if (document.addEventListener) {\n        document.addEventListener('localized', function once() {\n          document.removeEventListener('localized', once);\n          callback();\n        });\n      }\n    }\n  };\n}) (window, document);\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppOptions } from \"./app_options.js\";\nimport { loadScript } from \"pdfjs-lib\";\n\nclass GenericScripting {\n  constructor() {\n    this._ready = loadScript(\n      AppOptions.get(\"sandboxBundleSrc\"),\n      /* removeScriptElement = */ true\n    ).then(() => {\n      return window.pdfjsSandbox.QuickJSSandbox();\n    });\n  }\n\n  async createSandbox(data) {\n    const sandbox = await this._ready;\n    sandbox.create(data);\n  }\n\n  async dispatchEventInSandbox(event) {\n    const sandbox = await this._ready;\n    sandbox.dispatchEvent(event);\n  }\n\n  async destroySandbox() {\n    const sandbox = await this._ready;\n    sandbox.nukeSandbox();\n  }\n}\n\nexport { GenericScripting };\n","/* Copyright 2016 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CSS_UNITS, NullL10n } from \"./ui_utils.js\";\nimport { PDFPrintServiceFactory, PDFViewerApplication } from \"./app.js\";\nimport { viewerCompatibilityParams } from \"./viewer_compatibility.js\";\n\nlet activeService = null;\nlet overlayManager = null;\n\n// Renders the page to the canvas of the given print service, and returns\n// the suggested dimensions of the output page.\nfunction renderPage(\n  activeServiceOnEntry,\n  pdfDocument,\n  pageNumber,\n  size,\n  printResolution,\n  optionalContentConfigPromise\n) {\n  const scratchCanvas = activeService.scratchCanvas;\n\n  // The size of the canvas in pixels for printing.\n  const PRINT_UNITS = printResolution / 72.0;\n  scratchCanvas.width = Math.floor(size.width * PRINT_UNITS);\n  scratchCanvas.height = Math.floor(size.height * PRINT_UNITS);\n\n  // The physical size of the img as specified by the PDF document.\n  const width = Math.floor(size.width * CSS_UNITS) + \"px\";\n  const height = Math.floor(size.height * CSS_UNITS) + \"px\";\n\n  const ctx = scratchCanvas.getContext(\"2d\");\n  ctx.save();\n  ctx.fillStyle = \"rgb(255, 255, 255)\";\n  ctx.fillRect(0, 0, scratchCanvas.width, scratchCanvas.height);\n  ctx.restore();\n\n  return pdfDocument\n    .getPage(pageNumber)\n    .then(function (pdfPage) {\n      const renderContext = {\n        canvasContext: ctx,\n        transform: [PRINT_UNITS, 0, 0, PRINT_UNITS, 0, 0],\n        viewport: pdfPage.getViewport({ scale: 1, rotation: size.rotation }),\n        intent: \"print\",\n        annotationStorage: pdfDocument.annotationStorage,\n        optionalContentConfigPromise,\n      };\n      return pdfPage.render(renderContext).promise;\n    })\n    .then(function () {\n      return {\n        width,\n        height,\n      };\n    });\n}\n\nfunction PDFPrintService(\n  pdfDocument,\n  pagesOverview,\n  printContainer,\n  printResolution,\n  optionalContentConfigPromise = null,\n  l10n\n) {\n  this.pdfDocument = pdfDocument;\n  this.pagesOverview = pagesOverview;\n  this.printContainer = printContainer;\n  this._printResolution = printResolution || 150;\n  this._optionalContentConfigPromise =\n    optionalContentConfigPromise || pdfDocument.getOptionalContentConfig();\n  this.l10n = l10n || NullL10n;\n  this.currentPage = -1;\n  // The temporary canvas where renderPage paints one page at a time.\n  this.scratchCanvas = document.createElement(\"canvas\");\n}\n\nPDFPrintService.prototype = {\n  layout() {\n    this.throwIfInactive();\n\n    const body = document.querySelector(\"body\");\n    body.setAttribute(\"data-pdfjsprinting\", true);\n\n    const hasEqualPageSizes = this.pagesOverview.every(function (size) {\n      return (\n        size.width === this.pagesOverview[0].width &&\n        size.height === this.pagesOverview[0].height\n      );\n    }, this);\n    if (!hasEqualPageSizes) {\n      console.warn(\n        \"Not all pages have the same size. The printed \" +\n          \"result may be incorrect!\"\n      );\n    }\n\n    // Insert a @page + size rule to make sure that the page size is correctly\n    // set. Note that we assume that all pages have the same size, because\n    // variable-size pages are not supported yet (e.g. in Chrome & Firefox).\n    // TODO(robwu): Use named pages when size calculation bugs get resolved\n    // (e.g. https://crbug.com/355116) AND when support for named pages is\n    // added (http://www.w3.org/TR/css3-page/#using-named-pages).\n    // In browsers where @page + size is not supported (such as Firefox,\n    // https://bugzil.la/851441), the next stylesheet will be ignored and the\n    // user has to select the correct paper size in the UI if wanted.\n    this.pageStyleSheet = document.createElement(\"style\");\n    const pageSize = this.pagesOverview[0];\n    this.pageStyleSheet.textContent =\n      // \"size:<width> <height>\" is what we need. But also add \"A4\" because\n      // Firefox incorrectly reports support for the other value.\n      \"@supports ((size:A4) and (size:1pt 1pt)) {\" +\n      \"@page { size: \" +\n      pageSize.width +\n      \"pt \" +\n      pageSize.height +\n      \"pt;}\" +\n      \"}\";\n    body.appendChild(this.pageStyleSheet);\n  },\n\n  destroy() {\n    if (activeService !== this) {\n      // |activeService| cannot be replaced without calling destroy() first,\n      // so if it differs then an external consumer has a stale reference to\n      // us.\n      return;\n    }\n    this.printContainer.textContent = \"\";\n\n    const body = document.querySelector(\"body\");\n    body.removeAttribute(\"data-pdfjsprinting\");\n\n    if (this.pageStyleSheet) {\n      this.pageStyleSheet.remove();\n      this.pageStyleSheet = null;\n    }\n    this.scratchCanvas.width = this.scratchCanvas.height = 0;\n    this.scratchCanvas = null;\n    activeService = null;\n    ensureOverlay().then(function () {\n      if (overlayManager.active !== \"printServiceOverlay\") {\n        return; // overlay was already closed\n      }\n      overlayManager.close(\"printServiceOverlay\");\n    });\n  },\n\n  renderPages() {\n    const pageCount = this.pagesOverview.length;\n    const renderNextPage = (resolve, reject) => {\n      this.throwIfInactive();\n      if (++this.currentPage >= pageCount) {\n        renderProgress(pageCount, pageCount, this.l10n);\n        resolve();\n        return;\n      }\n      const index = this.currentPage;\n      renderProgress(index, pageCount, this.l10n);\n      renderPage(\n        this,\n        this.pdfDocument,\n        /* pageNumber = */ index + 1,\n        this.pagesOverview[index],\n        this._printResolution,\n        this._optionalContentConfigPromise\n      )\n        .then(this.useRenderedPage.bind(this))\n        .then(function () {\n          renderNextPage(resolve, reject);\n        }, reject);\n    };\n    return new Promise(renderNextPage);\n  },\n\n  useRenderedPage(printItem) {\n    this.throwIfInactive();\n    const img = document.createElement(\"img\");\n    img.style.width = printItem.width;\n    img.style.height = printItem.height;\n\n    const scratchCanvas = this.scratchCanvas;\n    if (\n      \"toBlob\" in scratchCanvas &&\n      !viewerCompatibilityParams.disableCreateObjectURL\n    ) {\n      scratchCanvas.toBlob(function (blob) {\n        img.src = URL.createObjectURL(blob);\n      });\n    } else {\n      img.src = scratchCanvas.toDataURL();\n    }\n\n    const wrapper = document.createElement(\"div\");\n    wrapper.appendChild(img);\n    this.printContainer.appendChild(wrapper);\n\n    return new Promise(function (resolve, reject) {\n      img.onload = resolve;\n      img.onerror = reject;\n    });\n  },\n\n  performPrint() {\n    this.throwIfInactive();\n    return new Promise(resolve => {\n      // Push window.print in the macrotask queue to avoid being affected by\n      // the deprecation of running print() code in a microtask, see\n      // https://github.com/mozilla/pdf.js/issues/7547.\n      setTimeout(() => {\n        if (!this.active) {\n          resolve();\n          return;\n        }\n        print.call(window);\n        // Delay promise resolution in case print() was not synchronous.\n        setTimeout(resolve, 20); // Tidy-up.\n      }, 0);\n    });\n  },\n\n  get active() {\n    return this === activeService;\n  },\n\n  throwIfInactive() {\n    if (!this.active) {\n      throw new Error(\"This print request was cancelled or completed.\");\n    }\n  },\n};\n\nconst print = window.print;\nwindow.print = function () {\n  if (activeService) {\n    console.warn(\"Ignored window.print() because of a pending print job.\");\n    return;\n  }\n  ensureOverlay().then(function () {\n    if (activeService) {\n      overlayManager.open(\"printServiceOverlay\");\n    }\n  });\n\n  try {\n    dispatchEvent(\"beforeprint\");\n  } finally {\n    if (!activeService) {\n      console.error(\"Expected print service to be initialized.\");\n      ensureOverlay().then(function () {\n        if (overlayManager.active === \"printServiceOverlay\") {\n          overlayManager.close(\"printServiceOverlay\");\n        }\n      });\n      return; // eslint-disable-line no-unsafe-finally\n    }\n    const activeServiceOnEntry = activeService;\n    activeService\n      .renderPages()\n      .then(function () {\n        return activeServiceOnEntry.performPrint();\n      })\n      .catch(function () {\n        // Ignore any error messages.\n      })\n      .then(function () {\n        // aborts acts on the \"active\" print request, so we need to check\n        // whether the print request (activeServiceOnEntry) is still active.\n        // Without the check, an unrelated print request (created after aborting\n        // this print request while the pages were being generated) would be\n        // aborted.\n        if (activeServiceOnEntry.active) {\n          abort();\n        }\n      });\n  }\n};\n\nfunction dispatchEvent(eventType) {\n  const event = document.createEvent(\"CustomEvent\");\n  event.initCustomEvent(eventType, false, false, \"custom\");\n  window.dispatchEvent(event);\n}\n\nfunction abort() {\n  if (activeService) {\n    activeService.destroy();\n    dispatchEvent(\"afterprint\");\n  }\n}\n\nfunction renderProgress(index, total, l10n) {\n  const progressContainer = document.getElementById(\"printServiceOverlay\");\n  const progress = Math.round((100 * index) / total);\n  const progressBar = progressContainer.querySelector(\"progress\");\n  const progressPerc = progressContainer.querySelector(\".relative-progress\");\n  progressBar.value = progress;\n  l10n.get(\"print_progress_percent\", { progress }, progress + \"%\").then(msg => {\n    progressPerc.textContent = msg;\n  });\n}\n\nwindow.addEventListener(\n  \"keydown\",\n  function (event) {\n    // Intercept Cmd/Ctrl + P in all browsers.\n    // Also intercept Cmd/Ctrl + Shift + P in Chrome and Opera\n    if (\n      event.keyCode === /* P= */ 80 &&\n      (event.ctrlKey || event.metaKey) &&\n      !event.altKey &&\n      (!event.shiftKey || window.chrome || window.opera)\n    ) {\n      window.print();\n\n      // The (browser) print dialog cannot be prevented from being shown in\n      // IE11.\n      event.preventDefault();\n      if (event.stopImmediatePropagation) {\n        event.stopImmediatePropagation();\n      } else {\n        event.stopPropagation();\n      }\n    }\n  },\n  true\n);\n\nif (\"onbeforeprint\" in window) {\n  // Do not propagate before/afterprint events when they are not triggered\n  // from within this polyfill. (FF / Chrome 63+).\n  const stopPropagationIfNeeded = function (event) {\n    if (event.detail !== \"custom\" && event.stopImmediatePropagation) {\n      event.stopImmediatePropagation();\n    }\n  };\n  window.addEventListener(\"beforeprint\", stopPropagationIfNeeded);\n  window.addEventListener(\"afterprint\", stopPropagationIfNeeded);\n}\n\nlet overlayPromise;\nfunction ensureOverlay() {\n  if (!overlayPromise) {\n    overlayManager = PDFViewerApplication.overlayManager;\n    if (!overlayManager) {\n      throw new Error(\"The overlay manager has not yet been initialized.\");\n    }\n\n    overlayPromise = overlayManager.register(\n      \"printServiceOverlay\",\n      document.getElementById(\"printServiceOverlay\"),\n      abort,\n      true\n    );\n    document.getElementById(\"printCancel\").onclick = abort;\n  }\n  return overlayPromise;\n}\n\nPDFPrintServiceFactory.instance = {\n  supportsPrinting: true,\n\n  createPrintService(\n    pdfDocument,\n    pagesOverview,\n    printContainer,\n    printResolution,\n    optionalContentConfigPromise,\n    l10n\n  ) {\n    if (activeService) {\n      throw new Error(\"The print service is created and active.\");\n    }\n    activeService = new PDFPrintService(\n      pdfDocument,\n      pagesOverview,\n      printContainer,\n      printResolution,\n      optionalContentConfigPromise,\n      l10n\n    );\n    return activeService;\n  },\n};\n\nexport { PDFPrintService };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module\n__webpack_require__(0);\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}